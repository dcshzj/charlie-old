{"authorDailyContributionsMap":{"Joshua Lee":[{"date":"2016-08-24","commitResults":[{"hash":"9ffcef4d1e3b09a433153f5e59148a3803075156","messageTitle":"added .DS_Store to gitignore","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":0}}}]},{"date":"2016-09-07","commitResults":[{"hash":"23e53fb4039d02fb2403538bc073452d34ce3026","messageTitle":"implemented help command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":10}}}]},{"date":"2016-09-14","commitResults":[{"hash":"b60fc021b720468582bb1348e468d41be3fff481","messageTitle":"cleared command box after successfully executing command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":1}}},{"hash":"126d62a4ef96e296922a325adcad4ce90e8a6929","messageTitle":"fixed COMMAND_INPUT_FIELD_ID for guitests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2016-09-20","commitResults":[{"hash":"362af07525b7696bd91e05bbd7d3ef0d380dc72e","messageTitle":"implemented select command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":188,"deletions":2}}},{"hash":"fc1c3bb84e389b013d078274ed22a1c4ee511bff","messageTitle":"[11] UserGuide now loads in the help window","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":0,"deletions":76},"java":{"insertions":5,"deletions":3},"js":{"insertions":0,"deletions":37},"html":{"insertions":0,"deletions":182}}},{"hash":"b9e4c32cdf2b1f926685459615a6ca8f471a5b09","messageTitle":"[72] updated UserGuide.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":16}}}]},{"date":"2016-09-28","commitResults":[{"hash":"221d9962dae0e2dfcef629c2526539dc38fc1fae","messageTitle":"removed OsDetector and all related methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":192}}}]},{"date":"2016-09-29","commitResults":[{"hash":"ed1b128561bd9ec3c47d089bb99845524f3c38f4","messageTitle":"removed unused code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":562}}},{"hash":"822552a7760a3051777f44b35f8572e594639a89","messageTitle":"Updated badges","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2016-10-07","commitResults":[{"hash":"ef2543e16c999b3b647731410bf0495513d83bec","messageTitle":"[95] Reduce duplication between ConfigUtil and JsonUserPrefsStorage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":131},"json":{"insertions":0,"deletions":0}}}]},{"date":"2016-10-15","commitResults":[{"hash":"2034f1740c8d85b01835ec7241743c5c507d9935","messageTitle":"[91] Separate CommandBox and ResultsDisplay","messageBody":"Separate CommandBox and ResultsDisplay #91","fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":3},"java":{"insertions":72,"deletions":48}}}]}],"Martin Choo":[{"date":"2016-09-09","commitResults":[{"hash":"6d8c91f00b6d145c1300afe766fec22f146d8bc7","messageTitle":"[26] Use util.logging\u0027s logger and update logging documentation","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":7},"java":{"insertions":102,"deletions":190},"md":{"insertions":33,"deletions":50},"json":{"insertions":0,"deletions":72}}}]},{"date":"2016-09-13","commitResults":[{"hash":"7eb03772c52564c3ea28486dc3fd74c7e65dd675","messageTitle":"[25] Increase height of StatusBarHeader","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":2}}}]},{"date":"2016-09-14","commitResults":[{"hash":"5e630cf5f4a31ebae9913f64f113c3b96ea4761f","messageTitle":"[23] Extract CommandBox as a separate UI component","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":13,"deletions":5},"java":{"insertions":108,"deletions":49},"gitignore":{"insertions":1,"deletions":6}}},{"hash":"4653f0e3682af178e8ea0d5c70f9e2dc9a51dca9","messageTitle":"[48] Tweak GUI to emphasize active components","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":22,"deletions":8},"css":{"insertions":9,"deletions":1},"java":{"insertions":19,"deletions":23},"gitignore":{"insertions":1,"deletions":0}}}]},{"date":"2016-09-16","commitResults":[{"hash":"7127241001afea8123a38dd6ea1d2596d7406a06","messageTitle":"[49] Setup CI and ensure tests are passing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":58},"md":{"insertions":13,"deletions":3},"yml":{"insertions":13,"deletions":0}}}]},{"date":"2016-09-19","commitResults":[{"hash":"6544d4b74b097356cee7d1870f6600db839bbbfc","messageTitle":"[62] Gradle is not running unit tests","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2016-09-20","commitResults":[{"hash":"3eeda193204ff169fb5579e0e977c8eed6a70301","messageTitle":"[65] Clean up build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":37},"md":{"insertions":1,"deletions":0}}}]},{"date":"2016-09-26","commitResults":[{"hash":"d21db896c1bd9511844a124ba060f249132c031f","messageTitle":"[43] Add eclipse project files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0},"classpath":{"insertions":21,"deletions":0},"gitignore":{"insertions":1,"deletions":0},"md":{"insertions":3,"deletions":2},"project":{"insertions":23,"deletions":0},"prefs":{"insertions":10,"deletions":0}}}]},{"date":"2016-09-28","commitResults":[{"hash":"241ca32006dab9e4c58189e306f5a3b80463d3cc","messageTitle":"[122, 126] Set rolling file for logging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":5},"md":{"insertions":7,"deletions":6}}}]},{"date":"2016-10-12","commitResults":[{"hash":"5a6f6498876b842202966249512e1a24d347311d","messageTitle":"[50] Set up check style","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":1},"xsl":{"insertions":0,"deletions":195},"java":{"insertions":186,"deletions":172},"xml":{"insertions":30,"deletions":102},"yml":{"insertions":1,"deletions":1}}}]},{"date":"2016-10-22","commitResults":[{"hash":"d6ade39ab6da799f0357b2f9477addd76f2f3942","messageTitle":"[#156] Document checkstyle use (#157)","messageBody":"* Added checkstyle plugin for eclipse and add some documentation on how to use it.\r\n\r\n* Attempted to fix invalid values in checkstyle configuration. Added more detailed instructions to setup checkstyle after project import.\r\n\r\n* Added localised checkstyle-related files to gitignore.\r\n\r\n* Removed eclipse plugin settings files.\r\n\r\n* Added tip to click on the text again after selection.\r\n","fileTypesAndContributionMap":{"classpath":{"insertions":1,"deletions":1},"gitignore":{"insertions":2,"deletions":0},"xml":{"insertions":1,"deletions":11},"md":{"insertions":24,"deletions":1},"project":{"insertions":26,"deletions":0},"prefs":{"insertions":0,"deletions":11}}}]},{"date":"2016-12-18","commitResults":[{"hash":"c557d20f894eec40b3eed690a91a0fde9f6182d1","messageTitle":"[161] Include test code in coverage analysis","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":11,"deletions":3}}}]}],"VeryLazyBoy":[{"date":"2017-03-19","commitResults":[{"hash":"98ad812f3113e7b4292c5b71ad4cf6de375ae7eb","messageTitle":"UserGuide.md: add missing numbers to ToC links","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"4ca5e64a6e1bcfcde088e593df7db75503ba8e9d","messageTitle":"DeveloperGuide.md: add missing numbers to ToC links","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":5,"deletions":5}}}]}],"Wang Yiming":[{"date":"2017-10-03","commitResults":[{"hash":"4979d0586f42dbd5be52648531bc3fd355d3edc6","messageTitle":"Add short form of find","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"499b31bc1a852e7c9d12242ed8f87ab5117cdde2","messageTitle":"Add short form of function \"add\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"34fbacaa4463d04746134259742545f2d8efa134","messageTitle":"Update ClearCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"cbb70b9cf053d4620759e631a824523b87426dff","messageTitle":"Update DeleteCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c7ca99a8dd72de559af7fb5f20c97ed191f5680a","messageTitle":"Update EditCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"f355387073a38da62290aff14e19b8a70e362001","messageTitle":"Update FindCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8277d5b8d337c6d12f34afb470d4bedf1663e1f8","messageTitle":"Update HistoryCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"315ea767135c227227d8b5ff6578307ebe654153","messageTitle":"Update ListCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8027d8184e781c04d0cf7c8eb72f44f897a5de04","messageTitle":"Update RedoCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"f01e3cd58550a422393675ed4f28c421cd963168","messageTitle":"Update SelectCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"094eb240373c7b71b14616cb3dbf74ce7aee675b","messageTitle":"Update UndoCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"dcc0c288d510b78c613e3e742a7b512fc3e3fbfb","messageTitle":"Update AddressBookParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"6c4ee3f8d50b65bb20cc03422d46416ade9cb392","messageTitle":"Update UserGuide","messageBody":"provides short form for some commands","fileTypesAndContributionMap":{"adoc":{"insertions":20,"deletions":20}}}]},{"date":"2017-10-10","commitResults":[{"hash":"5f33a44b4a7974812b96c39622a896ad974f80af","messageTitle":"Update UserGuide.adoc","messageBody":"1. Add a new field \"faculty\" in add command\r\n2. Add new commands \"sort\" and \"deletetag\"\r\n3. Provide more examples in several commands","fileTypesAndContributionMap":{"adoc":{"insertions":92,"deletions":60}}},{"hash":"2642e039b96496b018d35c68bd069ca0b8d59a75","messageTitle":"Update UserGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":318,"deletions":81}}}]},{"date":"2017-10-15","commitResults":[{"hash":"66a4b8f594de25faeae4a15b1e8d0676e351ff78","messageTitle":"Update UserGuide.adoc","messageBody":"1. update the add and delete tag commands\r\n2. update some shorthand commands\r\n3. update commands summary","fileTypesAndContributionMap":{"adoc":{"insertions":54,"deletions":12}}}]},{"date":"2017-10-16","commitResults":[{"hash":"6b75d90ae6e094e27015448f4971b804fe84b554","messageTitle":"Update PersonCard.java","messageBody":"random color for tag","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":2}}},{"hash":"46364a86af26a0da8ce264c233f3d8c260f0fbf4","messageTitle":"Update AddressBookParserTest.java","messageBody":"add alias test for some commands\r\n(add, clear, delete, edit, find, history, list, select)","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"4f85af43a3e92585d4dce0261a15c087d49418e1","messageTitle":"white space edit","messageBody":"edit white space","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"0c40cc3e1aa44854a78d765358cb99c6bb9daa16","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"dec153b9cc2ac5be183bf31d7cd68a81cd521481","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8394f40eb1314074f57a0e6e86bcfed7d7ad612c","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"ce742290c2498633b32fbff0481d03b3735ec601","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"16ad4dd04c512fb08760ea661f6b6a1eafb446e5","messageTitle":"Update AddressBookParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"91010cb608a52df4c53632307fe1c66a808396fd","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}},{"hash":"563ab894003a1155e5be7bbb1ad9bb90b2de73e9","messageTitle":"Revert \"add some parser test\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":89}}},{"hash":"a80f285697999554dbfb13b33980ebd28b6333ab","messageTitle":"Update AddressBookParserTest.java","messageBody":"Change the underscore","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":22}}},{"hash":"4bfc08e2d060420fc8a7cfb5e515bde705f9ee69","messageTitle":"Create AddTagCommand","messageBody":"","fileTypesAndContributionMap":{"AddTagCommand":{"insertions":109,"deletions":0}}},{"hash":"81dafe6e58bd6db04195ece0e48154daa5d15f0b","messageTitle":"Create AddTagCommandParser","messageBody":"","fileTypesAndContributionMap":{"AddTagCommandParser":{"insertions":66,"deletions":0}}},{"hash":"f0be1560dbac3bb1c3a0da0f077563a8af44f5d8","messageTitle":"Create DeleteTagCommandParser","messageBody":"","fileTypesAndContributionMap":{"DeleteTagCommandParser":{"insertions":66,"deletions":0}}},{"hash":"dcd610c4060e7188eb0861a4869253363c201b82","messageTitle":"Create DeleteTagCommand","messageBody":"","fileTypesAndContributionMap":{"DeleteTagCommand":{"insertions":108,"deletions":0}}},{"hash":"b3cdbfb057fd63372934bdb2bf2bb6b9918e31b2","messageTitle":"Update AddressBookParser.java","messageBody":"1. addtag command\r\n2. deletetag command","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"d8dcc0465865338fc5eac8366b23099681588ed5","messageTitle":"Update Model.java","messageBody":"1. addTag\r\n2. deleteTag","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"8912a77f858840a38d49a45d3516a5d94d9f36f4","messageTitle":"Update ModelManager.java","messageBody":"1. addTag\r\n2. deleteTag","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":0}}},{"hash":"5a038920749d2068b7ade7e16e420e001e462f5d","messageTitle":"Rename AddTagCommand to AddTagCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"e44223480eb656a3b46ae50f41830447cb384922","messageTitle":"Rename DeleteTagCommand to DeleteTagCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"c576aa0c63961055b378bd3b4aa6cba695e2e43a","messageTitle":"Rename AddTagCommandParser to AddTagCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"83218ae51d550ee51e0fd16343604f92d1221f8f","messageTitle":"Rename DeleteTagCommandParser to DeleteTagCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"738f3768e31ade37da391539134d2c45233ea148","messageTitle":"Update ModelManager.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"de948c8f66fa74d11c818fc0ce934460ebe58b01","messageTitle":"Update AddTagCommand.java","messageBody":"follow coding standard","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"f8bbc1d2224dbde30f77e1de766a4109c7b68c01","messageTitle":"Add test case for addTag and deleteTag","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"6c2f1e8760187933e345b68302f10995b6ab5cc7","messageTitle":"fix trailing whitespace","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2017-10-17","commitResults":[{"hash":"629cc8d8bad91a51fd24612a663985ea6397f59b","messageTitle":"fix lexicographical order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"f64d7fd77fa918aa0a44e82dc2794f3cc81eef91","messageTitle":"Create DeleteTagCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":0}}},{"hash":"f9e0d50a85ebdf278d9618cf0cf7770982012b6d","messageTitle":"Delete DeleteTagCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":66}}},{"hash":"c8e69d1ab7e11717d22ee42a1d782bc22fb10418","messageTitle":"fix lexicographical order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-20","commitResults":[{"hash":"353ef9596405544e0a13553029fb30bbd9c7fbbc","messageTitle":"Update DeveloperGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":71,"deletions":0}}},{"hash":"811eaaa784a1999e76fb6830dade4abf724f479c","messageTitle":"Update UserGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":64,"deletions":75}}},{"hash":"e451dd3eb5dd138af179ff6ee39428079e64a773","messageTitle":"Add files via upload","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2017-10-21","commitResults":[{"hash":"d4951b7a66dd80b399d24321f958816d8438e4cf","messageTitle":"Add test for add/delete tag commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":400,"deletions":0}}},{"hash":"3f6f2deab47e5054ccea120f319d5bf013ee0a41","messageTitle":"Update AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"ad515f603e655a8cfc35217b13e92757775fd58f","messageTitle":"Update AddTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"6cdfbe1bc54e8e42da9f0096015ce40407f0dffb","messageTitle":"Update DeleteCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":14}}},{"hash":"4f44b3323fe8d056d0d2c28161a0253366fd2653","messageTitle":"Update DeleteTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"6d48834d413503d24e60be8fb4df938cfd87b4e5","messageTitle":"Update AddTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":88}}},{"hash":"fda9f1f72583c34ed9a7c005c4c6091bd7417461","messageTitle":"Update AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"40e740b2a8db3d93bf9b572dffc3edc417986906","messageTitle":"Update AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c08854b703890c84e2cb33542baa3bd83edf80b1","messageTitle":"Create AddTagCommentTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":0}}},{"hash":"1ee09392da7e444c800deab2184e3d5e8c4b7d9b","messageTitle":"Delete AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":60}}},{"hash":"69c14a238cd7484d02ae77f7263be4ce7553e3ab","messageTitle":"Delete AddTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":151}}},{"hash":"3ef3e35b01b40eb9bdaa0eb0781741cf5f62bdfd","messageTitle":"Delete DeleteCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":65}}},{"hash":"f6d67d215c84ba018fbf76a59a4251f0e0d42f3c","messageTitle":"Delete DeleteTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":164}}},{"hash":"097da4f43f62ac9fb9cae34bcf60f2d7246863a0","messageTitle":"Create DeleteTagCommandTest","messageBody":"","fileTypesAndContributionMap":{"DeleteTagCommandTest":{"insertions":164,"deletions":0}}},{"hash":"570aae8f0c4f3ac6c0083ef72bd744c6da537b87","messageTitle":"Create AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"be484e17432d4d35d81e746a696e5c292e443d64","messageTitle":"Rename DeleteTagCommandTest to DeleteTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"1d06399ed779f8e79bbecde27e3456d2d097f555","messageTitle":"Create DeleteTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}},{"hash":"6850c4d4a052a5714483d2cb845ee7514720ac6b","messageTitle":"Rename AddTagCommentTest.java to AddTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"20d055c6a0a3337c0072b27ad31aefaf4d8ded4b","messageTitle":"Update DeleteTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0255ab8491575ec0d62f577ae2962d763758af3d","messageTitle":"Update AddTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"8b8af55109e288aaf786943fcb3a15d6e66da8cd","messageTitle":"Update DeleteTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-22","commitResults":[{"hash":"a95cc55a8e808ba175ed1435d14823e44a699ef3","messageTitle":"Update AddTagCommandTest.java","messageBody":"Fix codacy bug","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"3967c4b824a2eebda653e58bc8f4449bc3b9388e","messageTitle":"Update DeleteTagCommandTest.java","messageBody":"Fix codacy bug","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"5d6e8bf2193235be091ddcd02f2bcdbb8c406daa","messageTitle":"Update AddTagCommandParserTest.java","messageBody":"Fix codacy bug","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c5e19b9c60a15ff06762047169573b6a49486946","messageTitle":"Update DeleteTagCommandParserTest.java","messageBody":"Fix codacy bug","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"007fe90982133ab7ec4cdc32b6dfd58859773c6f","messageTitle":"Update addtag/deletetag user guide","messageBody":"1. update addtag/deletetag user guide\r\n2. tidy up some other commands","fileTypesAndContributionMap":{"adoc":{"insertions":18,"deletions":14}}},{"hash":"7ae7cb01fa722d1136a0d5daed105f5094a8451d","messageTitle":"Update UserGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":1}}}]},{"date":"2017-10-23","commitResults":[{"hash":"62f1aeab973b28231bbb5ba0c3dfaa9661cbe4e4","messageTitle":"Fix random tag color","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":8}}},{"hash":"a1723edc7ccbd0e97e6c180c90d97fc14866496e","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"8265c45dd41e0cfc9bd984b167ebbe568c368afc","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"8ecf62eb15e76e682578e89a3940afe2bc517bd1","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"70d4b3cfe456280ccf56849b458d60f91905c75f","messageTitle":"Update PersonCard.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"45ba1c0ba60f7d943da9dd7a8910da84ec021b90","messageTitle":"Fix whitespace and variable definition order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-24","commitResults":[{"hash":"9cb60cfcac7079b5f376c9ca1a98fb3ebd51eb9f","messageTitle":"Add default favourite value","messageBody":"add default value \"false\" to person","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-25","commitResults":[{"hash":"323b2e8d97a048db01e084d4d49d52748aa2b2e2","messageTitle":"Add fav/unfav person to addressbook","messageBody":"Add two methods:\r\n1. favouriteperson \r\n2. unfavouriteperson","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"f019e4069e188cce74d3f1577e19b37b7b34560e","messageTitle":"Add 3 more command","messageBody":"1. fav -\u003e favourite person\r\n2. unfav -\u003e unfavourite person\r\n3. sfav -\u003e show favourite person list","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"571745f1d3c7499fe643d61f585e4f7c7ae166d4","messageTitle":"Add favourite field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"11cda038ae5e69d2d23a1e513aa5230c7f2825ff","messageTitle":"Create FavouriteCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"5cfe6e33c1291b5de61f9d6ee901f6e5d0ae1bf6","messageTitle":"Create FavouriteCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"915768a1313a91dee955c4add022eb1234d74c3d","messageTitle":"Create FavouriteListCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"061b1c672c8366ba6a17d96298e7ee8a09896375","messageTitle":"Add favouriteperson and unfavouriteperson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"de6aa050e18e0f68b2755aef5a34670447a00cae","messageTitle":"Add favouritePerson and unfavouritePerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"7f406d2258797afa8b1ad637afce7406c49ed604","messageTitle":"Create NameContainsFavouritePredicate.java","messageBody":"To support the favourite and unfavourite method.\r\nSimilar to \"NameContainsKeywordsPredicate\"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"25e86b495b0bebf04e387b7db1fa994e313737fb","messageTitle":"Add new methods to support favourite function","messageBody":"Add three methods setFavourite(), ObjectProperty\u003c\u003e favouriteProperty(), getFavourite()","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}},{"hash":"f8e009acf434de1cbd7d4aa43f096c539cb6b362","messageTitle":"Add favourite status to ReadOnlyPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"9193489186823f69dffb960b82d7e792c6dde7f8","messageTitle":"Add default favourite status to sample data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"a6b98e071e881dfb7a4ddf050b2501ed62a1d533","messageTitle":"Create UnfavouriteCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"c7cd1df07c3f7bf9dbf8e4697c90fccaf36dedf0","messageTitle":"Create UnfavouriteCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"26fd10e198a78dce41ca24528ee82fd745643433","messageTitle":"Add favourite and unfavourite","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"c34eec247c7e24d14890db5f3b725785e57dc9c5","messageTitle":"Add favourite field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"d7b60cb08e43fd93589d9f008d3ba35229e330a1","messageTitle":"Add favouritePerson and unfavouritePerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"ad18424aa701a5037a8ff9d128ee1116db99fd10","messageTitle":"Create FavouriteCommandTest.java","messageBody":"1. Add valid index valid person(haven\u0027t favourite yet) test\r\n2. Add invalid index test","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":0}}},{"hash":"07428a1f0c0092d34656d0c2e40c8bed70737840","messageTitle":"Create FavouriteListCommandTest.java","messageBody":"1. Add empty favourite list test\r\n2. Add non-empty favourite list test","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":0}}},{"hash":"852dfd162b7bdd57d5cca70826ae099dbb000556","messageTitle":"Create UnFavouriteCommandTest.java","messageBody":"1. Add valid index valid person test \r\n2. Add invalid index test","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":0}}},{"hash":"f009c428a5fde238eeefd38bea84f82ee91cdf18","messageTitle":"Create FavouriteCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"1ce4ba7b0aa520652c37566f39415214952c541b","messageTitle":"Create UnfavouriteCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"875b41e4bcb0d685703dacea18d9161594176d77","messageTitle":"Add withFavourite()","messageBody":"1. Add withFavourite()\r\n2. Add default favourite value","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"47713acbabd0177ea0fceb9781d863956c1ba634","messageTitle":"Add favouriteFirstPerson() method","messageBody":"1. Add favouriteFirstPerson() method\r\n2. Add favourite value for AMY and BOB","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"6ea5dd6126a766bace8ed324ffa96ff5ae1204d6","messageTitle":"Add withFavourite()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"fee16dd2d1383f47b51269a096e031f1022e9fe9","messageTitle":"Add defualt favourite value to sample data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":11}}},{"hash":"0d6beeb8a4947fea1daf79c223c781125d009270","messageTitle":"Fix syntax error","messageBody":"Missing closing bracket in line 232","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"d2f0a338802bb1b4a3848e190af4771203c2d418","messageTitle":"Fix syntax error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"08009168322cdf5db3db95e39ea1461c1dc0d849","messageTitle":"Remove the duplicated defined \u003ctag\u003e","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"ae8aa8a8ce09c721ee8d387185fc648f7349ba38","messageTitle":"fix updatefavourite and updateremark wrong order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"dec5c2cf090ee654108289ed00b90e6b087f1c64","messageTitle":"Add favourite filed to the person","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"8645468f531dadd258d1486178a8281fb38dcf30","messageTitle":"change single line 141 to two lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"82f790ce8fdebdb26a18febb337256e4c744d961","messageTitle":"Switch import sequence","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"2cdd250a8c1b1bfb715ee65396bcccb93e9a690e","messageTitle":"syntax error in line 48","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"53510d1209c60a367693c0aab3364d00e41aa667","messageTitle":"Change parameter order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"d8244e734a39c52e81f6e7125c3d18ffa203c82c","messageTitle":"Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":4}}},{"hash":"c2089d3e2f3597c8c5828daae15a9f60c155591a","messageTitle":"Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"5ac2d3f784bed4b26e830de859f57ed4c5ea3ac3","messageTitle":"Change long single line to two shorter lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"bd8620c3b5991e5646e175b5e3bb470c6c451428","messageTitle":"Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-10-29","commitResults":[{"hash":"633c47976f429aef7deb32c816875e68058d5cf2","messageTitle":"[Documentation] Update documentation V1.3 and V1.4","messageBody":"1. Add findtag \r\n2. Add favourite\r\n3. Add unfavourite\r\n4. Add showfavourite","fileTypesAndContributionMap":{"adoc":{"insertions":82,"deletions":2}}},{"hash":"d550be4f64b2e2803a7a174596e1ffa840a552b6","messageTitle":"Get back to the original doc from V1.3","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":82}}},{"hash":"ef788858bd2f0a02359b48feee927d3eb35b10b4","messageTitle":"[Documentation] Update UG for V1.3 V1.4","messageBody":"Add favourite unfavourite showfavourite and findtag","fileTypesAndContributionMap":{"adoc":{"insertions":82,"deletions":2}}},{"hash":"6cd22ac58042d27db2a7e55df688782bbc8c19bc","messageTitle":"Create NameContainsTagsPredicate.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":0}}},{"hash":"d529216ff233d2ea0854c4f07a786e44ee434d34","messageTitle":"Create FindTagCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"50fa42f81d679da086b1a26d5c1cf6e2f7619aa9","messageTitle":"Create FindTagCommandParser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"2500ab6efa4a157d287804d72082126b22c899ff","messageTitle":"Add findtag method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"4c8f2125af0ef678140abff3cf73878b9971e02a","messageTitle":"Create FindTagCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":0}}},{"hash":"da81d0e1f924d6e2a64345fab549cfce868dd182","messageTitle":"Create FindTagCommandParserTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"ec13d8cc74b7736e374ce41e882c1cf757741928","messageTitle":"Add Findtag test","messageBody":"parseCommandFindTag and parseCommandAliasFindTag","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}}]},{"date":"2017-10-30","commitResults":[{"hash":"8040874f0175eac1141cd46058c47a04ff42d789","messageTitle":"Add JavadocMethod and change method name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"804988f860cee6b516b942ea97329b88deb079d6","messageTitle":"Fix white space","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7b0206e29442d05a5652085cebbf9755cbc24904","messageTitle":"Add JavadocMethod","messageBody":"Add JavadocMethod for isOnlyUnwantedTagsCheck","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"3eb7789acd904720c64d8932a4265cc0fe82c4db","messageTitle":"Fix white space","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"581c75fc6f2c8bd495107c9d9cc679e22ecbfad1","messageTitle":"Update Implementation","messageBody":"1. Add one more implementation \r\n2. Change some language\r\n3. Add caption for diagram","fileTypesAndContributionMap":{"adoc":{"insertions":184,"deletions":276}}},{"hash":"7ca3a00b7d79efb320ca25111bf830ca285f617d","messageTitle":"Add more YOU language","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":142,"deletions":87}}},{"hash":"1ea62b7c597ee8e25f372dce2fcf3f2efe065ed5","messageTitle":"Upload FindTagSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"dc97fbf5e6167778edbdd399f3862e9231ad276c","messageTitle":"Add FindTagSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"826f83d4ed969fa56174e7cf646b7188370c79e8","messageTitle":"Modify language used in DG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":11}}}]},{"date":"2017-11-01","commitResults":[{"hash":"fc30b7863f7799aa0b13c16bfc0250a89ee3dc03","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6d4f87bd426813dac8cbab5dbcb756e96ae559f5","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"7d133298e53e0eb2e2a80a65f02f28de919f4d1e","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"efc3aef1187affde11de88a8db9067cba1022fc5","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"343f1d583ee08c3bf34e9b3f9abf44c61c1f4b35","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"fb2a15cc50ee6fa5f6d6f6808b4aabdc798f7201","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"ce859dc311628ff0f7b01ba00d40ad478236fa40","messageTitle":"Update charlesgoh.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":55}}},{"hash":"02b168f96a213e3b8dc218202b91ddba9e15e946","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5cba70425772a8c22d89387ace5ec90c3953f4e4","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"fa751c0212c22fb1b83d8ac65f522b5f73b07693","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"ab77fd508e6260a4125b294b808da4214e8e6cf7","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"ca1f5f1581d4bc93dd256851593c9b1f178f2fae","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c42b3d97bc66ff4e6d43f635df1fbe090976b5a1","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"7d9d97ad40fff306d323127f662f32a7694a12ad","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"ff66130c6c35400cef510decb32fa159e128495d","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"1ea59da3167a93fa683e46a77821fa2d5c5e14b8","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"410b9d8d4f5cf98968319f8b0dc2e5afe803f4b3","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"5767ec348c0dd5bc4374d55321a509cc75a5b4ae","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"f75cc4c987cdd2fecd5c3d6b3c784ebf25ea85b4","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"96415def4cadc6b9bf4223feade72d81886f018b","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"a66f097e733bd6d0854152be4c674ac128e76270","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8400e2bd8a7176cac61179f770c33366bfbfe2ef","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9bd0dfeefd5b333cbac0452a78cabd13ff8a57fe","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"00ab7261a3c18a1d699e55f3dc00a6cee91102e2","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"39a83bfd89c553a84bfb85e87034635cfd7d2bfb","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"c223b07103675315cdbce6b10955f80191f45a7f","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"80ee5c27f2d1e96a089d74ee17a7eecda249c3b9","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"768b84463c84b33710d804ded9f5d1b6f0889cbf","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"d7d6bab9c1e5b0a2657a8559a0f496348b24eee7","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fcea70c6d50ff4696eebdfef58186b96a4b67f8f","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"ba70e698236fdf5c1970e0b40f2a7cc1f5a4de51","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"b8b0b39a028881876640ca02ac2f27798465922f","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c0d3b8663cc396cb2db551a421d7b7d47a7922a2","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"bbf10bb6ec4b6cfeb6160a809b6101ffd0e1b58e","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c124fa376f7d1e0ebe4bef19ebea52625466c83b","messageTitle":"Add collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"5b964dde1b1598bd05b48fecd56cd76556cdb861","messageTitle":"Create wangyiming1019.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":969,"deletions":0}}},{"hash":"7e2049021391ac90ed04eec18eeba5bf4847e5d6","messageTitle":"Create wangyiming1019.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":911,"deletions":0}}},{"hash":"0694ce9fc86369c1046de0a0b42d520e0eb521f0","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"db931cd1c112e1ed633bf0155b17666e49f13117","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"0e6c2c90dad38178ceeb58b50b7cc36fc4914f6a","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"c91e76a7920fc3ab8aacd330aa605b0575378a80","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4954222657126211225126ad86f653829f55f501","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"20681d8de8374250b6c82ae6217fc55f06ceeb2b","messageTitle":"Fix errors in cheatsheet","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":4}}},{"hash":"1376f3e37556a3cfd6d1eacce9b15f4379f88ecd","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c1bc86873a2134047f86b60dabf5cc2506070e26","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8dab2dc387b19e9f46dab1d4f73b38bd5f5d8a2f","messageTitle":"Fix CommentsIndentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-05","commitResults":[{"hash":"a9e1305d7babc30cfb615f37deb23eee7ebd9ce0","messageTitle":"Add CHRIS for taglist test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"5657652a1b9c1ae0c7508c302a439084aa785bf2","messageTitle":"Add CHRIS and CHRIS_NEWTAG for taglist test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"60e60b0c8b93c60aec6eecc82ea910dcdce7d4d3","messageTitle":"Create TagListCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"f4a59fdc3394766875bfe1e772fe4e9f5e8a5336","messageTitle":"Add taglist command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"fcac53af402f321c700b0082bc761d79438c9c23","messageTitle":"Fix bug that cause person list disappear","messageBody":"Fix the bug that unfavourite command will cause the person list disappear.","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"5539259390dbcb72f537faa1c424f77ff35fbcaf","messageTitle":"Optimize exclusive findtag command","messageBody":"chang prefix \"/not\" to \"/\" for better user experience","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"77fb8a1941a9e86eedd979508d14d144ae198312","messageTitle":"Create TagListCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}},{"hash":"a937491435e29cb7533352d29feb15a281705d8e","messageTitle":"Add `showtag` taglist command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":0}}},{"hash":"676133d8ade5a8a3ce80d08c7c4e132c5107dbcd","messageTitle":"Change some global variables to local variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":7}}},{"hash":"dbca9ed4ef40e64b668eed3d3d8ec098e6b92672","messageTitle":"change \"TagNameList\" to \"tagNameList\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"b5a740715e5d3d24372b3bb8e906d5d6ba11ac16","messageTitle":"Remove Unused Import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"bdff1c692f02e97ec72777ccf5bd644ca7ae1685","messageTitle":"[LineLength] shorter line length","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":5}}},{"hash":"3ae316bffcc7ef5d7a5b65b6dd7f725d763abae5","messageTitle":"[CustomImportOrder] Change the import order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-07","commitResults":[{"hash":"adb3e11ebc0af0d29bfa7aadfee9c2b653f229ae","messageTitle":"Update DeveloperGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"130909953280eb96dd78e706932d2f4b0c809a9f","messageTitle":"Update UserGuide.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":32,"deletions":8}}},{"hash":"673c5e0b37a574759a5742a409d7a1506e548208","messageTitle":"Update wangyiming1019.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":77,"deletions":3}}},{"hash":"8a1749ff8093bfba56b2bd6bb5ac75442f1cf246","messageTitle":"Update wangyiming1019.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":88,"deletions":0}}},{"hash":"6b3dba5c8c39296916fa1a177e646a0cd6b1e760","messageTitle":"Create WangYiming.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":58,"deletions":0}}}]},{"date":"2017-11-12","commitResults":[{"hash":"09840244de9feb4e3f1284e6bafde395792f3d43","messageTitle":"Update PersonCardTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"d8fd78ea0cbc8607edfd5e78e95c8d3ef3408736","messageTitle":"Delete WangYiming.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":58}}}]}],"chao1995":[{"date":"2017-01-25","commitResults":[{"hash":"0940bf947c94bbdfb737cea191c2bd1c60a0ba10","messageTitle":"Add UnusedImports check in checkstyle","messageBody":"Unused imports are a code smell as they make it less clear which classes a\nJava file depends on. Our checkstyle configuration does not presently check\nfor unused imports, so let\u0027s add an UsedImports check which does just that.\n\nThere is already a slightly similarly-named check in our checkstyle.xml file\ncalled RedundantImport. Its name could mislead readers into thinking that it\nactually checks for unused imports as well, as an unused import could be\nconsidered to be \"redundant\". However, it doesn\u0027t actually do that. Because\nan import is redundant if\n1. It is a duplicate of another import.\n2. The class non-statically imported is from the java.lang package.\n3. The class non-statically imported is from the same package as the\n   current package.\n","fileTypesAndContributionMap":{"xml":{"insertions":13,"deletions":4}}}]},{"date":"2017-01-30","commitResults":[{"hash":"79fd6d0bf024aa0ccded5f9bb8fd9459c25676ea","messageTitle":"Check overloaded methods are grouped together in checkstyle","messageBody":"This new checkstyle rule improves the readability of the code as it\nallows developers to see all the variations of a method at one place\nwith no other code in between.\n\nHowever, note that there is a potential loophole in checkstyle\nOverloadMethodsDeclarationOrder module which permits out-of-order\noverloaded methods when they are separated by a nested class or\ninterface.\n\ne.g. the following code in ModelManager.java will still pass the check,\neven though there is a nested interface between the two\n`updateFilteredPersonList()` method definitions:\n\n    private void updateFilteredPersonList(Expression expression) {\n        filteredPersons.setPredicate(expression::satisfies);\n    }\n\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Inner classes/interfaces \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    interface Expression {\n        boolean satisfies(ReadOnlyPerson person);\n        String toString();\n    }\n\n    public void updateFilteredPersonList(String keyword, boolean someRandomBool) {\n        // do nothing\n    }\n","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":75},"xml":{"insertions":2,"deletions":1}}}]},{"date":"2017-02-01","commitResults":[{"hash":"4de6efb2bd592149c5475e5d65899a17d67f16a2","messageTitle":"Add import order check in checkstyle","messageBody":"This new checkstyle rule ensures consistent ordering of imports,\nfollowing the rules that the default Eclipse formatter uses.\nThat means Eclipse IDE users will not need to perform any additional\nconfiguration to adhere to these new import ordering rules.\n\nWe chose Eclipse\u0027s default rules over the default rules of other IDEs\nbecause we are using Eclipse as the primary IDE for CS2103, SE-EDU\nand TEAMMATES at the moment. However, when the time comes to\nswitch to another IDE, we will need to update the checkstyle rules\naccordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":333,"deletions":300},"xml":{"insertions":16,"deletions":0}}}]},{"date":"2017-03-13","commitResults":[{"hash":"76be0b3f25accf7682bfa3482bddb3c5426595aa","messageTitle":"StatusBarFooter: enable dependency injection of a Clock","messageBody":"When an AddressBookChangeEvent occurs, the sync status\u0027s timestamp is\nupdated using \u0027new Date()\u0027.\n\nHowever, because we do not know the arrival time of the event during\ntesting, we are unable to verify the accuracy of the time stamp in the\nupdated sync status.\n\nTo gain testability, StatusBarFooter needs to support dependency\ninjection. And to support dependency injection, we can\u0027t directly\ncall new Date().\n\nLet\u0027s add a Clock, and get the time stamp from it, so we can inject\na fixed Clock during testing.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":1}}},{"hash":"58a9b653ee464ba570ef535e818e4329dba3432b","messageTitle":"StatusBarFooter: extract sync status messages into constants","messageBody":"Feedback messages for sync status are directly used inside the code.\n\nThus we have to hard code the same strings in testing code, too.\nThis is error-prone.\n\nLet\u0027s refactor them into class constants and use these constants\ninstead.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}}]},{"date":"2017-03-15","commitResults":[{"hash":"982200a86dd430a0519d5ff90f891711d8f12377","messageTitle":"CommandBoxHandle#runCommand(...): return success status","messageBody":"runCommand(...) does not return whether the command execution is\nsuccessful. We have to check it manually with the result message.\n\nIt\u0027s clunky to check the result message when it changes based on the\ncommand inputs. Moreover, in some cases, we do not need to check the\nresult message, but we are forced to do so because there is no other\nway of checking whether the command succeeds.\n\nLet\u0027s change runCommand(...) to return a boolean to indicate whether\nthe command execution is successful.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":9}}},{"hash":"a06749cee66343b64948dd091aeae8b77a5c249f","messageTitle":"StatusBarFooter: add GUI test for last update feature","messageBody":"We don\u0027t have GUI tests to verify the last updated feature, i.e.\nthe sync status in the left corner of StatusBarFooter.\n\nLet\u0027s add an GUI test to verify it.\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":0}}}]},{"date":"2017-03-17","commitResults":[{"hash":"1e370962a6c6939e0fc815688f96a542270cd5a6","messageTitle":"UserPrefsStorage: introduce getUserPrefsFilePath()","messageBody":"UserPrefsStorage interface doesn\u0027t provide a getUserPrefsFilePath()\nmethod.\n\nOther classes are unable to get the current UserPrefs\u0027 file path.\nThis is also inconsistent with the AddressBookStorage interface.\n\nLet\u0027s add a getUserPrefsFilePath() method, and implement this in\nclasses that implement this interface.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"535ed3a77aac64ccde8a5ad6e10752b322ef50ec","messageTitle":"StorageManager: remove constructor StorageManager(String, String)","messageBody":"The constructor StorageManager(String, String) creates two objects,\nnamely XmlAddressBookStorage and JsonUserPrefsStorage inside itself.\n\nHowever, this reduces testability, as a constructor should be assigning\ndependencies, rather than creating them.\n\nLet\u0027s remove this constructor, so that callers have to create the two\nstorage objects themselves and construct StorageManager using the other\nconstructor StorageManager(AddressBookStorage, UserPrefStorage).\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":7}}},{"hash":"3a4617fc799ffcd33d5b50d46fa13a629f03fb1f","messageTitle":"Move addressBookFilePath and addressBookName from Config to UserPrefs","messageBody":"addressBookFilePath and addressBookName are stored in Config, which is\nmeant to represent system configuration and should be read-only.\n\nThat means we should not update addressBookFilePath and addressBookName\nat runtime. However, this creates problems if we want to allow users to\nchange the address book file path, or choose a different name for the\naddress book.\n\nThus these two pieces of info should be kept in UserPrefs instead,\nbecause it is meant for such user preference settings, and can be\neasily updated at runtime.\n\nLet\u0027s move addressBookFilePath and addressBookName from Config to\nUserPrefs.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":50},"json":{"insertions":7,"deletions":7}}}]},{"date":"2017-04-13","commitResults":[{"hash":"81ee71e821cadb832cb9a1403ac2050692d0bbe5","messageTitle":"PersonUtil: add getEditCommand(int, Person)","messageBody":"Let\u0027s add a utility method for creating the command string for\nediting the details of a person in the address book.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"b8be1a36f6bc2da092ab4bccc8c7f199bd16d935","messageTitle":"Add EditCommandIntegrationTest","messageBody":"There are no integration tests for EditCommand.\n\nLet\u0027s add an EditCommandIntegrationTest to test code paths\nin the EditCommand and verify EditCommand\u0027s integration\nwith the Model.\n","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":0}}}]},{"date":"2017-05-09","commitResults":[{"hash":"095c4198c0df4de21bcf341572e5620266daedca","messageTitle":"Replace repeated usage of string literals with COMMAND_WORD constants","messageBody":"We use string literals (e.g. \"add\", \"edit\") in our tests.\n\nHowever, such repeated use of command word string literals (e.g. \"add\")\nviolates the DRY principle because the string literal for each command\nis already defined in the respective *Command classes\n(e.g. AddCommand.COMMAND_WORD is defined as \"add\").\n\nLet\u0027s replace these string literals with COMMAND_WORD constants.\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":54}}},{"hash":"db4541a86179c796c8ff0c5fa0ca974adcded350","messageTitle":"Prefix: add toString()","messageBody":"Concatenating a command prefix when constructing a command string\nrequires the use of Prefix#getPrefix().\ne.g. PREFIX_PHONE.getPrefix() + \"911\"\n\nAs Prefix encapsulates the prefix string that is also the return value\nof getPrefix(), overriding toString() in Prefix class to return the\nresult of getPrefix() allows us to omit getPrefix() when concatenating\nprefixes to strings. e.g. PREFIX_PHONE + \"911\" would return the same\nvalue as PREFIX_PHONE.getPrefix() + \"911\".\n\nLet\u0027s add the toString() method to the Prefix class.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]},{"date":"2017-05-10","commitResults":[{"hash":"ad6d5bd714fd1d059a7f9523c53dde2cc23951e5","messageTitle":"Replace repeated usage of string literals with CliSyntax constants","messageBody":"We use string literals \"p/\", \"e/\", \"a/\", \"t/\" for prefixes in various\nplaces.\n\nHowever, such repeated use of string literals (e.g. \"p/\") violates\nthe DRY principle because the string literal for each prefix is already\ndefined in CliSyntax class (e.g. PREFIX_PHONE for \"p/\").\n\nLet\u0027s replace these string literals with CliSyntax constants.\n","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":31}}}]}],"Sam-Mauris Yong":[{"date":"2016-09-27","commitResults":[{"hash":"5f6299dc8277789c71785d286176a942eba4cd86","messageTitle":"[98] Implement \u0027Last updates timestamp\u0027 feature (#113)","messageBody":"Implement \u0027Last updates timestamp\u0027 feature #98","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}}]}],"MightyCupcakes":[{"date":"2016-12-21","commitResults":[{"hash":"d43d6cf8bbc5c3e3868f19c6bd8fba802619716b","messageTitle":"[#219] Make `GuiHandle::getNode()` return a `\u003cT extends Node\u003e T` (#225)","messageBody":"* Modify GuiHandle::getNode() return type\r\n\r\nAlso removed type-castings on calls to this function in GUIHandles\r\n\r\n* Refactor codes in GUIHandler to ultilise the new getNode function\r\n\r\n* Modify GuiHandle::getNode() to use query instead of its tryQuery counterpart\r\n\r\n* Remove cast\r\n\r\n* Remove unused method\r\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":11}}}]},{"date":"2017-01-24","commitResults":[{"hash":"4545d8f25ff8339d220071322196c70ebd0cbad3","messageTitle":"Modify HelpWindow.java to point to the HTML user guide","messageBody":"The current URL points to the GitHub repo view of our user guide,\nwhich contains several UI elements which makes it look less like a\nformal user guide document and more like a file in a Git repo.\nFurthermore, the new HTML user guide is more aesthetically\npleasing and might encourage users to read on for more details.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-02-11","commitResults":[{"hash":"f9cf9ade26595e3df33b1b4e9ad88d6cb6e2621b","messageTitle":"Extract common parser constants/methods to seperate classes","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods and their\nassociated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nHowever, this will result in bidirectional links between these various\n*CommandParser classes and the main Parser class because some\nof the constants and utility methods in Parser class will be used\nby the various *CommandParser classes as well.\n\nAs a step toward the design proposed above, let\u0027s extract reusable\nconstants into a new CliSyntax class and utility methods into a new\nParserUtil class to prevent bidirectional dependencies between\nthe Parser class and the proposed *CommandPraser classes.\n","fileTypesAndContributionMap":{"java":{"insertions":157,"deletions":113}}},{"hash":"b443d880b041cabdbfdc6da7f82f7f520b1b3ef7","messageTitle":"Extract AddCommandParser from Parser class","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods\nand their associated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nAs a step toward the design proposed above, let\u0027s move the functionality\nof parsing of the add command from Parser to a new\nAddCommandParser class.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":27}}},{"hash":"d66527be4db0c692004c5f01530dd526fc6afc3e","messageTitle":"Extract EditCommandParser from Parser class","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods\nand their associated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nAs a step toward the design proposed above, let\u0027s move the functionality\nof parsing of the edit command from Parser to a new\nEditCommandParser class.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":62}}},{"hash":"a67ac737a8a84dbcf1be1b582b9533596a49d285","messageTitle":"Extract DeleteCommandParser from Parser class","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods\nand their associated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nAs a step toward the design proposed above, let\u0027s move the functionality\nof parsing of the delete command from Parser to a new\nDeleteCommandParser class.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":18}}},{"hash":"03097866de219843de84193b7319f071ed597cf3","messageTitle":"Extract SelectCommandParser from Parser class","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods\nand their associated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nAs a step toward the design proposed above, let\u0027s move the functionality\nof parsing of the select command from Parser to a new\nSelectCommandParser class.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":18}}},{"hash":"2658dc4f45e44cf928ca006d7f486c31eb707d92","messageTitle":"Extract FindCommandParser from Parser class","messageBody":"Parser class implements all different\ncommand parsers as private methods within the Parser class.\nParser::parseCommand is responsible for performing an initial\nparsing on the given input string and from there determine\nthe correct method to parse the String to.\n\nThis causes the Parser file to become very long\ncontaining all command parser methods\nand their associated helper methods that is only utilized in that\none method itself.\n\nThe design can be improved by applying the Single Responsibility\nPrinciple as follows: limit the Parser\u0027s responsibility to determining\nwhich type of command is being parsed and move the responsibility\nof parsing each type of command to a separate *CommandParser class.\n\nAs a step toward the design proposed above, let\u0027s move the functionality\nof parsing of the find command from Parser to a new\nFindCommandParser class.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":24}}},{"hash":"9af3aed34f48ab4fd833226db0c9a547da7bbae1","messageTitle":"Update developer\u0027s documentation","messageBody":"This is to reflect the change in code structure in the Logic\ncomponent due to the splitting of the parser components.\n","fileTypesAndContributionMap":{}}]},{"date":"2017-02-18","commitResults":[{"hash":"f8824a3658fb8224a028bb79dfea1ac3ca52a4c8","messageTitle":"TestUtil: Remove unused methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":171}}}]},{"date":"2017-02-25","commitResults":[{"hash":"b87c361f399d735af3e9be9f9471bcd451521b16","messageTitle":"Remove alternating coloring for blank PersonCard cells","messageBody":"Blank PersonCard are still created in the panel even though they have\nno content. Normal formatting such as alternate row colors still apply\nto these blank personcards. This can be easily observed by\nincreasing the window size and performing a search that only returns\none or two person cards.\n\nLet\u0027s remove the alternating row colors for blank person card cells.\n","fileTypesAndContributionMap":{"css":{"insertions":4,"deletions":0}}}]},{"date":"2017-03-11","commitResults":[{"hash":"977f98ec52f81408625db5c0f42543f03e970f8b","messageTitle":"StatusBarFooter: Align save location to the right","messageBody":"The save location in the status bar is aligned to the left,\ncausing it to misalign when the size of the window is stretched.\n\nThis is problematic as it is not responsive to changes to the size of\nthe window.\n\nLet\u0027s change the footer element to align itself to the right instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1}}},{"hash":"104fad3b3c777336e6929c7cd624c574259c1032","messageTitle":"Modify CSS files to better match the general dark theme","messageBody":"Some elements in the UI have the default white background which is very\nconstrasting to the dark theme the application is using.\n\nLet\u0027s modify the CSS of these elements to match the dark background\nof the application.\n","fileTypesAndContributionMap":{"css":{"insertions":58,"deletions":10}}},{"hash":"79fb9c3f15a9323a7bb6939616ce28570fd1dcc6","messageTitle":"BrowserPanel: Load a default blank page","messageBody":"BrowserPanel does not load any page when no person is selected. This\nresults in a very contrasting white background in a large box among\nthe dark background.\n\nAs the background of the BrowserPanel cannot be modified by CSS, we\ncan instead load a default HTML page with a matching background color\nto the rest of the application on initialization.\n\nLet\u0027s load a default HTML page in the BrowserPanel on initialization.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0},"html":{"insertions":9,"deletions":0}}},{"hash":"53e85de25ff2d1c91e7312583dff101275807180","messageTitle":"Update screenshot of GUI in docs","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2017-03-29","commitResults":[{"hash":"6fd7e489d6063a985472c278c3a9808d55c11a8d","messageTitle":"Remove the use of exceptions for control flow in AddCommandParser","messageBody":"ArgumentsTokenzier throws a NoSuchElementException if an attempt is\nmade to retrieve the value of a prefix that is not present or has an\nempty value. AddCommandParser interprets that exception as an invalid\nadd command format. The flow of this check is hard to understand because\nit is embedded in a call to the AddCommand constructor and spills over to\na catch block.\n\nThe code will be easier to understand if there is an explicit prefix\ncheck before calling the constructor of AddCommand.\n\nLet\u0027s add an explicit check for empty prefixes and remove the use of\nNoSuchElementException to detect missing prefixes.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"d79c47f6bf119284dfa67e9d3a96bc826a6619e1","messageTitle":"Move AddCommand\u0027s parsing responsibilities to AddCommandParser","messageBody":"Parsing the add command string into a Person object\nis split between the AddCommandParser and the AddCommand.\n\nIt is more cohesive if the said parsing is done entirely\nby the AddCommandParser itself.\n\nLet\u0027s modify the construction of the add command as follows:\n    * Make AddCommandParser do the parsing and create a\n      fully parsed Person object.\n    * Make AddCommand\u0027s constructor accept a fully parsed\n      ReadOnlyPerson.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":27}}}]},{"date":"2017-04-02","commitResults":[{"hash":"5bc7b615fe1fbde08c06822bcf439a864b124311","messageTitle":"Change indentation to 2 spaces in all FXML files","messageBody":"FXML files tend to have rather deep nesting and arrowhead style code.\nHaving 4 spaces as indentation makes the code harder to read as\nmost elements are aligned to the right.\n\nLet\u0027s modify the FXML files to use 2 spaces instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":113,"deletions":113}}},{"hash":"f8ae1f0efc2e6724be643b3c003d6e6bd3bd8e10","messageTitle":"Refactor imports in all FXML files","messageBody":"The imports in the FXML files are arranged in a haphazard order and\ncontain star imports.\n\nThis is not compliant with the coding style used in the rest of the\nproject that states:\n    * Imports should be arranged in alphabetical order.\n    * Avoid using star imports as they load more modules than necessary.\n\nLet\u0027s refactor the imports in all FXML files to fix the two problems\ngiven above.\n","fileTypesAndContributionMap":{"fxml":{"insertions":19,"deletions":9}}},{"hash":"895f252667f346a88db65a7d5fb0e22c9d138f25","messageTitle":"Remove unnecessary children tags in FXML files","messageBody":"Some FXML files wrap the contents between a pair of children tags.\n\nThis is unnecessary in JavaFX as all panes has a default property of\nchildren.\n\nLet\u0027s remove these unnecessary children tags.\n","fileTypesAndContributionMap":{"fxml":{"insertions":60,"deletions":85}}},{"hash":"38a3cb6997dff47e8a6280405f9cc0539e7ffa75","messageTitle":"Remove stylesheets imports in UiPart\u0027s FXML files","messageBody":"The various UiParts FXML files import the same DarkTheme and\nextension CSS files.\n\nThis is not necessary as MainWindow loads all UiParts by adding their\nvarious components as a child of the AnchorPane placeholders. Since\nthe AnchorPane placeholder is part of MainWindow, all its children\nwill also be styled by the stylesheets declared in MainWindow.\n\nLet\u0027s remove the stylesheets declarations from the various UiParts FXML\nfiles.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":19}}},{"hash":"1919a0ab3a347e3a825ac4a83680d51edf767f8b","messageTitle":"MainWindow.fxml: Refactor to improve readability","messageBody":"MainWindow consists of multiple placeholders contained in a VBox all\nclumped together. Furthermore, some elements have multiple attributes,\ncausing it to exceed the character limit for a line.\n\nThis makes the file very hard to read.\n\nLets refactor MainWindow.fxml as follows:\n    * Add white spaces between sibling elements to improve\n      readability.\n    * Wrap long elements to a new line.\n","fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":1}}},{"hash":"3c21984b8a7cf254ed29b3a76794310502a78a4b","messageTitle":"StatusBarFooter.fxml: Remove unneeded attribute","messageBody":"Both StatusBar elements sets their minimum width to zero.\n\nThis is unnecessary as both status bars will have some content in\nruntime.\n\nLet\u0027s remove this unneeded attribute.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":3}}},{"hash":"098c151f88a6538e5f41e3301e9ee9ede82c9524","messageTitle":"PersonListCard.fxml: Remove unneeded child HBox","messageBody":"The id and name label in PersonListCard is wrapped around two parent\nHBoxes.\n\nThis is not necessary.\n\nLet\u0027s remove the unneeded child HBox.\n","fileTypesAndContributionMap":{"fxml":{"insertions":7,"deletions":9}}},{"hash":"8f4b7a06d8d784b64246fd03f4d1eb23fced8e5e","messageTitle":"Standardize declaration order of insets in all FXML files","messageBody":"The various FXML files use insets declarations in order to add\ninner padding within elements. The declaration is not consistent as\nsome elements declare the padding size using integer values\nwhile others use declare using double values.\n\nLet\u0027s standardize all insets declarations as follows:\n    * Insets should declare paddings using the CSS convention\n      (i.e top right bottom left)\n    * All padding sizes are declared in integer values.\n","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5}}},{"hash":"1796655b975ea47319dbe96f10661b720dd5a99c","messageTitle":"Standardize self closing tags in all FXML files","messageBody":"The various FXML files contains self closing tags that are closed by\nappending a slash at the end of the element. Some of these tags prepend\na space before the slash while others do not.\n\nLet\u0027s standardize all self closing tags to prepend a space before the\nclosing slash.\n","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6}}},{"hash":"b91565e39e0a18b3f5634912c1849a6aa599f4a6","messageTitle":"Standardize height and width declarations in all FXML files","messageBody":"The various FXML elements declares their height and width using\nboth integer and double values.\n\nLet\u0027s standardize all height and width declarations to use integer\nvalues\n","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":4}}}]}],"Jeremy Goh":[{"date":"2017-03-20","commitResults":[{"hash":"4c4e1ed78fd8465512c5b434a3c592da52740717","messageTitle":"[#323] Index is cut off when names are too long for PersonCard (#338)","messageBody":"The id text label does not define its minimum width on the PersonCard\r\ncell.\r\n\r\nAs a consequence, a very long person name could cause the number in the\r\nlabel to be truncated. This is not desirable as users need to\r\nknow the id number of a person to use some commands (e.g. edit).\r\n\r\nLet\u0027s set the id label\u0027s minimum width to its preferred width so that the\r\nid label will always be wide enough to display the id number, regardless\r\nof the length of the person\u0027s name.","fileTypesAndContributionMap":{"fxml":{"insertions":7,"deletions":1}}}]},{"date":"2017-03-25","commitResults":[{"hash":"25d03252cfcc4705bb0aa00426298ea2983f3203","messageTitle":"[#336] Cannot add a label called `location` in person card (#339)","messageBody":"JavaFX stores all the fields in a namespace map which maps the name of\r\nthe field to the corresponding JavaFX object. JavaFX also defines some\r\nkeys as a constant - in particular LOCATION_KEY as the String\r\n\"location\" and RESOURCES_KEY as the String \"resources\".\r\n\r\nUsing any of these strings as a field will result in JavaFX trying to\r\ncast the field to the type of the corresponding value in the namespace.\r\nFor example, any fields with the name \"location\" will be cast into an\r\nURL object which is not allowed.\r\n\r\nLet\u0027s document these findings down in the controller so as to inform\r\nother developers of the existence of such keywords.","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}}]}],"clarencechee":[{"date":"2017-01-30","commitResults":[{"hash":"49ec595ad9161d4655de4ff23648f92333d83d02","messageTitle":"CollectionUtil: fix assertNoNullElements bug","messageBody":"assertNoNullElements isn\u0027t working as intended at all. The original\nintention of this method was to ensure each element of the given\ncollection was non-null. However, by simply doing\n\u0027assert !isAnyNull(Collection)\u0027, the collection is parsed as an Object,\ninstead of an Object[]. Meaning it only checks if the collection\nreference is null rather than its actual elements.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"54eb8b42ba88f85a8305d78060ff0a58bd5a0d4a","messageTitle":" CollectionUtil: refactor assertNoNullElements -\u003e isAnyNull(Collection)","messageBody":"We refactor the method to return boolean instead of void, shifting the\nassertion responsibility outwards to wherever this method is called.\nForcing the explicit usage of the \u0027assert\u0027 keyword thus making it clearer\nthat an assertion is actually happening.\n\nWe also overload this method with isAnyNull(Varargs) due to the\nsimilarities of both methods.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":27}}}]}],"Ka Yi":[{"date":"2017-02-13","commitResults":[{"hash":"b2b386cdbec459681b42191b9a1843c8a8d3e66c","messageTitle":"DeveloperGuide: add guide to convert docs to PDF","messageBody":"The documentation files are written in Markdown and published to\nGitHub pages. However, PDF versions of the docs may be required, such\nas for providing offline access to documentation files.\n\nLet\u0027s update the developer guide to teach developers to use Chrome\u0027s\n\u0027Save as PDF\u0027 option to convert the online documentation to PDF format.\nChrome\u0027s \u0027Save as PDF\u0027 preserves the contents of HTML files well,\nincluding the hyperlinks, and is easy to use. Furthermore, Chrome is\na commonly used web browser so developers are unlikely to have to\ninstall additional software.\n","fileTypesAndContributionMap":{"md":{"insertions":76,"deletions":2}}}]},{"date":"2017-02-16","commitResults":[{"hash":"fae87009249fc5a0084ea0d4fd28d1d8bf312921","messageTitle":"Add Asciidoctor Gradle plugin","messageBody":"GitHub Flavored Markdown does not support the specialized features that\nthis project requires, such as use of colors and easy conversion to\nother file formats. AsciiDoc, like Markdown, uses a readable syntax\nthat is easy to learn. It is also supported by GitHub preview. In\naddition, AsciiDoc supports more features, such as auto-numbering of\nsections, auto-generation of table of contents and admonition blocks.\nStyling is also possible using custom CSS stylesheets. Furthermore,\nAsciiDoc is designed to make it easy to translate documents to other\nformats, and Asciidoctor makes it simple for users to generate HTML\nfiles from asciidoc documents.\n\nConverting to PDF:\n\nWhile Asciidoctor supports conversion to PDF, Asciidoctor PDF is\ncurrently an alpha release and does not support useful features such as\nfont colors. Styling must also be done separately in an Asciidoctor PDF\ntheme file, which is different from the CSS used for HTML files.\n\nTo convert documentation to PDF format, we suggest using the browser\u0027s\n\u0027save as PDF\u0027 function on the generated HTML files instead.\n\nStylesheets:\n\nasciidoctor.css is the default stylesheet by Asciidoctor and\ngh-pages.css is the customized version used by the documentation.\nHaving our customizations in a separate file instead of editing the\ndefault stylesheet makes it easy for developers to swap in other\nstylesheets which import the default stylesheet, such as those available\nat https://github.com/darshandsoni/asciidoctor-skins.\n\ncopyStylesheets Gradle task:\n\nAsciidoctor suggests using the resources method to copy additional\nresources (in this case, CSS stylesheets) to the build directory.\nHowever, this does not work as Asciidoctor tries to generate the\nHTML files before copying the resources, as discussed in\nhttps://github.com/asciidoctor/asciidoctor-gradle-plugin/issues/178.\n\nLet\u0027s create a copyStylesheets task to copy the necessary resources\nbefore running Asciidoctor instead, a workaround suggested in\nthe issue mentioned above.\n\nAsciidoctor attributes:\n\nEven though all AsciiDoc files use the same images directory,\nimagesDir attribute must be set in each individual file instead of\nin Asciidoctor\u0027s attributes. Otherwise, GitHub preview wrongly\nlinks to image.png instead of images/image.png so images are not\ndisplayed in the preview.\n","fileTypesAndContributionMap":{"gradle":{"insertions":29,"deletions":1},"css":{"insertions":426,"deletions":0},"md":{"insertions":5,"deletions":0},"adoc":{"insertions":60,"deletions":0}}}]},{"date":"2017-02-28","commitResults":[{"hash":"0f027b45600f074c676ec89bd1ab9e60d31e18f8","messageTitle":"DeveloperGuide: Add link to coding standards","messageBody":"Students are instructed to follow the provided coding standards.\nHowever, there are no explicit references to the coding standards in\nthe developer guide. This makes it inconvenient for developers who\nneed to refer to the coding standards when coding. Furthermore, other\ndevelopers who come across this repo may not know about the coding\nstandards used in this project.\n","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":0}}}]},{"date":"2017-03-08","commitResults":[{"hash":"c3f8027f059c932c6bc6aded05897dd6eb8c087e","messageTitle":"[#296] CommandBox stays red even after correct input is entered (#298)","messageBody":"After multiple failed commands are entered, the CommandBox continues\r\nshowing the error style even after a successful command is entered.\r\n\r\nThis is because each time a failed command is entered, a new copy of\r\nERROR_STYLE_CLASS is appended, but when the successful command is\r\nentered, only one is removed, so at least one ERROR_STYLE_CLASS\r\nremains. Thus, the CommandBox shows the error style even though the\r\nlatest command is successful.\r\n\r\nLet\u0027s teach CommandBox to add an ERROR_STYLE_CLASS for failed commands\r\nin CommandBox#setStyleToIndicateCommandFailure() only if the style\r\nclass does not contain any. This ensures there is at most one\r\nERROR_STYLE_CLASS at any point in time, so removing an\r\nERROR_STYLE_CLASS for successful commands in\r\nCommandBox#setStyleToIndicateCommandSuccess() always works.","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":12}}}]},{"date":"2017-05-06","commitResults":[{"hash":"8e4d306e4cc579b4e967b267a3c41aafcedbc700","messageTitle":"[#270] Set up workflow for asciidocs (#302)","messageBody":"As discussed in fae87009249fc5a0084ea0d4fd28d1d8bf312921, we are\r\nmigrating the documentation from GitHub Flavored Markdown to AsciiDoc.\r\n\r\nLet\u0027s teach Travis to generate HTML files with Asciidoctor using the\r\nAsciiDoc files inside the \u0027docs\u0027 directory. Generated files are then\r\npushed to gh-pages branch for commits to the master branch.\r\n\r\nFor the deploy script to work, maintainers will then have to:\r\n 1. Create a GitHub machine account and grant it access to this repo\r\n 2. Generate an access token and put it as an encrypted environment\r\n     variable in Travis settings.\r\n\r\nWe use personal access tokens instead of SSH deploy keys to grant\r\nTravis push access to the repo as they can be set up easily via GitHub\u0027s\r\nand Travis\u0027 websites, unlike SSH keys which require additional tools.\r\n\r\nHowever, personal access tokens grant access to all of a user\u0027s repos.\r\nIf a user\u0027s access token is used, others with write access to the repo\r\nmay change the deploy script to print the token and hence gain access to\r\nthe user\u0027s repos. Thus, we create a separate GitHub user account\r\n(machine account) to handle deployment. This way, only the repo is put\r\nat risk in the case of a leak.\r\n\r\nAsciidoctor suggests using the Gradle Git Plugin to publish files to\r\ngh-pages[1]. However, setting up is more complicated and less\r\ncustomization is allowed.\r\n\r\nTravis also supports GitHub Pages Deployment[2]. However, it does not\r\nmaintain history for generated files, storing only the most recent\r\nversion, and the commit message cannot be customised to show which\r\ncommit the files are generated from. This can be problematic if\r\ndeployment fails as it is harder to identify which version of\r\ndocumentation is being deployed.\r\n\r\nIn deploy_github_pages.sh, we use git credentials to store the personal\r\naccess token instead of adding the token to the repo url. GitHub prints\r\nthe repo url when there is an error for certain commands, so using\r\ncredentials ensures that the token is not printed to Travis logs.\r\n\r\n[1] http://asciidoctor.github.io/asciidoctor-gradle-examples/#_publish_to_github_pages_example\r\n[2] https://docs.travis-ci.com/user/deployment/pages/","fileTypesAndContributionMap":{"sh":{"insertions":42,"deletions":0},"yml":{"insertions":8,"deletions":1}}}]}],"eugenepeh":[{"date":"2017-02-04","commitResults":[{"hash":"821f5ad99b14c44e349d7bb708e891b19e6b5e48","messageTitle":"Make Eclipse Checkstyle Plugin recognizes all existing modules","messageBody":"Several existing enabled modules in our Checkstyle configuration file,\nsuch as \"TypeNameCheck\" and \"ConstantNameCheck\", are being silently\nignored by the Eclipse Checkstyle Plugin.\n\nThis is because given a module \"FooCheck\", Checkstyle recognizes both\nits short name (\"Foo\") and its fully qualified name (\"FooCheck\") as\nnames of that module. However, the Eclipse Checkstyle Plugin only uses\nshort name convention, and thus does not recognize modules that are\nbeing referred to by their full names.\n\nFix this by modifying our Checkstyle configuration file to use the short\nnames of these modules, so that both Checkstyle and the Eclipse\nCheckstyle Plugin will recognize them.\n","fileTypesAndContributionMap":{"xml":{"insertions":5,"deletions":5}}}]},{"date":"2017-08-17","commitResults":[{"hash":"39b0b30c54d744dbd53536c449546b30cc2d48da","messageTitle":"EventsCenter: change registerHandler method return type","messageBody":"The name registerHandler does not suggest that a return value is\nnecessary. Also, the return value is unused and does not complement\nany other methods in EventsCenter.\n\nLet\u0027s change the return type for EventsCenter#registerHandler() to\nvoid.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]},{"date":"2017-08-21","commitResults":[{"hash":"2b03991c5eab208ca71aa247bd57b038bd5fac73","messageTitle":"Main folder: add missing API header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":1}}},{"hash":"7a04eecc08679c3c5931d2b987f7d557bfc704b9","messageTitle":"Checkstyle: enforce header comments on classes and methods","messageBody":"Our coding standard for Java requires header comments for all classes,\npublic methods, and all non-trivial private methods. This rule is not\nenforced by checkstyle.\n\nLet\u0027s teach Checkstyle to enforce the coding standard above by adding\nthe rules JavadocMethod and JavadocType, which cover the checks on\nmethods and classes respectively.\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0},"xml":{"insertions":59,"deletions":0}}}]},{"date":"2017-09-20","commitResults":[{"hash":"b090f07e202379a1e6a97bbbac040343c8edbcc1","messageTitle":"Remove UsingGithubPages.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":33}}},{"hash":"46d34e00e3a9d058f88c85464b7f9e397d0626ee","messageTitle":"UsingTravis: add Deploying GitHub Pages section","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":42,"deletions":0}}},{"hash":"48237d005cbb6c812ad70b1f011d381081ccb17f","messageTitle":"DeveloperGuide: update Publishing Documentation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":3}}},{"hash":"41e8df9b94dc070384ecb2bbb51ac07166888229","messageTitle":"DeveloperGuide: update figure number","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"5ef9d78de051221fe861c04a12d5de9c49037fdf","messageTitle":"DeveloperGuide: modify converting docs instructions to use local files","messageBody":"We use GitHub pages to print out the PDF version of the\ndocumentations.\n\nIt is easier for developers to simply generate the PDF files directly\nusing their local files without having to go through the steps of\npublishing the documentation on GitHub Pages.\n\nLet\u0027s modify the instructions under \"Converting Documentation To PDF\nformat\" to use local html files instead.\n","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":3}}}]}],"You Liang":[{"date":"2016-08-08","commitResults":[{"hash":"5ce58c4ee734f57978205f057f84d539738abfe1","messageTitle":"Rename into seedu.address Clean up gradle build remove launcher","messageBody":"Fixes #1\nFixes #2\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":215},"fxml":{"insertions":5,"deletions":5},"java":{"insertions":405,"deletions":472}}}]},{"date":"2016-08-18","commitResults":[{"hash":"d96694832ac11cc75fdebd38bc7df632d8e9e8f0","messageTitle":"[3] Restructure ui to reflect physical ui","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":18,"deletions":12},"java":{"insertions":1057,"deletions":760}}}]},{"date":"2016-08-24","commitResults":[{"hash":"bf265bd321dce10ad8d2cfc0203aca8f0d4271c3","messageTitle":"[8] Integrate parts from level 2.","messageBody":"* integrate from level 2. compilable. Not yet fully integrated.\r\n\r\n* Make add command workable, but there is some issues in marshalling into local storage file.\r\nAnd fix some bugs\r\n\r\n* Fixes marshalling issue, forgot to call LocalModelChangedEvent\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"java":{"insertions":1700,"deletions":1093}}}]},{"date":"2016-08-26","commitResults":[{"hash":"e5b340676f18d23b5bab3dfe30fd316d633ac9d9","messageTitle":"[18] Implement FindPersonsByWordsInNameCommand","messageBody":"* added filteredList into modelManager\r\n\r\n* added qualifier\r\n\r\n* minor refactoring\r\n\r\n* implemented unique list\r\n\r\n* added ListAllPersonsCommand\r\n\r\n* added back status bars\r\n\r\n* added exit app event. and remove main app dependency.\r\n\r\n* clean up\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":23,"deletions":2},"java":{"insertions":308,"deletions":491},"json":{"insertions":0,"deletions":92}}}]},{"date":"2016-09-01","commitResults":[{"hash":"6fb2658e18b92e0cd4d97bc9e7dc28b8e6bce2ba","messageTitle":"Fix test case failure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":165,"deletions":545},"xml":{"insertions":53,"deletions":20}}}]},{"date":"2016-09-03","commitResults":[{"hash":"b4e81348ec5a7188aaa061fed66884dc8aaf146d","messageTitle":"Add AddPersonCommand test cases (#30)","messageBody":"* Add AddPerson test cases\r\n\r\nmodification of the guihandles\r\n\r\nand slight modification of the fxml\r\n\r\n* remove author\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":2},"java":{"insertions":264,"deletions":53}}}]},{"date":"2016-09-13","commitResults":[{"hash":"623480bb301d16ed4b1476aa508fc4a78f874c44","messageTitle":"[33] Implement FindPersonsByWordsInNameCommand GuiTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":216,"deletions":68}}}]},{"date":"2016-09-17","commitResults":[{"hash":"ac70505954f26f6fccbbeb7635283d1f5ed4be22","messageTitle":"[56] ListAll and clear command tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":134,"deletions":7}}}]},{"date":"2016-09-19","commitResults":[{"hash":"d1e4d36bfd5f49ad1a67e6487154dd42f162c994","messageTitle":"[41] Search substring will return incorrect feedback message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}}]},{"date":"2016-09-22","commitResults":[{"hash":"3a7f6c9891c6bb9d57d2748db37a1ef2910329c4","messageTitle":"[70] Add GUI test for help window","messageBody":"* HelpWindow Test\r\n\r\n* remove logging\r\n\r\n* remove return param\r\n\r\n* added delay after opening a help window\r\n\r\n* removed accelerator testing. as headless doesn\u0027t work\r\n\r\n* refocus on main app after closing help window\r\n\r\n* extra space\r\n\r\n* fix code style issue\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":104,"deletions":0}}},{"hash":"0f49d497dd200f1233996b4da39d4d562f3c23cf","messageTitle":"[24] Rename controller -\u003e ui","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6},"java":{"insertions":12,"deletions":15}}}]},{"date":"2016-10-12","commitResults":[{"hash":"831c819aacea622f5f2245a97beb4c1d53d75836","messageTitle":"[133] Add a GUI test to test the error dialog","messageBody":"* Added test case for error dialog.\r\n\r\n* fix typo\r\n\r\n* fix typos\r\n\r\n* change to getNode\r\n\r\n* renamed method names and add in comments\r\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":2}}}]}],"Zhi Yuan":[{"date":"2017-05-04","commitResults":[{"hash":"a5d9fcc4cce6b798663a565091e38782d140b7e7","messageTitle":"[#286] Update Phone\u0027s regex to reject numbers shorter than 3 digits (#383)","messageBody":"The shortest known phone numbers are 3 digits (e.g. emergency numbers\r\nsuch as 911 and 999) but the regex used to validate phone numbers\r\naccepts numbers shorter than 3 digits.\r\n\r\nLet’s change the regex to reject numbers shorter than 3 digits.","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}}]},{"date":"2017-05-12","commitResults":[{"hash":"d0cf1289ffbaa80838c3e0b130aebe995d19035d","messageTitle":"Replace LogicManagerTest#generatePersonWithName() with PersonBuilder (#391)","messageBody":"LogicManagerTest#generatePersonWithName(String) creates a person with\r\ndefault values, except for the name. However, the same can be achieved\r\nusing PersonBuilder. This makes the method redundant.\r\n\r\nLet’s change the creation of these Person objects to use PersonBuilder\r\ninstead.","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":24}}}]},{"date":"2017-05-17","commitResults":[{"hash":"ef06553753b5073c012ccac9ab1082c46b9d0f51","messageTitle":"[#411] UniqueTagList: Add assertions to check all tags are unique (#412)","messageBody":"The uniqueness of all the tags in UniqueTagList is not being\r\nchecked after the call of every public method in UniqueTagList.\r\nAs such, we do not know whether the invariant is maintained at the:\r\n    1. Start of each method that modifies UniqueTagList.\r\n    2. End of each method that reads from UniqueTagList.\r\n\r\nLet\u0027s add assertions for every method to ensure that UniqueTagList\u0027s\r\ninvariant is maintained after each operation.","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}}]},{"date":"2017-05-19","commitResults":[{"hash":"8045c62c5c2e17e9b6d22b85f5d5a6e5a12361a0","messageTitle":"[#428] Fix minor bug in EditCommandIntegrationTest (#429)","messageBody":"The expectedFilteredList is backed by the internal list of model\u0027s\r\naddressBook. This makes the equals comparison always returning true\r\nbecause both lists are pointing to the same list.\r\n\r\nLet’s make expectedFilteredList to be backed by the expectedAddressBook\r\ninstead.","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"93df19ad3c9a46c6983b67d0a3af307d8f4db62a","messageTitle":"[#406] Teach Parser to enforce spaces between arguments (#409)","messageBody":"Our parser does not enforce a space between consecutive arguments.\r\nFor example: “add ABC a/ValidAddressp/61356436e/abc@email.com\r\nt/someTag” is able to create a correct person.\r\n\r\nThis is undesirable because,\r\n1. it makes the command harder to read (prefixes are harder to detect\r\nby the naked eye).\r\n2. it limits our choices for future implementations of prefixes.\r\nFor example, if we want to create a new prefix sp/, the input above\r\nwould be ambiguous because we do not know whether the user meant\r\nsp/ or p/.\r\n\r\nLet’s teach Parser to enforce spaces between fields.","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":13}}}]},{"date":"2017-06-02","commitResults":[{"hash":"0352e6b6e3f51910edbff7a786f6ae24f453d38f","messageTitle":"[#436] StringUtil#isUnsignedInteger(String): Fix unhandled NFE (#460)","messageBody":"StringUtil#isUnsignedInteger(String) attempts to convert any given\r\nnumber to an integer (as a step in checking if it is an unsigned integer).\r\n\r\nWhen the input is a number higher than Integer.MAX_VALUE,\r\nthe method fails with an exception instead of returning false.\r\n\r\nLet’s teach StringUtil#isUnsignedInteger(String) to return false if\r\nthe input number is higher than Integer.MAX_VALUE.","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":25}}}]},{"date":"2017-06-07","commitResults":[{"hash":"857090e443120e18c45deb59c15089c64cce11d5","messageTitle":"Remove IndexUtil#oneToZeroIndex(int) (#463)","messageBody":"The creation of Index class in #447 makes IndexUtil#oneToZeroIndex(int)\r\nobsolete.\r\n\r\nLet’s standardise the codebase to use Index instead.","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":96}}},{"hash":"a300eb7b7798dfd52a5b056874219042c7123ec7","messageTitle":"[#468] Model#updatePerson(...): Change parameter from Index to ReadOnlyPerson (#471)","messageBody":"Model exposes its internal representation by taking in an `int index`\r\nto update the person at the index.\r\n\r\nModel is a facade and should not expose its internal representation.\r\n\r\nLet’s update Model#updatePerson(int, ReadOnlyPerson) to\r\nModel#updatePerson(ReadOnlyPerson, ReadOnlyPerson).","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":23}}}]},{"date":"2017-06-08","commitResults":[{"hash":"3cee7812a525b60e0a8aef516c77dac11d941124","messageTitle":"[#327] Add tests for ExitCommand (#478)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"2dacdc4e3029a3bc345dc15739e6cb9939fe5659","messageTitle":"[#327] Add tests for HelpCommand (#477)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"8e4f02b5ad8da2c440f262c2787f24f824978e4c","messageTitle":"[#327] Add tests for ClearCommand (#475)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}}]},{"date":"2017-06-09","commitResults":[{"hash":"5719ad6697102ce3513c1df2160f38b62aad4630","messageTitle":"[#476] Extract exceptions in UniquePersonList (#479)","messageBody":"Model API refers to UniquePersonList.DuplicatePersonException and\r\nUniquePersonList.PersonNotFoundException.\r\n\r\nUniquePersonList is a class inside the model component which need not\r\nbe exposed to classes outside the Model component.\r\n\r\nLet\u0027s extract these two exception as standalone classes so that the\r\nModel API no longer exposes the UniquePersonList class.","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":50}}},{"hash":"9db18c3ec4b2df042e036616e8bce2d2fb3dd7d5","messageTitle":"[#327] Add tests for DeleteCommandParser (#472)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}}]},{"date":"2017-06-14","commitResults":[{"hash":"4fda095582f3ce6f53774550edbc0561c9172b2c","messageTitle":"[#327] Add tests for SelectCommandParser (#485)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}}]},{"date":"2017-06-15","commitResults":[{"hash":"5cc85fcf11b40d1660d0b6be20a3ef90bc71c1c1","messageTitle":"[#437] Remove unused parameter in LogicManager constructor (#493)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":12}}}]},{"date":"2017-06-21","commitResults":[{"hash":"48775e45f9e37d5c00b99f7241d2856b3e2eac9e","messageTitle":"[#480] Change EditPersonDescriptor’s parameters to be non-Optional (#482)","messageBody":"EditPersonDescriptor’s parameters are of type Optional.\r\n\r\nOptional should not be used as parameters. The intended use case is\r\nfor return types to indicate that there is no result.\r\n\r\nLet’s update EditPersonDescriptor’s parameters to be non-Optional.","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":57}}}]},{"date":"2017-06-29","commitResults":[{"hash":"8d4861438a18bf73edacfedf469877425296a352","messageTitle":"Remove calls to guiRobot#targetWindow(Window) (#526)","messageBody":"Calling guiRobot#targetWindow(Window) assigns the window to the guiRobot.\r\n\r\nGuiRobot does not access the window. Thus, there is no point assigning\r\nthe window to guiRobot.\r\n\r\nLet’s remove these calls.","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2017-07-03","commitResults":[{"hash":"5a70b77b2a4679666e12e36fe92dccc4f53f5310","messageTitle":"[#532] CommandHistory: Change userInputHistory implementation to LinkedList (#533)","messageBody":"CommandHistory only allows elements to be appended to it (which is\r\nbacked by an ArrayList).\r\n\r\nAppending to an ArrayList takes amortised O(1) time. This will be\r\nworsened after #491 is merged, whereby CommandHistory only allows\r\nelements to be prepended to it, which takes O(n) time per insertion\r\nusing an ArrayList. On the other hand, using a LinkedList takes a\r\nconstant θ(1) time to append or prepend an element.\r\n\r\nLet\u0027s change the implementation of userInputHistory to use LinkedList\r\ninstead.","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2017-07-05","commitResults":[{"hash":"152302ea562807f782fb865528776093592e326a","messageTitle":"[#249] MainApp: Update version to 1.4 (#541)","messageBody":"The version is 1.0.\r\n\r\nThis number is outdated, as we have recently released version 1.4 of the\r\napp.\r\n\r\nLet’s update the version to reflect the new version of the recent\r\nrelease.","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"a817b56dff2a2061049ba053b67093c1c8bcafe3","messageTitle":"[#534] HistoryCommand: Returns previous commands in reverse chronological order (#537)","messageBody":"The HistoryCommand returns the previous commands in chronological\r\norder.\r\n\r\nThis goes against the intuition that history ought to be viewed in\r\nreverse chronological order. We are expecting that the user will want\r\nto see what he has typed most recently, just like how Google Chrome\r\nHistory works.\r\n\r\nLet’s update HistoryCommand to return previous commands in reverse\r\nchronological order.","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2},"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-07-07","commitResults":[{"hash":"3e71299fdd455bdd42ba4768bcc26fbddbd82cfc","messageTitle":"UniqueTagList: Remove unused constructors (#542)","messageBody":"UniqueTagList(String...), UniqueTagList(Tag...),\r\nUniqueTagList(Collection\u003cTag\u003e), UniqueTagList(UniqueTagList) are unused.\r\n\r\nLet’s remove them.","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":54}}}]},{"date":"2017-07-18","commitResults":[{"hash":"84d6516fb88cceba44c55050d8cbd2a905f53374","messageTitle":"[#557] ParserUtil: Update header comments on Optional usage (#558)","messageBody":"ParserUtil#parseX(Optional) methods currently take in an Optional.\r\n\r\nThis violates the usage of Java Optional. However, the methods in\r\nconcern receive {@code Optional} return values from other methods as\r\nparameters and return {@code Optional} values based on whether the\r\nparameters were present. Therefore, it is redundant to unwrap the\r\ninitial {@code Optional} before passing to {@code ParserUtil} as a\r\nparameter and then re-wrap it into an {@code Optional} return value\r\ninside {@code ParserUtil} methods.\r\n\r\nLet\u0027s add header comments in ParserUtil to make it clear to future\r\ndevelopers why ParserUtil takes in Optional even though it violates\r\nJava\u0027s convention.","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}}]},{"date":"2017-07-20","commitResults":[{"hash":"801bae82eea7e2e6c514a5b80dae0d91538ea82c","messageTitle":"[#561] XCommandTest: Move showFirstPersonOnly(Model) (#566)","messageBody":"This method is implemented multiple times in XCommandTest.\r\n\r\nThis violates the DRY principle.\r\n\r\nLet’s move it into CommandTestUtil.","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":62}}}]},{"date":"2017-09-19","commitResults":[{"hash":"705f37c3b954aca71277cbad7e883b242539eb0e","messageTitle":"[#677] Gradle configuration: Fix nonGuiTests (#666)","messageBody":"The command `gradle nonGuiTests` is expected to execute only non GUI\r\ntests. However, it is currently executing GUI tests as well.\r\n\r\nLet’s update this task to exclude the execution of GUI tests.","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}}]},{"date":"2017-09-20","commitResults":[{"hash":"1b9b5c38f14de086fddb4f7d387e140a7529b4b5","messageTitle":"[#675] GuiUnitTest: Clears subscribers from EventsCenter after each test (#697)","messageBody":"EventsCenter is a Singleton object, which is a possible cause of state\r\nleaks between tests as the state of the static objects are preserved\r\nacross tests.\r\n\r\nEventsCenter isn’t cleared after each GuiUnitTest is executed, as such\r\nit stores a reference to its’ subscribers, which causes these objects\r\nto not be removed by Garbage Collection after the test is done\r\nexecuting. This causes AddCommandTest to fail when run locally on \r\nIntelliJ together with other tests.\r\n\r\nLet’s update GuiUnitTest to clears subscribers from EventsCenter after\r\neach test.\r\n\r\nCredits of debugging this issue goes to @pyokagan.","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}}]},{"date":"2017-09-21","commitResults":[{"hash":"8b11b6b85ada2aa52e27198f71e2cd7268c4c90c","messageTitle":"[#680] HelpWindowTest: Write header comments concerning possible test failure (#694)","messageBody":"HelpWindowTest fails on certain computers. The cursor does not move to\r\nthe correct location, resulting in the wrong UI component being\r\nclicked. We suspect this to be a bug in the TestFX library.\r\n\r\nThis causes the wrong UI component to be in focus, which leads to a\r\ntest failure.\r\n\r\nLet\u0027s show an error message when the test fails.","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"1488051e2795c1e41d82850f949a9de157516050","messageTitle":"[#672] DeveloperGuide: Update instructions on setting up (#691)","messageBody":"HelpWindowTest fails if the processResources task isn’t executed by\r\nGradle before the test runs.\r\n\r\nThis isn’t documented in the DeveloperGuide, which may cause confusion\r\nto future developers if they encounter this issue.\r\n\r\nLet’s update the setting up instructions in DeveloperGuide to reflect\r\nthis issue.","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":0}}}]}],"Pierce Anderson Fu":[{"date":"2017-03-25","commitResults":[{"hash":"27cb4621dca1bf474b2838352a90873f3fbcb4ef","messageTitle":"[#351] Outdated prefixes in ArgumentTokenizer (#352)","messageBody":"The prefixes in ArgumentTokenizer\u0027s comments and tests use the old\r\nprefix format of \"/t\" instead of the current \"t/\".\r\n\r\nThis is inconsistent with our production code.\r\n\r\nLet\u0027s update the comments and tests to be consistent with the current\r\nprefix format used in the production code.","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":24}}}]}],"limmlingg":[{"date":"2017-05-30","commitResults":[{"hash":"44072296483d8f335468be1c9590723cc7bc8088","messageTitle":"Modify DeveloperGuide.adoc to use smart links","messageBody":"When linking to other asciidoctor documents, we use the extension .adoc.\n\nThe extensions remain unchanged even when exporting to HTML.\n\nLet\u0027s fix this by using smart links, such that asciidoctor will change\nto the correct extension .html when exporting to HTML.\n","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":9}}},{"hash":"16e7ada8773c884ac90320a1b0ac2266648f67ab","messageTitle":"Add idseparator: \u0027-\u0027 attribute to build.gradle","messageBody":"Internal cross references with hyphens do not work in HTML. E.g.\nlink:#common-classes in DeveloperGuide.adoc.\n\nLet\u0027s add this attribute so that the links will work in HTML.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"3520462d11563c02dbd6af9d88de0eb02385c2fa","messageTitle":"Modify DeveloperGuide.adoc to use appendix styles and list continuation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":8}}},{"hash":"64b3abe4f3c180a37456b0310f69df376aa86794","messageTitle":"Migrate documentation from markdown to asciidoc","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":736},"adoc":{"insertions":670,"deletions":0}}},{"hash":"a766c5822f718ea8ea93fb12a19c22254aec2998","messageTitle":"Use absolute path for links to files in documentation","messageBody":"DeveloperGuide.adoc uses relative path to link to the source code when\ndescribing the components of the application (such as Model.java).\n\nThe relative path might no longer contain the source code. For example,\nin the gh-pages branch, the source code is not available through\nrelative paths, as it only contains the documentation files.\n\nLet\u0027s change all of such links to use absolute path.\n","fileTypesAndContributionMap":{"adoc":{"insertions":22,"deletions":16}}},{"hash":"96cb99eb0f68adc8e50d1060a2e5b72a3a7d0d37","messageTitle":"Remove numbered: true in build.gradle","messageBody":"When rendered to HTML with asciidoctor, the numbered attribute adds\nnumbers to the headers by default.\n\nThis does not suit the look of documents like AboutUs.adoc.\n\nLet\u0027s remove this attribute from build.gradle. Instead, documents that\nrequire header numbers should include this attribute in their\ndocument header (which is already included in suitable documents such\nas UserGuide.adoc).\n","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":1}}}]},{"date":"2017-06-02","commitResults":[{"hash":"6ca3d19bc7bd901f41b3d63d53552f3641ddb107","messageTitle":"Add unit tests for ParserUtil#splitPreamble()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":1}}},{"hash":"84a9893b98ee57a7837f5648f7af1ac8060cd174","messageTitle":"ParserUtil: Rename splitPreamble() to split()","messageBody":"The method name is misleading as it is not limited to just preambles.\n\nLet\u0027s rename it to ParserUtil#split().\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":26}}},{"hash":"b1ef8f3054c2675a6b985e28af501e5066b1e6ad","messageTitle":"ParserUtil#split(String, int): Trim whitespace","messageBody":"If there are leading whitespace characters in the string, the first\nfield will be an empty string after splitting.\n\nThis may cause unexpected behaviour when splitting the string.\nFor example, the string \" abc def\" will be split into: an empty string\nand \"abc def\", instead of two strings \"abc\" and \"def\".\n\nLet\u0027s trim the whitespace in the string before splitting it so\nthat this behaviour can be avoided.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"55838d7de4156586b478ef44ce605c193b0ec793","messageTitle":"ParserUtil#split(): Add precondition for numOfParts \u003c 2","messageBody":"ParserUtil#split() does not make sense if the number of parts is less\nthan 2. There is no precondition check for this method.\n\nLet\u0027s add a precondition check that throws an IllegalArgumentException\nif there is an insufficient number of parts.\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":15}}}]},{"date":"2017-06-08","commitResults":[{"hash":"17aceb2eb3fb492aa8541c6224d530a2836b3777","messageTitle":"Add Prefix \"n/\" for specifying names","messageBody":"There is no Prefix for specifying names. The name is included in the\npreamble of the argument for the add and edit commands.\n\nPutting the name in the preamble can make the code more complex. For\nexample, in EditCommandParser, the preamble includes both the index\nand the name, so EditCommandParser has to split it.\n\nLet\u0027s add a new Prefix \"n/\" for specifying names so that the name will\nnot be parsed as part of the preamble.\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":59}}},{"hash":"3c729eccff474ae0f36636207807a26df52eb3f2","messageTitle":"Remove ParserUtil#split(String, int)","messageBody":"ParserUtil#split(String, int) is unused.\n\nLet\u0027s remove ParserUtil#split(String, int) and its tests.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":88}}},{"hash":"8c3eb78925eff1fb77e38cd988b9b1e1a14aac57","messageTitle":"docs: Add new Name prefix","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":10}}}]},{"date":"2017-06-30","commitResults":[{"hash":"665c58746415be8eea0debf1c9a2503bc7147308","messageTitle":"Add FindCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":0}}},{"hash":"75aa3d928e96924ee95ba8b2ef7471e1aee46375","messageTitle":"FindCommand: Add equals(Object)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"9475a8eeaea9ebb7e5ce328df23fd1e47c327669","messageTitle":"Add FindCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}}]},{"date":"2017-07-14","commitResults":[{"hash":"dbf6c85d2c7800ba566d2e512df825d7a39c3831","messageTitle":"Use predicates in ModelManager","messageBody":"ModelManager#updateFilteredPersonList(Set\u003cString\u003e) searches for name\nusing a set of keywords. To add more filtering methods, the model source\ncode must be edited directly.\n\nUsing Java Predicates allow us to be more flexible by allowing the\ncaller to search for fields other than name and different combinations\nof fields.\n\nLet\u0027s replace ModelManager#updateFilteredPersonList(Set\u003cString\u003e) with\nModelManager#updateFilteredPersonList(Predicate\u003cReadOnlyPerson\u003e) to\nallow more flexible searches.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":103}}},{"hash":"5b3b6c0c9ac501138399f6279603efc9d6fb0112","messageTitle":"Add NameContainsKeywordsPredicateTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}}]}],"Jia Yee":[{"date":"2016-12-09","commitResults":[{"hash":"8d9ff226f33c05a1acac43e611d94220c089d8f8","messageTitle":"Correct typos and grammatical errors in DG (#198)","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":7}}}]}],"Lim Shun Xian":[{"date":"2017-04-13","commitResults":[{"hash":"fa5b6d68d02e98d8b1c30dfb4c50185eb7b27389","messageTitle":"[#293] Implement a IndexUtil#oneToZeroIndex() abstraction (#331)","messageBody":"\"i - 1\" is sometimes used to convert \u0027i\u0027 from a one-based index to a\r\nzero-based index.\r\n\r\nComments have to be added to describe the purpose of \"i - 1\", as it is\r\nnot obvious whether we are taking the item before \u0027i\u0027, or whether we are\r\nconverting \u0027i\u0027 from a one-based index into a zero-based index, which\r\ndecreases code readability.\r\n\r\nLet\u0027s implement a IndexUtil#oneToZeroIndex(int) method which returns the\r\nzero-based index given the one-based index as input.\r\n\r\nThe use of IndexUtil.oneToZeroIndex(int) removes the need for a comment\r\nwhen we convert \u0027i\u0027 from a one-based index to a zero-based index.","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":13}}}]}],"Miao Ling":[{"date":"2017-05-19","commitResults":[{"hash":"1af6587f5bd9e70c2b7fba48d587f843b2250af1","messageTitle":"[#271] Migrate DeveloperGuide.md from markdown to asciidoc (#408)","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":422},"adoc":{"insertions":397,"deletions":0}}}]},{"date":"2017-05-22","commitResults":[{"hash":"a74cc95881c51ec7c7e958c6f150ee0a1daa4c68","messageTitle":"[#401] Add unit tests for ParserUtil#parseX() (#425)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":165,"deletions":0}}}]},{"date":"2017-05-24","commitResults":[{"hash":"d0272c5c5f26e83f431872f0c3e33534bfb88741","messageTitle":"Fix broken links to Developer Guide in docs (#432)","messageBody":"Update links to Developer Guide in README.md and LearningOutcomes.md.","fileTypesAndContributionMap":{"md":{"insertions":6,"deletions":6}}}]},{"date":"2017-05-26","commitResults":[{"hash":"46e86ee601fb7d38a55e58245a0033ac796ae408","messageTitle":"Migrate UserGuide.md from markdown to asciidoc (#435)","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":188},"adoc":{"insertions":186,"deletions":1}}},{"hash":"015b57d6ae29042e4281de6a644a0a2f950f418a","messageTitle":"[#401] Create unit tests for ParserUtil#parseIndex() (#423)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":7}}}]},{"date":"2017-07-31","commitResults":[{"hash":"06d9ac3c662a40ccfcf5366a95e1d96cbbd0cb00","messageTitle":"[#584] Add a sample portfolio page (#589)","messageBody":"In the future semester, students will be asked to create a portfolio\r\npage describing their contribution to the project.\r\n\r\nTo serve as an example, let\u0027s add a sample portfolio page.","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"adoc":{"insertions":43,"deletions":2}}}]},{"date":"2017-08-01","commitResults":[{"hash":"cb030aba0d1ed9ab7b2cc5c94def0caf4c5123df","messageTitle":"Move johndoe.adoc to the docs folder (#606)","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"adoc":{"insertions":3,"deletions":3}}}]}],"Leow Yijin":[{"date":"2016-09-21","commitResults":[{"hash":"843d0c6924068967d682ecc9a9480dfae3b894d9","messageTitle":"update .gitignore","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":2,"deletions":0}}},{"hash":"c6799bfaf200a0fd8af50d2751353b5e9ec6a581","messageTitle":"[39][76][77][78] Bring logic tests from level 3 (PR #74)","messageBody":"* separated ui setup from other component dependencies setup in MainWindow\r\n\r\n* tightened return type for browsermanager\u0027s getBrowserView\r\n\r\n* changed resultdisplay values to be accessible without javafx\r\n\r\n* separated commandbox logic from javafx ui component\r\n\r\n* changed components to expose parts for testing and modularity\r\n\r\n* ported over level 3 model\u0027s new utility features\r\n\r\n* ported model equality comparisons\r\n\r\n* ported logictest utility methods and updated implementation to match level 4 with ui\r\n\r\n* restructured packages inside model to actually make sense\r\n\r\n* ported testdatahelper from level3\r\n\r\n* ported level3\u0027s changes where parser would not instantiate any model objects\r\n\r\n* added simple commandbox tests and updated allowed name format\r\n\r\n* REMOVED PRIVATE FEATURE FROM MODEL\r\n\r\n* fix undetected merge conflicts\r\n\r\n* commandboxtest for add commnad\r\n\r\n* minor renaming and refactoring of methods in ui and model\r\n\r\n* added list and delete tests\r\n\r\n* added find tests\r\n\r\n* added select tests\r\n","fileTypesAndContributionMap":{"java":{"insertions":863,"deletions":405},"xml":{"insertions":11,"deletions":6}}}]},{"date":"2016-10-19","commitResults":[{"hash":"a6457927e1d5842ebea5332c7d6c47fb6612d4be","messageTitle":"[#87] Increase encapsulation of UniquePersonList (#162)","messageBody":"* renamed method for upl and utl\r\n\r\n* fixed storage to use xml adapted tags\r\n\r\n* fixed failing tests and RE-ENFORCED CONSTRAINTS PLEASE STOP BREAKING THIS\r\n\r\n* trim unused code\r\n\r\n* shifted inner classes to bottom\r\n","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":76}}}]},{"date":"2016-10-23","commitResults":[{"hash":"a85d69c20af37b762f7242de6368aa28eb9f8568","messageTitle":"Fixes #165 : AB comparison ignores order of tags","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}}]}],"Tan Wang Leng":[{"date":"2017-01-24","commitResults":[{"hash":"cbcd7b398f1067d3fa122278f86bb0031ff2e27d","messageTitle":"Make Travis CI output less verbose","messageBody":"Gradle utilises different levels for logging (see\nhttps://docs.gradle.org/current/userguide/logging.html).\n\n.travis.yml is set to execute gradle with \u0027-i\u0027. This means that log\nmessages with \u0027INFO\u0027 level and above are printed to stdout, which is a\nmore verbose level than the default.\n\nThe reasons for using \u0027INFO\u0027 level are as follows:\n\n  1. To ensure that the tests are actually running (instead of an empty\n     Gradle task in its place).\n\n  2. To determine which test stalled the CI (occasionally occurs due to\n     either Travis issues or faulty tests).\n\nHowever, such detailed logging also generates a large quantity of\nlogging information from non-test-runners, which pollutes the log and\nmakes it extremely verbose without providing any additional useful\ndiagnosis information for tests.\n\nAs such, remove \u0027-i\u0027 to disable \u0027INFO\u0027 logging level, and also modify\nbuild.gradle to ensure that the progress of the test runner is still\nbeing reported.\n","fileTypesAndContributionMap":{"gradle":{"insertions":11,"deletions":0},"yml":{"insertions":1,"deletions":1}}}]},{"date":"2017-02-08","commitResults":[{"hash":"fedb4f9cf05844fc145e6b0d2b0c86c3787d2a93","messageTitle":"Fix Address accepting blank addresses (spaces)","messageBody":"The current regex is too flexible, as it allows any kind of characters,\nincluding a trailing of whitespace characters (e.g. \"       \");\n\nModify the regex, such that blank strings (including \"\") are no longer\nallowed.\n\nAn alternative would be to edit the validation function to check for\nthe length of the trimmed string seperately (i.e. test.trim().length()\n\u003d\u003d 0). However, that would not be elegant since we will now have two\ndifferent things doing our validation (regex and the code checking the\nlength), which feels unnecessary compared to just using regex alone.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"4f04962a297a7b48af8e9c98bfae74f933e16232","messageTitle":"Fix Name accepting blank names (spaces)","messageBody":"The current regex allows space characters. However, this means that a\nstring of whitespace characters (e.g. \"         \") are permitted.\n\nModify the regex such that blank strings (such as \" \") are no longer\nallowed.\n\nAn alternative would be to edit the validation function to check for\nthe length of the trimmed string seperately (i.e. test.trim().length()\n\u003d\u003d 0). However, that would not be elegant since we will now have two\ndifferent things doing our validation (regex and the code checking\nlength), which feels unnecessary compared to just using regex alone.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"6f75b3dc92d0f659a752afe6823acee61779d184","messageTitle":"Add unit tests for person\u0027s fields classes","messageBody":"The person\u0027s fields classes (Phone, Email, Address, Name) are\npreviously being tested indirectly by integration testing, through\ntesting of the \"Add\" command, which happened to use these classes.\n\nTherefore, Add unit tests for them. By doing so, we  are able to test\nthe validation code for these classes directly, and use inputs that\nwere previously impossible to test in the integration testings (such\nas having a blank address with spaces: \" \", which cannot be entered\nthrough the command box).\n","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":0}}}]},{"date":"2017-03-25","commitResults":[{"hash":"2749e8512f3b508ecd93e97788c1f0a6a1efb076","messageTitle":"PersonBuilder: Fix withTags(...) modifying Person\u0027s UniqueTagList","messageBody":"Person\u0027s UniqueTagList is supposed to be immutable.\n\nPersonBuilder#withTags(String...) does not obey the immutability\nrequirements since it directly modifies the Person\u0027s UniqueTagList when\nadding new tags.\n\nLet\u0027s teach PersonBuilder#withTags(String...) to supply a correctly\npopulated UniqueTagList to the Person#setTags(...) method, instead of\nmodifying the UniqueTagList after it has been passed to the\nPerson#setTags(...) method.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}},{"hash":"ed1a39fe4a858f5682f119cd2fb9ad9cd1e92e00","messageTitle":"ReadOnlyPerson: Change ReadOnlyPerson#getTags() to return Set\u003cTag\u003e","messageBody":"ReadOnlyPerson#getTags() returns a mutable UniqueTagList.\n\nIt is better if the method returned an immutable data structure such as\nan immutable Set\u003cTag\u003e.\n\nAs a step towards returning an immutable Set\u003cTag\u003e, let\u0027s change\nReadOnlyPerson#getTags() to return a Set\u003cTag\u003e instead of UniqueTagList.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":35}}},{"hash":"270cff83b13f670f8aa8a6258771e3522dd2a0bc","messageTitle":"Person: Change getTags() to return immutable tag set","messageBody":"Person#getTags() returns a mutable Set\u003cTag\u003e.\n\nThis violates the contract of ReadOnlyPerson#getTags() that\nPerson#getTags() implements, which expects an immutable Set\u003cTag\u003e.\n\nLet\u0027s change Person#getTags() to return an immutable Set\u003cTag\u003e.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"470957d1a16ddc0f4f8945a5d13f5a6846565e42","messageTitle":"Person: Change setTags(UniqueTagList) to setTags(Set\u003cTag\u003e)","messageBody":"The parameter type of Person#setTags(UniqueTagList) is inconsistent\nwith the getter counterpart Person#getTags():Set\u003cTag\u003e. This also means\nthat updating a Person\u0027s tag list will require converting from Set\u003cTag\u003e\nto UniqueTagList.\n\nLet\u0027s change Person#setTags(UniqueTagList) parameter type to Set\u003cTag\u003e\nso that the setter is consistent with the getter.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"21b84ac4aaeafa975d1200251c81ff458bd0680b","messageTitle":"Person: Change constructor to take Set\u003cTag\u003e instead of UniqueTagList","messageBody":"Person#Person(Name, Phone, Email, Address, UniqueTagList) is one of the\nconstructors in Person.\n\nUsing a UniqueTagList as a parameter type in the constructor is\ninconsistent with the API, as Person#getTags() returns a Set\u003cTag\u003e. This\nalso means that duplicating a Person will require converting its tag\nlist from Set\u003cTag\u003e to UniqueTagList.\n\nLet\u0027s change Person#Person(...) to accept Set\u003cTag\u003e (instead of\nUniqueTagList) so that the constructor is consistent with the API.\n","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":33}}},{"hash":"c85f70dfff7c03cef9db5ba627b1ce0369693f8e","messageTitle":"AddCommand: Change constructor to use Set\u003cTag\u003e instead of UniqueTagList","messageBody":"AddCommand#AddCommand(...) converts the UniqueTagList to a Set\u003cTag\u003e,\nonly to have the Person\u0027s constructor converting it back to a\nUniqueTagList.\n\nLet\u0027s change AddCommand#AddCommand(...), to accept a Set\u003cTag\u003e (instead\nof UniqueTagList), so as to avoid converting back and forth.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]},{"date":"2017-05-12","commitResults":[{"hash":"05a676443ef9016e1c6975b06d6fb322b43b4dc2","messageTitle":"[#172] Add unit tests for AddCommand (#273)","messageBody":"AddCommand does not have unit tests.\r\n\r\nLet\u0027s write AddCommandTest (unit test version), which injects a model\r\nstub into the command, so that the behavior of AddCommand can be\r\ntested in isolation.\r\n\r\nTo implement the stubs, we need to be able to throw\r\nDuplicatePersonException, so make it public.","fileTypesAndContributionMap":{"java":{"insertions":138,"deletions":1}}}]},{"date":"2017-05-15","commitResults":[{"hash":"0f2cb22b3dbf7cdc592e2b58261728241f4d4166","messageTitle":"[#303] Modify ParserUtil#parseIndex(String) to throw IllegalValueException (#403)","messageBody":"ParserUtil#parseIndex(String) returns an empty Optional if the input is\r\nnot a positive unsigned integer.\r\n\r\nFailing silently prevent callers from distinguishing between missing\r\ninput vs wrong input format.\r\n\r\nLet\u0027s modify ParserUtil#parseIndex(String) to throw\r\nIllegalValueException when it receives an input that is not a positive\r\nunsigned integer.","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":21}}},{"hash":"b8c4d5b4badc939ab9599acae8db10c40e037269","messageTitle":"Change MainWindow\u0027s BrowserPanel to use StackPane","messageBody":"MainWindow uses an AnchorPane as a placeholder for BrowserPanel. This\nrequires manual adjustment of BrowserPanel\u0027s anchors to fill up the\nentire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":2},"java":{"insertions":5,"deletions":6}}},{"hash":"0a1c3a99079f99c314c35c403b1c0f9b681c1964","messageTitle":"Change MainWindow\u0027s CommandBox to use StackPane","messageBody":"MainWindow uses an AnchorPane as a placeholder for CommandBox. This\nrequires manual adjustment of CommandBox\u0027s anchors to fill up the\nentire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2},"css":{"insertions":6,"deletions":0},"java":{"insertions":5,"deletions":8}}},{"hash":"eb2ee4176aa6da8139f8c6352199660f89c5560b","messageTitle":"Change MainWindow\u0027s PersonListPanel to use StackPane","messageBody":"MainWindow uses an AnchorPane as a placeholder for PersonListPanel. This\nrequires manual adjustment of PersonListPanel\u0027s anchors to fill up the\nentire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":5,"deletions":7}}},{"hash":"c684e8a89a09b3f3daeb4757eea50a6683f7d635","messageTitle":"Change MainWindow\u0027s ResultDisplay to use StackPane","messageBody":"MainWindow uses an AnchorPane as a placeholder for ResultDisplay. This\nrequires manual adjustment of ResultDisplay\u0027s anchors to fill up the\nentire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n\nThe ResultDisplay is wrapped inside another AnchorPane. It is\nredundant. Remove it.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":5},"java":{"insertions":5,"deletions":11}}},{"hash":"6faf8cd4e108d5d78aabc0af4323ba43d785414c","messageTitle":"Change MainWindow\u0027s StatusBarFooter to use StackPane","messageBody":"MainWindow uses an AnchorPane as a placeholder for StatusBarFooter. This\nrequires manual adjustment of StatusBarFooter\u0027s anchors to fill up the\nentire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":2},"java":{"insertions":5,"deletions":8}}},{"hash":"54bff95d0bde03178ca77dec447597d77bc904e2","messageTitle":"Change HelpWindow to use StackPane","messageBody":"HelpWindow uses an AnchorPane to display the help browser. This requires\nmanual adjustment of the browser\u0027s anchors to fill up the entire space.\n\nStackPane has this behavior by default.\n\nLet\u0027s change the AnchorPane to StackPane so that we do not need to do\nthe manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"java":{"insertions":0,"deletions":1}}},{"hash":"cf98b04511de0ed33f94d91ba913b5de03d8b65b","messageTitle":"Remove FxViewUtil#applyAnchorBoundaryParameters()","messageBody":"FxViewUtil#applyAnchorBoundaryParameters() is no longer used anywhere\nin the codebase.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":9}}},{"hash":"dbfa20f3050d489caa469ffa3d8e4d5c1ded7cf1","messageTitle":"Combine .anchor-pane-with-border and .stack-pane-with-border","messageBody":"The design of panes with border are the same regardless of whether it is\nan AnchorPane or a StackPane.\n\nLet\u0027s combine .anchor-pane-with-border and .stack-pane-with-border to\njust .pane-with-border.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"css":{"insertions":1,"deletions":7}}}]},{"date":"2017-05-19","commitResults":[{"hash":"ad970d90a8c4a9e81680c053e033f5f2255f459d","messageTitle":"Change UniquePersonList#add(...) signature to ReadOnlyPerson","messageBody":"UniquePersonList#add(Person) directly inserts the input Person object\nto the internal list.\n\nThis makes it possible for outside classes to indirectly modify Person\nobjects in the list, making the list unable to guarantee its constraint\nof uniqueness for each Person.\n\nLet\u0027s change the signature of UniquePersonList#add(...) from Person to\nReadOnlyPerson, so that the inner logic is forced to store a copy of\nthe Person object, preventing outside classes from modifying objects\nalready inserted into the list and violating the list\u0027s constraint.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1d9a07fd3469504f545ccc4492b2d810994137d2","messageTitle":"Change AddressBook#addPerson(...) signature to ReadOnlyPerson","messageBody":"AddressBook#addPerson(Person) accepts a mutable Person object. Outside\nclasses are able to modify the Person object after inserting it into\nthe address book.\n\nOnly AddressBook should be able to modify the Person objects that it owns.\n\nLet\u0027s change addPerson()\u0027s signature from Person to ReadOnlyPerson, so\nthat the internal Person list is forced to duplicate this object,\nsatisfying our new constraint.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"9e158dd1e06328b723edeeded077f15019ac39d0","messageTitle":"Change Model#addPerson(...) signature to ReadOnlyPerson","messageBody":"Model#addPerson(Person) accepts a mutable Person object. Outside\nclasses are able to modify the Person object after inserting it into\nthe model.\n\nOnly Model should be able to modify the Person objects that it owns.\n\nLet\u0027s change addPerson()\u0027s signature from Person to ReadOnlyPerson, so\nthat the internal Person list is forced to duplicate this object,\nsatisfying our new constraint.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}}]},{"date":"2017-05-26","commitResults":[{"hash":"cebed7329394a82a16c76add783ef9a677076a88","messageTitle":"[#433] GuiHandle#setTextField(String, String) should call Gui methods on JavaFx threads (#434)","messageBody":"On some computers, GuiHandle#setTextField() throws an\r\nIllegalStateException, indicating that the methods called in\r\nGuiHandle#setTextField() should have been executed on the JavaFx Gui\r\nthread.\r\n\r\nLet\u0027s fix GuiHandle#setTextField() to call Gui modification methods\r\non the JavaFx Gui thread.","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"621ede40779fe60058157430eef0db3e54bfa1aa","messageTitle":"Modify all command parsers\u0027 parse(String) to throw ParseException","messageBody":"All command parsers return an IncorrectCommand object when they\nencounter a parse error.\n\nThe parse error can be made more visible if an exception was thrown\ninstead. Otherwise, the caller is unable to handle any parsing errors\nsuch as IllegalValueException. Context information, such as the\nstacktrace, is also lost when wrapping the exception instead of\nreturning it directly.\n\nLet\u0027s change all command parsers\u0027 parse(String) methods such that they\nthrow ParseException instead of returning an IncorrectCommand object.\n","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":69}}},{"hash":"64eab5d850926fba45d8f3a759adbd9410119f3e","messageTitle":"Change command parsers\u0027 parse(String) return type to be more specific","messageBody":"All command parsers\u0027 parse(String) methods return the base Command\ntype, instead of the specific command that they are tasked to parse\n(for example, AddCommand for AddCommandParser).\n\nLet\u0027s change all command parsers\u0027 parse(String)\u0027s return type from the\ngeneric Command type to their specific command type that they are\ntasked to parse.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":10}}},{"hash":"3b626bba65bb34231fe2e11ab5504073efddde13","messageTitle":"Remove IncorrectCommand","messageBody":"Parser throws a ParseException instead of IncorrectCommand when\nencountering an unrecognized command.\n\nIncorrectCommand is no longer in use anywhere.\n\nLet\u0027s remove IncorrectCommand.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":22}}}]},{"date":"2017-06-02","commitResults":[{"hash":"413275f9f022ee1c350c9fff276df87d84d985a8","messageTitle":"Create Index class","messageBody":"The usages of zero-based indices and one-based indices are mixed\nthroughout the codebase. Both use int, and are only differentiated by\ndifferent prefixes for the variable names (e.g zeroBasedIndex,\noneBasedIndex).\n\nThe index base can cause confusion and is prone to error. The\nconversion also takes place at different areas of the codebase and is\ninconsistent.\n\nLet\u0027s create an Index class, allowing methods to specify their expected\nbase for the input index without explicitly converting it.\n","fileTypesAndContributionMap":{"java":{"insertions":147,"deletions":0}}},{"hash":"24622e28586a5d932a78520e0645588e5b37eeea","messageTitle":"Update codebase to use Index instead of int","messageBody":"The usages of zero-based indices and one-based indices are mixed\nthroughout the codebase. Both use int, and are only differentiated by\ndifferent prefixes for the variable names (e.g zeroBasedIndex,\noneBasedIndex).\n\nThe index base can cause confusion and is prone to error. The\nconversion also takes place at different areas of the codebase and is\ninconsistent.\n\nLet\u0027s update the codebase to use Index from the point when a new user\ninput is being parsed. Index will be passed around when communicating\nwith other components. However, each component within itself should\nconvert it back to int using Index#getZeroBased() or Index#getOneBased()\ndepending on the standard base of the index used within the component.\n","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":84}}}]},{"date":"2017-06-06","commitResults":[{"hash":"3de3b34bcf05aa4a9a656b238be22d7de6d78279","messageTitle":"[#469] Fix HelpWindow online user guide URL (#470)","messageBody":"We migrated the documentation rendering system from Markdown to\r\nAsciidoctor. The URL for the online user guide in the new Asciidoctor\r\nwebsite was changed.\r\n\r\nHelpWindow now points to the wrong URL.\r\n\r\nLet\u0027s fix the URL to point to the correct online user guide URL.","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-06-09","commitResults":[{"hash":"591c4c521c592d0008f67be98adf9e26ee1fb2f9","messageTitle":"Create gradle task for generating offline user guide","messageBody":"The offline user guide and its associated files have to be manually\nupdated by copying the corresponding html files from the asciidoctor\u0027s\noutput directory.\n\nSuch a process is tedious and prone to errors. Furthermore, we may\nforget to update to the new version when deploying a new .jar file.\n\nLet\u0027s create a new gradle task \u0027deployOfflineDocs\u0027, to automate the\ncopying process, in order to allow \u0027processResources\u0027 task to update\nthe offline user guide and its associated files first before running\nor deploying the application.\n","fileTypesAndContributionMap":{"gradle":{"insertions":13,"deletions":0},"gitignore":{"insertions":1,"deletions":0},"adoc":{"insertions":2,"deletions":0}}},{"hash":"ae3f81e3ea549be88aac672f9498ee599015c45a","messageTitle":"HelpWindow: Use offline version of user guide","messageBody":"The help window accesses the user guide at:\nhttps://se-edu.github.io/addressbook-level4/docs/UserGuide.\n\nThe user will not be able to access it if he has no internet connection.\nFurthermore, the user guide may not match the version that he is using.\n\nLet\u0027s change the user guide used by HelpWindow to an offline version.\n\nThe offline user guide and its associated files are stored at\n\u0027src/main/resources/docs\u0027, so that gradle\u0027s shadowJar deployment task\nwill automatically copy them to the output .jar file. It also allows\nHelpWindow to access them using a simple relative filepath.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2017-06-12","commitResults":[{"hash":"1bea354f06cfe721d17bdf267a560a7131aa3cae","messageTitle":"[#327] Add tests for ListCommand (#473)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":0}}}]},{"date":"2017-06-14","commitResults":[{"hash":"54faa4d46764fdf5a89fbe229686e7888cffe897","messageTitle":"[#327] Add SelectCommandTest (#487)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":137,"deletions":0}}}]},{"date":"2017-06-15","commitResults":[{"hash":"94149b9b67146de586e7a43a5b8878ee3dd2f5b4","messageTitle":"[#327] Add AddCommandIntegrationTest (#488)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":0}}}]},{"date":"2017-06-19","commitResults":[{"hash":"e98aa4c2770c1b194f8d29d62d851d29c1f6554f","messageTitle":"GuiRobot: Remove push(KeyCodeCombination)","messageBody":"GuiRobot#push(KeyCodeCombination) is not used in the codebase.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"bafef4e86336b809168ae6d9123746e8b59bb8ba","messageTitle":"TestUtil: Remove scrub(KeyCodeCombination)","messageBody":"TestUtil#scrub(KeyCodeCombination) is no longer used in the codebase.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":25}}}]},{"date":"2017-06-20","commitResults":[{"hash":"470f285abd57ac5a258f3adb51d9276caed5c5cf","messageTitle":"MainGuiHandle: Remove getAlertDialog(String)","messageBody":"An alert dialog box is a separate window from the main window.\nAs MainGuiHandle is the handle for the main window, it should not be\nthe responsibility of MainGuiHandle to create such a handle for the\ncallers.\n\nLet\u0027s remove getAlertDialog(String), and make the callers create the\nhandle on their own instead.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"94bfea960fffee520d7b2301b4951e3bcb4720a7","messageTitle":"MainGuiHandle: Create handles only once","messageBody":"The getter methods of MainGuiHandle return a new Handle when one is\nrequested.\n\nThis is inefficient as there is no need to recreate the handles.\nFurthermore, MainGuiHandle should be the owner of all the handles to the\ncomponents.\n\nLet\u0027s create the handles once in the constructor, and return these\nexisting handles in the getter methods.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}},{"hash":"b7663dbf33e89d4adccdc5fcf2e7303c7f562867","messageTitle":"Rename MainGuiHandle to MainWindowHandle","messageBody":"MainGuiHandle contains a list of handles to components found inside\nMainWindow.\n\nIt would be more appropriate to rename the class MainWindowHandle as it\nis tied to MainWindow rather than MainGui (which does not exist).\n\nLet\u0027s rename it from MainGuiHandle to MainWindowHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}}]},{"date":"2017-06-21","commitResults":[{"hash":"f7a5766af3d09475af6f9b276c8c26dc624b502d","messageTitle":"CommandBox: Remove call to SplitPane#setResizableWithParent()","messageBody":"The placeholder for CommandBox is stored inside StackPane, not a\nSplitPane.\n\nThe call to SplitPane#setResizableWithParent() is erroneous and has no\neffect.\n\nLet\u0027s remove the call to SplitPane#setResizableWithParent() in\naddToPlaceholder(Pane).\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"4acbb6cd76c5a683c70ff519eeecea775d2ab2df","messageTitle":"CommandBox: Remove placeholder from constructor","messageBody":"The components accept a placeholder in their constructor in order for\nthem to add themselves into the placeholder. Therefore the placeholder\nacts like a parent to the component.\n\nThe components themselves should not know about their parent placeholder\nas this creates a bi-directional dependency coupling.\n\nLet\u0027s remove the placeholder parameter in CommandBox\u0027s constructor, and\nlet MainWindow add the component to the placeholder instead.\n\nThe component no longer fills up the entire space of the placeholder as\nit now contains the root node of the component as well. Let\u0027s also\nmodify the .fxml to allow the component to fill up the entire space.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":4,"deletions":8}}},{"hash":"dac78051e25237a925636246c6f873e2e9bebd65","messageTitle":"StatusBarFooter: Remove placeholder from constructor","messageBody":"The components accept a placeholder in their constructor in order for\nthem to add themselves into the placeholder. Therefore the placeholder\nacts like a parent to the component.\n\nThe components themselves should not know about their parent placeholder\nas this creates a bi-directional dependency coupling.\n\nLet\u0027s remove the placeholder parameter in StatusBarFooter\u0027s constructor, and\nlet MainWindow add the component to the placeholder instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":8}}},{"hash":"baf00d32843e028a9875e93f413f818e8e5346f8","messageTitle":"ResultDisplay: Remove placeholder from constructor","messageBody":"The components accept a placeholder in their constructor in order for\nthem to add themselves into the placeholder. Therefore the placeholder\nacts like a parent to the component.\n\nThe components themselves should not know about their parent placeholder\nas this creates a bi-directional dependency coupling.\n\nLet\u0027s remove the placeholder parameter in ResultDisplay\u0027s constructor, and\nlet MainWindow add the component to the placeholder instead.\n\nThe component no longer fills up the entire space of the placeholder as\nit now contains the root node of the component as well. Let\u0027s also\nmodify the .fxml to allow the component to fill up the entire space.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":4,"deletions":4}}},{"hash":"d1bd1cd1a49ab1fe3159cf955aa37de686db3cf5","messageTitle":"PersonListPanel: Set SplitPane.resizableWithParent in .fxml","messageBody":"PersonListPanel\u0027s placeholder should not resize when the SplitPane is\nresized.\n\nThe attribute can be set in .fxml, rather than setting it\nprogrammatically.\n\nLet\u0027s set PersonListPanel placeholder\u0027s SplitPane.resizableWithParent\nattribute in .fxml instead of setting it programmatically.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":0,"deletions":2}}},{"hash":"7608a9c595d4779a9d3a56f70d8f6d6500d6b919","messageTitle":"PersonListPanel: Fix SplitPane.resizableWithParent not working","messageBody":"PersonListPanel should not resize when the MainWindow is being resized.\nThis is accomplished by setting the SplitPane.resizableWithParent\nattribute to false.\n\nThe attribute is set inside the PersonListPanel\u0027s placeholder, but the\nplaceholder is enclosed inside a VBox element. Therefore, when the user\nresizes the window, the SplitPane is still able to resize the VBox,\nwhich in turn resizes the placeholder. This behavior overrides the\nattribute.\n\nLet\u0027s set the SplitPane.resizableWithParent attribute in the VBox\nelement, so that the VBox element cannot be resized by the window, which\nin turn prevents the placeholder from resizing as well.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2}}},{"hash":"9b45ac30273c71d112a1b34bf2b55732868bf561","messageTitle":"PersonListPanel: Remove placeholder from constructor","messageBody":"The components accept a placeholder in their constructor in order for\nthem to add themselves into the placeholder. Therefore the placeholder\nacts like a parent to the component.\n\nThe components themselves should not know about their parent placeholder\nas this creates a bi-directional dependency coupling.\n\nLet\u0027s remove the placeholder parameter in PersonListPanel\u0027s constructor, and\nlet MainWindow add the component to the placeholder instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":8}}},{"hash":"1d780e1567479dce3bfdbd15891f44b70f5ab7fb","messageTitle":"BrowserPanel: Remove placeholder from constructor","messageBody":"The components accept a placeholder in their constructor in order for\nthem to add themselves into the placeholder. Therefore the placeholder\nacts like a parent to the component.\n\nThe components themselves should not know about their parent placeholder\nas this creates a bi-directional dependency coupling.\n\nLet\u0027s remove the placeholder parameter in BrowserPanel\u0027s constructor, and\nlet MainWindow add the component to the placeholder instead.\n\nThe component no longer fills up the entire space of the placeholder as\nit now contains the root node of the component as well. Let\u0027s also\nmodify the .fxml to allow the component to fill up the entire space.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":4,"deletions":9}}},{"hash":"d511d69e7f4ee1a07d83c8a6d0d0d1f53eeb391d","messageTitle":"MainWindow: Remove getXPlaceholder() methods","messageBody":"The MainWindow contains getter methods for each placeholder.\n\nThey are unused.\n\nLet\u0027s remove them.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":16}}}]},{"date":"2017-06-22","commitResults":[{"hash":"729eec99c286f31677bc0082231f72ea1d8fdde7","messageTitle":"BrowserPanel: Change AnchorPane to StackPane","messageBody":"BrowserPanel is enclosed inside an AnchorPane. We have to configure\nBrowserPanel\u0027s anchor attributes to allow it to stretch together with\nthe AnchorPane.\n\nStackPane already provide this behavior by default. Therefore, StackPane\nis more suitable than AnchorPane for our purpose.\n\nLet\u0027s change the use of AnchorPane to StackPane instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":5}}},{"hash":"32513851709c5e16ba9a5551ab95a5d4f43c588b","messageTitle":"CommandBox: Change AnchorPane to StackPane","messageBody":"CommandBox is enclosed inside an AnchorPane. We have to configure\nCommandBox\u0027s anchor attributes to allow it to stretch together with\nthe AnchorPane.\n\nStackPane already provide this behavior by default. Therefore, StackPane\nis more suitable than AnchorPane for our purpose.\n\nLet\u0027s change the use of AnchorPane to StackPane instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":5}}},{"hash":"0e39f066e4b692996782bccafe1634de127762f3","messageTitle":"ResultDisplay: Change AnchorPane to StackPane","messageBody":"ResultDisplay is enclosed inside an AnchorPane. We have to configure\nResultDisplay\u0027s anchor attributes to allow it to stretch together with\nthe AnchorPane.\n\nStackPane already provide this behavior by default. Therefore, StackPane\nis more suitable than AnchorPane for our purpose.\n\nLet\u0027s change the use of AnchorPane to StackPane instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":5}}}]},{"date":"2017-06-23","commitResults":[{"hash":"9e2f9bd84259c9414359cf4f21a8002d7b81a642","messageTitle":"EditCommandTest: Move assertCommandFailure(...) to CommandTestUtil","messageBody":"EditCommandTest#assertCommandFailure(EditCommand, String) can be\nused to test commands other than EditCommand.\n\nLet\u0027s extract EditCommandTest#assertCommandFailure(EditCommand, String)\nout to CommandTestUtil, and make the command parameter more generic so\nthat it can be used by any type of commands.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":27}}},{"hash":"1e8bd97eda888e6ef9038233794780c70c01d0eb","messageTitle":"EditCommandTest: Move assertCommandSuccess(...) to CommandTestUtil","messageBody":"EditCommandTest#assertCommandSuccess(EditCommand, String,\nReadOnlyAddressBook, List\u003c? extends ReadOnlyPerson\u003e) can be used to test\ncommands other than EditCommand.\n\nLet\u0027s extract EditCommandTest#assertCommandSuccess(...) out to\nCommandTestUtil, and make the command parameter more generic so that it\ncan be used by any type of commands.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":18}}},{"hash":"276d47c2fcac0111d69e01dc352ca172559b298f","messageTitle":"Add DeleteCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":0}}},{"hash":"e5ea5d7121fee2bacd02acf94c37106e944b95aa","messageTitle":"GuiRobot: Add pauseForHuman(int)","messageBody":"The current uses of `guiRobot.sleep()` in our gui tests can be\ncategorized into two groups:\n\n  (A) To prevent the tests from executing too fast, as that prevents us\n      from visually examining the progression of the test.\n\n  (B) To wait for something to happen on the JavaFX Application thread.\n\nBoth types of uses of `guiRobot.sleep()` are undesirable. Group (A)\nunfairly makes our GUI tests slower in headless mode, as in headless\nmode we can\u0027t visually examine GUI test progression anyway. Group (B)\nis wrong and can lead to flaky tests, as sleeping for a set amount of\ntime does not guarantee that what we are waiting for actually occurs on\nthe JavaFX Application thread.\n\nLet\u0027s start by cleaning up group (A), by adding GuiRobot#pauseForHuman(int)\nto make the usage of pausing the test execution clearer, and also to\nallow headless mode to disable these unnecessary pauses.\n\nWe then replace all usages of `guiRobot.sleep()` in group (A) with\n`guiRobot.pauseForHuman()`.\n\nThe remaining usages of `guiRobot.sleep()` in the code base fall into\ngroup (B), which we shall clean up in the next commit.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":10}}}]},{"date":"2017-06-27","commitResults":[{"hash":"aa9693501043561b79998de82d667f5c0c5f4c5a","messageTitle":"ErrorDialogGuiTest: Implement smart wait for showErrorDialogs()","messageBody":"ErrorDialogGuiTest#showErrorDialogs() posts a \u0027DataSavingExceptionEvent\u0027.\nThis event is caught by the GUI, which launches an Alert dialog box.\n\nThe GUI launches the dialog box, waits for 1000ms, and assumes that the\ndialog box is open after 1000ms. The delay does not guarantee that the\nAlert dialog box is actually opened after 1000ms has passed.\n\nLet\u0027s add guiRobot.waitForEvent() to add incremental wait, and also ensure\nthat the Alert dialog box is actually opened before proceeding. It will\nalso fail if our wait becomes too long.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":4}}},{"hash":"46b19c02d2a6e1e7f6e18ff8878b58fbd6850c79","messageTitle":"GuiRobot#pauseForHuman(int): Remove duration parameter","messageBody":"Some events are easy to examine and require less time for pausing, while\nother events require more human processing time. Therefore, the tests\nrequire different values of time to sleep.\n\nHowever, this makes it difficult to use GuiRobot#pauseForHuman(int) as\ndevelopers need to determine the desirable waiting time.\n\nLet\u0027s remove the duration parameter, and standardise the waiting time\nto be 250ms, which is sufficient for events that require more human\nprocessing time.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":17}}},{"hash":"315ca9c8c15b5854256ec44809aaee2642cf2b14","messageTitle":"GuiRobot#waitForEvent(BooleanSupplier, int): Add default timeout value","messageBody":"GuiRobot#waitForEvent(BooleanSupplier, int) takes in a parameter for the\ntimeout value.\n\nFor most events, a reasonable waiting time would be 5000ms.\n\nLet\u0027s add a default timeout value for GuiRobot#waitForEvent().\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"357325788727f5f5e81d10ab07ba50f18532067c","messageTitle":"GuiHandle: Remove guiRobot from constructor parameters","messageBody":"It is not necessary to pass in a guiRobot when each handle can create\none on their own.\n\nLet\u0027s remove guiRobot from the constructor parameters.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":47}}},{"hash":"39edc0922122b9d714acc6dbcf46d2d9612715e8","messageTitle":"GuiHandle: Remove primaryStage constructor parameter","messageBody":"The primaryStage variable is not used anywhere.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":48}}},{"hash":"8eed4fc38775b57ab97bff49709f832519682b54","messageTitle":"GuiHandle: Move pressEnter() to CommandBoxHandle","messageBody":"GuiHandle#pressEnter() allows tests to press the Enter key and pause for\na while.\n\nOnly CommandBoxHandle uses pressEnter().\n\nLet\u0027s move pressEnter() from GuiHandle to CommandBoxHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"99062b465ebd087a0946d396ad7775a714df998d","messageTitle":"Inline GuiHandle#setTextFieldText()","messageBody":"GuiHandle#setTextFieldText() emulates the user typing text into the\nspecified text field.\n\nOnly CommandBoxHandle uses setTextFieldText().\n\nLet\u0027s inline GuiHandle#setTextFieldText().\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":8}}},{"hash":"c2319a9a1d377c6d44f4d6b3a90b53fe95228599","messageTitle":"Inline GuiHandle#getTextFieldText(String)","messageBody":"GuiHandle#getTextFieldText(String) gets the content of a text field.\n\nNot all components have a text field. Furthermore, only CommandBoxHandle\nuses a text field.\n\nLet\u0027s inline GuiHandle#getTextFieldText(String).\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":7}}},{"hash":"98bab2b3c6a5544e127634a7487bd70b65ef0e17","messageTitle":"Inline GuiHandle#getTextFromLabel(String, Node)","messageBody":"GuiHandle#getTextFromLabel(String, Node) gets the content of a label\nbelonging to a root node.\n\nNot all components have a label. Furthermore, only PersonCardHandle uses\na label.\n\nLet\u0027s inline GuiHandle#getTextFromLabel(String, Node).\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":9}}},{"hash":"943d1286f93d140b62e0ecf3f2c837a2ebb7ac4b","messageTitle":"EventsCollector: Add getSize()","messageBody":"Some test requires checking that no extra events were called.\n\nLet\u0027s add EventsCollector#getSize() to check how many events were called.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"0fd010a8095baa15b79f6169466f92d151151de5","messageTitle":"EventsCollector: Add getMostRecent()","messageBody":"StorageManagerTest uses EventsCollector. It is only interested in\ntesting the most recent event that has occurred.\n\nThe test gets the first event from the EventsCollector\u0027s List as it\nassumes that is the most recent event. That assumption may not always\nbe true.\n\nLet\u0027s add EventsCollector#getMostRecent() that retrieves the most recent\nevent, and teach StorageManagerTest to call that instead.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"36edb5221a2ea76f8136941db55cf869635c426f","messageTitle":"HelpCommandTest: Use EventsCollector to receive events","messageBody":"HelpCommandTest manually subscribes to ShowHelpRequestEvent to test that\nthe event is actually being raised.\n\nEventsCollector allows us to check that the event is raised without\nhaving to manually subscribe to the event.\n\nLet\u0027s use EventsCollector in our HelpCommandTest instead.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":16}}},{"hash":"21b0e337c24db98d1fe8d2580fb411f18e812006","messageTitle":"ExitCommandTest: Use EventsCollector to receive events","messageBody":"ExitCommandTest manually subscribes to ExitAppRequestEvent to test that\nthe event is actually being raised.\n\nEventsCollector allows us to check that the event is raised without\nhaving to manually subscribe to the event.\n\nLet\u0027s use EventsCollector in our ExitCommandTest instead.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":16}}},{"hash":"64fd5b9fa247f3bff113b474409d0ea934655336","messageTitle":"SelectCommandTest: Use EventsCollector to receive events","messageBody":"SelectCommandTest manually subscribes to JumpToListRequestEvent to test\nthat the event is actually being raised with the correct Index.\n\nEventsCollector allows us to check that the event is raised without\nhaving to manually subscribe to the event.\n\nLet\u0027s use EventsCollector in our SelectCommandTest instead.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":18}}},{"hash":"1bf9b4f4176f71db4d19f30641182c6670b0e42d","messageTitle":"EventsCollector: Add isEmpty()","messageBody":"SelectCommandTest expects that no events are raised.\n\nLet\u0027s create EventsCollector#isEmpty() to check that no events are\nraised.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"fbdc48389e26e64d9089a274e243ef565b3ee7d1","messageTitle":"EventsCollector: Remove get(int)","messageBody":"EventsCollector#get(int) is unused.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":7}}}]},{"date":"2017-06-28","commitResults":[{"hash":"980c03648955b220df4d8c18057258cbb11753cc","messageTitle":"PersonListPanelHandle: Change getSelectedPersons()","messageBody":"getSelectedPersons() returns a list of persons.\n\nThe MainWindow\u0027s PersonListPanel only allows a maximum of one person to\nbe selected. There is no reason for getSelectedPersons() to return a\nlist of persons.\n\nLet\u0027s modify PersonListPanelHandle#getSelectedPersons() to return the\nperson selected, or Optional.empty() if no one is selected, and rename\nit to getSelectedPerson() to reflect the new behaviour.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}},{"hash":"359ca02c1caaf1a1cf797f1078dac0dbeccce137","messageTitle":"Remove PersonListPanelHandle#containsInOrder(...)","messageBody":"PersonListPanelHandle#containsInOrder(int, ReadOnlyPerson...) checks\nthat the contents of the list view matches our expected person list.\nThis behaviour is similar to isListMatching(...).\n\nHaving two methods with the same functionality is unnecessary.\n\nLet\u0027s remove PersonListPanelHandle#containsInOrder(...).\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":24}}},{"hash":"3a2c9adbf25142ddf92e3275fe010bb40046b3bd","messageTitle":"PersonListPanelHandle#isListMatching(...): Retrieve list view once","messageBody":"PersonListPanelHandle#isListMatching(...) retrieves the list view twice.\n\nRetrieving the list view multiple times is inefficient. Furthermore, the\nstate of the list view might have changed between the two retrievals,\nleading to an inaccurate result.\n\nLet\u0027s change PersonListPanelHandle#isListMatching(...)\u0027s logic to ensure\nthat the retrieval is only done at the start of the method.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}},{"hash":"028b25c2f414068d9f918ac4ea1d460ea7d7564a","messageTitle":"PersonListPanelHandle#navigateToPerson(): Throw PersonNotFoundException","messageBody":"PersonListPanelHandle#navigateToPerson(String) throws an\nIllegalStateException.\n\nWe should throw a checked exception so that our tests would be able to\nhandle the situation whereby the person we are trying to navigate to\ndoes not exist.\n\nLet\u0027s replace throwing an IllegalStateException to a\nPersonNotFoundException.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d49d89a4f1c337ef05d71c344d913a331fbe767e","messageTitle":"PersonListPanelHandle#navigateToPerson(...): Use Person instead of index","messageBody":"PersonListPanelHandle#navigateToPerson(...) obtains the index of the\ntargeted person to scroll to.\n\nWe can use the Person object directly instead of obtaining an index.\n\nLet\u0027s change PersonListPanelHandle#navigateToPerson(...) to use a Person\ninstead of an index. Since the Person may not be in the list, let\u0027s\nthrow a PersonNotFoundException if the person cannot be found in the list.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":8}}},{"hash":"ae4a128404c1b15f0181afe115e83b6021ee89ef","messageTitle":"PersonListPanelHandle: Remove unused getPersonIndex(int)","messageBody":"PersonListPanelHandle#getPersonIndex(int) is no longer in use.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":15}}},{"hash":"b75943c924dffc1ce27efc8a3a7664780bd18a94","messageTitle":"Remove PersonListPanelHandle#navigateToPerson(String)","messageBody":"PersonListPanelHandle#navigateToPerson(String) picks a Person that has a\nmatching name.\n\nThere may be two Persons of the same name. It is not possible to\nidentify which Person should be picked in such situation.\n\nLet\u0027s remove PersonListPanelHandle#navigateToPerson(String).\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":14}}},{"hash":"85e001d85418e283e296e14fc3d5a320a6f2399e","messageTitle":"PersonListPanelHandle#navigateToPerson(): Remove pauseForHuman() calls","messageBody":"PersonListPanelHandle pauses two times using GuiRobot#pauseForHuman():\n  1. Before selecting the person\n  2. After selecting the person\n\nThe entire navigation should be seen as a single unit of action by a\nhuman. Therefore, pause 1 is unnecessary.\n\nLet\u0027s remove pause 1.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"d2d04cfa09e0002eab4633779842ac678b0fb899","messageTitle":"PersonListPanelHandle: Remove unused startPosition parameter","messageBody":"PersonListPanelHandle#cardsAndPersonsMatchInOrder(...) has a\nstartPosition.\n\nAll callers of the method only specifies 0 as the startPosition (i.e.\nuse the entire list). This makes the startPosition parameter\nunnecessary.\n\nLet\u0027s remove unused startPosition parameter in\nPersonListPanelHandle#cardsAndPersonsMatchInOrder(ReadOnlyPerson). With\nthe parameter startPosition removed,\nPersonListPanelHandle#isListMatching(int, ReadOnlyPerson) is no longer\nnecessary. Let\u0027s remove that too.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":12}}},{"hash":"f55e4b9ed18eac87457b258f4ebfecb54e868a5a","messageTitle":"PersonListPanelHandle#navigateToPerson(...): Remove return type","messageBody":"PersonListPanelHandle#navigateToPerson(ReadOnlyPerson) scrolls to the\nperson on the list and selects it. It also returns the associated\nPersonCardHandle for that person on the list.\n\nThe method should not be doing two different things. It should only be\nresponsible for navigating the list to the person.\n\nLet\u0027s remove PersonListPanelHandle#navigateToPerson(ReadOnlyPerson)\u0027s\nreturn type. Methods that still require a PersonCardHandle should call\nPersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson).\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"84f9160426370dcfa5c047f4b8a9d6d712c6fdf0","messageTitle":"PersonListPanelHandle#getPersonCardHandle(...): Add precondition","messageBody":"PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) returns a null\nif the person is not in the list.\n\nCallers are expected to not pass in a ReadOnlyPerson if the person is\nnot in the list.\n\nLet\u0027s add a precondition check to ensure that the ReadOnlyPerson is on\nthe list, and throw PersonNotFoundException if it isn\u0027t.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":14}}},{"hash":"80f0ec0643e7473ae1a13e5f56485ce265dce983","messageTitle":"PersonListPanelHandle: Change access modifier to private","messageBody":"PersonListPanelHandle contains a class variable and class methods that\nare not used outside of PersonListPanelHandle.\n\nMethods and variables that are not used outside of PersonListPanelHandle\nshould not be exposed outside the class.\n\nLet\u0027s change the access modifiers of a class variable and class methods\nto private.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"a19323689966de1c960b4e4977fefcbe2746a0ef","messageTitle":"Simplify PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson)","messageBody":"PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) obtains the\ncorresponding ReadOnlyPerson from the list. It also creates a defensive\ncopy of the Person.\n\nPersonListPanelHandle#getPerson(int) already allows us to get the\ncorresponding person in the list. Furthermore, creating a defensive\ncopy is unnecessary when it is passed into\nPersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson), which\nwill not modify ReadOnlyPerson.\n\nLet\u0027s simplify the logic of\nPersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson).\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]},{"date":"2017-06-29","commitResults":[{"hash":"398be6d60b2d1473224f56c793919ac4eaf46fd3","messageTitle":"PersonCardHandle#getPersonCardHandle(ReadOnlyPerson): Fix logic","messageBody":"PersonCardHandle#getPersonCardHandle(ReadOnlyPerson) uses a stream to\nfind the corresponding PersonCard that belongs to the ReadOnlyPerson. It\nthen returns the JavaFx node.\n\nThe handle can be returned directly as it has already been created in\nthe stream.\n\nLet\u0027s simplify the logic of\nPersonCardHandle#getPersonCardHandle(ReadOnlyPerson) such that the\nhandle is returned immediately upon comparison.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"dc43834458e38fe011dbff0081aa09e99f282d6a","messageTitle":"AddressBookGuiTest#setup(): Remove redundant wait for stage to show","messageBody":"AddressBookGuiTest#setup() waits for the stage to show up after executing\nFxToolkit#showStage().\n\nThe wait is unncessary as FxToolkit#showStage() already blocks the\ncurrent thread until the stage is shown.\n\nLet\u0027s remove the redundant wait.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"679de5d6f488e76035d20dee69b6478904ba2621","messageTitle":"AddressBookGuiTest: Add guiRobot","messageBody":"Each GUI tests require the use of guiRobot to emulate user actions.\n\nIt is unnecessary for the creation of guiRobot to be in each individual\nGUI test.\n\nLet\u0027s add GuiRobot to AddressBookGuiTest, so that classes that inherit\nAddressBookGuiTest need not create it on its own.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"9987ec0aadd7eafeb2c80f1210fcce63384e0baf","messageTitle":"AddressBookGuiTest#raise(BaseEvent): Rename parameter from e to event","messageBody":"AddressBookGuiTest#raise(BaseEvent) takes in a parameter.\n\nThe parameter\u0027s name is in short form. That is not allowed in the coding\nstandards.\n\nLet\u0027s rename the parameter from e to event.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"3c91ad3a6d63c57d2ac537cc4622e05917c0cb6d","messageTitle":"AddressBookGuiTest#setupSpec(): Rename to setupOnce()","messageBody":"AddressBookGuiTest#setupSpec() is not a standard name for a\n\u0027BeforeClass\u0027 test method.\n\nLet\u0027s rename setupSpec() to setupOnce().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"bd39c0ae91bb72860a00fd8a77b36e8832017377","messageTitle":"AddressBookGuiTest: Make assertMatching(...) and raise(...) protected","messageBody":"AddressBookGuiTest#assertMatching(ReadOnlyPerson, PersonCardHandle) and\nAddressBookGuiTest#raise(BaseEvent) have their visibility modifier set\nto public.\n\nOnly AddressBookGuiTest and classes that inherit from AddressBookGuiTest\nshould use these methods.\n\nLet\u0027s change the visibility modifier of these two methods from public to\nprotected.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0e3422e7949ccb1d54ed5cdf85385dfd5a573d0e","messageTitle":"AddressBookGuiTest#cleanup(): Change throws declaration to Exception","messageBody":"AddressBookGuiTest#cleanup() throws a specific exception,\nTimeoutException.\n\nWe can use a more generic exception just like the rest of the test\nmethods in the code base.\n\nLet\u0027s change the throws declaration from TimeoutException to Exception.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"9c5882a29c73e0e6f332dec386c265bb4b59153f","messageTitle":"AddressBookGuiTest#assertMatching(...): Rename method","messageBody":"AddressBookGuiTest#assertMatching(...) checks that the card is\nassociated with the person.\n\nThe name of the method can be improved as it does not tell us what it is\nmatching.\n\nLet\u0027s rename the method to assertCardMatchesPerson(...).\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"50f20b286e8b31215159e937c2da1cd927e1c6a6","messageTitle":"Update PersonCardHandle to include ID label","messageBody":"The handle for PersonCard does not provide a way to access the ID\nlabel.\n\nWe need to access the ID in our PersonCard unit test.\n\nLet\u0027s add getId().\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]},{"date":"2017-06-30","commitResults":[{"hash":"9956957a750b1addad8e5c0e52717d6f95964cac","messageTitle":"Add TestUtil#getTagsAsStringsList()","messageBody":"Person returns tags as a UniqueTagList.\n\nWe need to check that the tags shown in the PersonCard are correct.\nHowever, PersonCardHandle returns a list of Strings rather than\nUniqueTagList.\n\nLet\u0027s add TestUtil#getTagsAsStringsList() as a test utility method to\nconvert UniqueTagList back into a set of Strings, to simplify\ncomparison.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}}]},{"date":"2017-07-02","commitResults":[{"hash":"45bd11168de845fc639a20fc3d654db8a60ceaf7","messageTitle":"Add StageRule","messageBody":"To test GUI features related to JavaFx, we need to set up the stage\nduring startup and do necessary cleanup.\n\nWe can implement a StageRule to automate the process.\n\nLet\u0027s create StageRule that properly sets up and tears down a JavaFx\nstage when doing Gui test rules.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"eb96cfb139f2ecbfd8e768dbd41936c7135463a0","messageTitle":"Add UiPartRule","messageBody":"To implement GUI unit tests, we need to isolate the GUI component.\n\nLet\u0027s create UiPartRule, which sets up an empty stage and provides us\nwith a method to insert a single GUI component for testing.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"3f9a4d2e21bd213e162dbb8faf8b176047d6f51b","messageTitle":"Add PersonCardTest","messageBody":"The GUI tests are system tests.\n\nThe individual GUIs do not have unit tests.\n\nLet\u0027s add a PersonCardTest to unit test the PersonCard GUI component.\n\nAn alternative method of checking the labels would be to use\nreflections. However, reflections are not suitable for level 4\nlearning objectives.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"df5c210b274c29371218da83a997fd6ad7f572f1","messageTitle":"build.gradle: Add \u0027seedu/address/ui/\u0027 as part of guiTests","messageBody":"Our GUI unit tests are located in \u0027seedu/address/ui/\u0027.\n\nThis is not configured in our build.gradle, thus our GUI unit tests will\nnot run when running the task \u0027guiTests\u0027.\n\nLet\u0027s add \u0027seedu/address/ui/\u0027 as one of the test paths for \u0027guiTests\u0027\ntask, so that our GUI unit tests will run as well.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}}]},{"date":"2017-07-03","commitResults":[{"hash":"928591ce1dc41288bef8923258c7ac0d86c32322","messageTitle":"UiManager: Extract out magic strings for file ops error dialog box","messageBody":"When handling an exception for a file operation, UiManager uses magic\nstrings to create the appropriate dialog box.\n\nMagic strings should not be used as it does not tell us which part of\nthe dialog box is the text used for.\n\nLet\u0027s extract out the magic strings for file ops error dialog box into\nconstants, and let\u0027s use these constants when creating our appropriate\ndialog box.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"93b6d48be4a11a053482140e55ca6cd40013ca56","messageTitle":"ErrorDialogGuiTest: Use string constants in UiManager","messageBody":"ErrorDialogGuiTest#showErrorDialogs() verifies that the content of the\nerror dialog box is correct. It uses magic strings to do the\nverification.\n\nWe already have the appropriate string constants in UiManager.\n\nLet\u0027s teach ErrorDialogGuiTest to use the constants in UiManager.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"8c6cdf03784e9c2cbee26ec8f0d512c8d85c05fd","messageTitle":"ErrorDialogGuiTest: Remove InterruptedException declaration","messageBody":"ErrorDialogGuiTest#showErrorDialogs() declares that it throws an\nInterruptedException.\n\nRuntime exceptions do not need to be declared.\n\nLet\u0027s remove the InterruptedException declaration in\nErrorDialogGuiTest#showErrorDialogs().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"dff17e041ce00696ee0423914808bde4393bc5e3","messageTitle":"ErrorDialogGuiTest: Extract exception constant","messageBody":"ErrorDialogGuiTest#showErrorDialogs() tests the handling of the dialog\nbox launch event by using a custom made exception.\n\nThe message of the exception can be taken from the Exception#toString()\nmethod. However, it is not used in the verification stage, which uses a\nhard-coded magic string instead.\n\nLet\u0027s extract the exception so that it can be reused to test that the\nproper error message is shown during the verification stage.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"def162d6cd921df6386b0c2bbfa01631edb50b0c","messageTitle":"AlertDialogHandle: Add getHeaderText() and getContentText()","messageBody":"AlertDialogHandle#isMatching(String, String) checks whether the content\nof the dialog box matches the expected header and content messages.\n\nAlertDialogHandle should not be checking whether the content matches\nwhat was expected. That should be the job of the caller of the method,\nErrorDialogGuiTest.\n\nAs a step towards refactoring isMatching(String, String) out to\nErrorDialogGuiTest, let\u0027s add getHeaderText() and getContentText() to\nallow users of the AlertDialogHandle to get the content of the dialog\nbox.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":3}}},{"hash":"c2c9a65d4e18575e68146563654cd6a10815efae","messageTitle":"AlertDialogHandle: Refactor out isMatching(String, String)","messageBody":"AlertDialogHandle#isMatching(String, String) checks whether the content\nof the dialog box matches the expected header and content messages.\n\nAlertDialogHandle should not be checking whether the content matches\nwhat was expected. That should be the job of the caller of the method,\nErrorDialogGuiTest.\n\nLet\u0027s refactor out the logic of isMatching(String, String) to\nErrorDialogGuiTest.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":12}}}]},{"date":"2017-07-07","commitResults":[{"hash":"89539897229b581a5a575a0f53a4b47c96976e2f","messageTitle":"DeveloperGuide.adoc: Add step for updating version number in MainApp (#543)","messageBody":"When doing a new release, MainApp#VERSION needs to be updated to match\r\nthe release version number.\r\n\r\nThis step is not reflected in DeveloperGuide.adoc\u0027s release devops\r\nprocedure.\r\n\r\nLet\u0027s add the step for updating the version number in MainApp.","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}}]},{"date":"2017-07-11","commitResults":[{"hash":"2d8edc5668ef0b6a965479add06d379989c5efe9","messageTitle":"Add NodeHandle and StageHandle","messageBody":"GuiHandle is a messy class. It has no proper encapsulation as it can\naccess all nodes in the scene graph. It is also not very cohesive, as\nit handles interactions with text fields, labels and stages.\n\nThere should be a handle class that deals with nodes only, and another\nhandle class that deals with stages only.\n\nLet\u0027s create NodeHandle, which will concern itself with remembering the\nroot node of the component, and is able to obtain sub-nodes within the\ncomponent. It will also contain interaction methods that are applicable\nto all components.\n\nLet\u0027s also create StageHandle, which points to a Stage in the scene\ngraph. It will also be capable of stage interactions, and obtaining\nthe nodes within the Stage to allow us to create NodeHandles.\n\nAs a result of creating NodeHandle and StageHandle, GuiHandle should no\nlonger be used by any new classes. Let\u0027s deprecate GuiHandle, and update\nthe header comments to mention about the new classes.\n\nNodeHandle#getChildNode(String) and StageHandle#getChildNode(String) may\nfail to find the nodes if the name given is invalid. Let\u0027s also create a\nNodeNotFoundException to allow us to warn the callers of such cases.\n","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":0}}},{"hash":"2ea6f055e2aa0cb767e68b75accbc9c93b7b033d","messageTitle":"AddressBookGuiTest: Remove component handles","messageBody":"AddressBookGuiTest manually obtains the handles of each component from\nMainGuiHandle and stores them in its own variables.\n\nThis breaks the encapsulation as MainGuiHandle should be the owner of\nthe handles.\n\nLet\u0027s add getter methods to AddressBookGuiTest which will obtain the\nhandles from MainGuiHandle, rather than assigning the handles into\nour own variables.\n","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":97}}},{"hash":"77395ccbb8b64256fdcf905e39fc0958f95f511a","messageTitle":"AddressBookGuiTest#setup(): Deter initialization of MainWindowHandle","messageBody":"MainWindowHandle is initialized while the stage is being set up.\n\nFuture implementation of MainWindowHandle might require accessing the\nnodes. The nodes will not be available while the stage is being set up.\n\nLet\u0027s deter the initialization of MainWindowHandle to after the stage is\nset up.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"2b7b8567ca4f0c285e0c93a87128839e2aef3a05","messageTitle":"AddressBookGuiTest: Add runCommand()","messageBody":"It is common for tests to execute commands through the CommandBox.\n\nWe can provide a helper method in AddressBookGuiTest.\n\nLet\u0027s add AddressBookGuiTest#runCommand().\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":40}}},{"hash":"3295e1f3117431afa759dbcf1748f1f88b61754e","messageTitle":"Add GuiRobot#getStage(String)","messageBody":"FxRobot#window(String) allows us to get the Window with the\ncorresponding window title.\n\nSome tests require access to the Stage rather than the Window, in order\nto get its focus or close the window.\n\nLet\u0027s add GuiRobot#getStage(String).\n\nAs it is possible that none of the stages matches the name given, let\u0027s\nalso add StageNotFoundException, so that the tests stop with an\nappropriate error message.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"36b55346269f1ce09ccce1d698295ab4c0b739e9","messageTitle":"Port MainWindowHandle to StageHandle","messageBody":"MainWindowHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port MainWindowHandle to use StageHandle instead.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":13}}},{"hash":"644ab7039db7bedc138bee3464ef3b4f31f823f2","messageTitle":"Port AlertDialogHandle to StageHandle","messageBody":"AlertDialogHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port AlertDialogHandle to use StageHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"b630578991d919fda0bb2aa6ab76364eb3c72bfc","messageTitle":"Port BrowserPanelHandle to NodeHandle","messageBody":"BrowserPanelHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port BrowserPanelHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":16}}},{"hash":"52290b8f96c161cb41c91597d9f497a63979114f","messageTitle":"Port CommandBoxHandle to NodeHandle","messageBody":"CommandBoxHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port CommandBoxHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":45}}},{"hash":"cbcfc41b07396c5826d3ec8f2059b539df8283bc","messageTitle":"Port HelpWindowHandle to StageHandle","messageBody":"HelpWindowHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port HelpWindowHandle to use StageHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":29}}},{"hash":"ff8c52591882336a12e025bde09798130c101909","messageTitle":"Port MainMenuHandle to NodeHandle","messageBody":"MainMenuHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port MainMenuHandle to use NodeHandle.\n\nThe main menu does not have an ID for us to obtain its node. Let\u0027s\nmodify the .fxml file to add one.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":23,"deletions":19}}},{"hash":"5381e1c39d439db564e11fbbe0b8ac649f2ad9a7","messageTitle":"Port PersonCardHandle to NodeHandle","messageBody":"PersonCardHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port PersonCardHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":20}}}]},{"date":"2017-07-12","commitResults":[{"hash":"cb798b83108a028d1c33067cbcb2a1ff1d369199","messageTitle":"Port PersonListPanelHandle to NodeHandle","messageBody":"PersonListPanelHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port PersonListPanelHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":31}}},{"hash":"8f9c34211321faae3426ccbc6868273f32478100","messageTitle":"PersonListPanelHandle: Remove unnecessary pre-condition check","messageBody":"PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) checks that\nthe ReadOnlyPerson is in the list, and throws PersonNotFoundException if\nit isn\u0027t.\n\nWe can safely assume that if the card is not found, then the person\ncannot exist in the list. The converse is also true (i.e. if the person\nis not in the list, then the corresponding card cannot exist).\n\nLet\u0027s simplify the logic of\nPersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) by removing\nthe check of ReadOnlyPerson in the list, as it is unnecessary.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":10}}},{"hash":"fce31fb84c1374e164cc5a56744cb1d5dc2b2c99","messageTitle":"Port ResultDisplayHandle to NodeHandle","messageBody":"ResultDisplayHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port ResultDisplayHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":16}}},{"hash":"0c0a8549c695bf38b540cf7fd47332adb3055372","messageTitle":"Port StatusBarFooterHandle to NodeHandle","messageBody":"StatusBarFooterHandle inherits from GuiHandle.\n\nGuiHandle is deprecated.\n\nLet\u0027s port StatusBarFooterHandle to use NodeHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":10}}},{"hash":"c140840f60ee8372271713d386c45d989e1721ec","messageTitle":"Delete GuiHandle","messageBody":"GuiHandle has been superseded by NodeHandle and StageHandle. It is no\nlonger in use.\n\nLet\u0027s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":75}}}]},{"date":"2017-07-18","commitResults":[{"hash":"31de8caba1a080038645d3c5daf818c238a1764d","messageTitle":"PersonCardTest: Extract guiRobot and uiPartRule to new GuiUnitTest class","messageBody":"PersonCardTest uses a GuiRobot and UiPartRule.\n\nGuiRobot and UiPartRule will be used frequently by future GUI unit\ntests.\n\nAs a step towards implementing GUI unit tests for other components,\nlet\u0027s extract guiRobot and uiPartRule to a new superclass GuiUnitTest,\nand let\u0027s make PersonCardTest inherit from it.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":9}}},{"hash":"2a2e89042fa17d54c57cca63b0486d4d222f5edc","messageTitle":"Add EventsUtil","messageBody":"Some GUI components react to events.\n\nWe can create a helper method in GuiUnitTest to allow GUI unit tests to\nraise appropriate events.\n\nLet\u0027s add GuiUnitTest#post(BaseEvent).\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"db2e46824bf5e4725c8b144a3a5af9043a563ab6","messageTitle":"PersonCardTest: Call pauseForHuman() in assertCardDisplay(...)","messageBody":"All callers of assertCardDisplay(...) will subsequently call\npauseForHuman() to allow testers to verify the values of the card.\n\nWe can call pauseForHuman() inside assertCardDisplay() instead.\n\nLet\u0027s move the calls for pauseForHuman() inside assertCardDisplay(...)\nso that it pauses immediately after the card is created.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"a5bca556a769b0bcacf3f30bfc62705a49ed5ac5","messageTitle":"PersonCardTest#assertCardDisplay(...): Change parameter order","messageBody":"The parameter type order for PersonCardTest#assertCardDisplay(int,\nReadOnlyPerson) is different from PersonCard#PersonCard(ReadOnlyPerson,\nint).\n\nIt would be nice if they are symmetric to each other.\n\nLet\u0027s change the parameter order of\nPersonCardTest#assertCardDisplay(...) to match\nPersonCard#PersonCard(...).\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"1a9bd3349e734d010392b21839fca9ea1a0fb828","messageTitle":"BrowserPanelHandle: Add getLoadedUrl()","messageBody":"BrowserPanel GUI tests need to verify that the WebView has been given\nthe correct URL to load the webpage from.\n\nThere is no way to do such verification through BrowserPanelHandle.\n\nLet\u0027s add BrowserPanelHandle#getLoadedUrl() to allow such verification.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"d0ea397d1197e0d22426f32c015ca94eda58ffd8","messageTitle":"BrowserPanel: Extract out magic string","messageBody":"BrowserPanel navigates to a fixed URL when a person is being displayed.\n\nWe should extract the URL to a constant.\n\nLet\u0027s extract the URL out as a constant named\nBrowserPanel#GOOGLE_SEARCH_URL_PREFIX.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"f02f14cd4c9cded4a08f16de2bfda7bcace8740e","messageTitle":"Add BrowserPanelTest","messageBody":"BrowserPanel is tested in system tests.\n\nA separate unit test for BrowserPanel does not exist.\n\nLet\u0027s add BrowserPanelTest.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":0}}},{"hash":"c76c12b66b83dbe4ef4a0d26e874777fd3c33d44","messageTitle":"GuiUnitTest: Add getChildNode()","messageBody":"Some test require finding the nodes owned by a component. For example,\nthe TextField of the CommandBox is stored inside a StackPane, so we have\nto look for it.\n\nLet\u0027s add GuiUnitTest#getChildNode() to help us facilitate querying.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"756161179487e04aa85d6114f20333fe47c503d8","messageTitle":"Add CommandBoxTest","messageBody":"CommandBox is tested in system tests.\n\nA separate unit test for CommandBox does not exist.\n\nLet\u0027s add CommandBoxTest.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":41}}},{"hash":"803e7d3afdec7ba37be13ada43f117f3146397db","messageTitle":"Add ResultDisplayTest","messageBody":"ResultDisplay is tested in system tests.\n\nA separate unit test for ResultDisplay does not exist.\n\nLet\u0027s add ResultDisplayTest.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"27c9d2231d683c417bb5a7f6b204165e09ed15cf","messageTitle":"Add StatusBarFooterTest","messageBody":"StatusBarFooter is tested in system tests.\n\nA separate unit test for StatusBarFooter does not exist.\n\nLet\u0027s add StatusBarFooterTest.\n\nThe \"system\" test in guitests/StatusBarFooterTest will no longer be\nnecessary when we have system tests for each individual commands, which\nwill test the code paths for the status bar accordingly. Let\u0027s also add\na TODO comment as a reminder for us to remove\nguitests/StatusBarFooterTest when the system tests are complete.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":0}}},{"hash":"dd74ff2123e1be9eb13d37ff14eaff3b0cbf64f5","messageTitle":"Add PersonListPanelTest","messageBody":"PersonListPanel is tested in system tests.\n\nA separate unit test for PersonListPanel does not exist.\n\nLet\u0027s add PersonListPanelTest.\n\nWe need a way to verify that the selected index of PersonListPanel is\ncorrect. Let\u0027s also add PersonListPanelHandle#getSelectedIndex().\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":0}}},{"hash":"63a124e8c69b8ae29fa27e0fc875397c48d92ba4","messageTitle":"HelpWindowHandle: Add getLoadedUrl()","messageBody":"HelpWindow GUI tests need to verify that the WebView has been given\nthe correct URL to load the help webpage from.\n\nThere is no way to do such verification through HelpWindowHandle.\n\nLet\u0027s add HelpWindowHandle#getLoadedUrl() to allow such verification.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"2f17bcc283b0f8e2ace077e5af776df281ee1c1f","messageTitle":"Add HelpWindowTest","messageBody":"We need to ensure that the HelpWindow is loading the correct file.\n\nSuch test does not exist.\n\nLet\u0027s add HelpWindowTest.\n\nHelpWindow#USERGUIDE_FILE_PATH needs to be public so that the test is\nable to verify that the URL accessed is correct. Let\u0027s change the access\nmodifier for HelpWindow#USERGUIDE_FILE_PATH.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":1}}},{"hash":"e19ba374d0d40d824f813c618388b875b3b32fde","messageTitle":"WebViewUtil: Extract out getLoadedUrl()","messageBody":"Both HelpWindowHandle and BrowserPanelHandle queries the URL of the web\nview.\n\nThe logic can be refactored out into a helper method.\n\nLet\u0027s extract WebViewUtil#getLoadedUrl().\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":7}}},{"hash":"0f8c7e337426cdd4017d5b634b2c454eceb8dc0a","messageTitle":"PersonCardTest: Add test case for subsequent changes to Person","messageBody":"It is possible that the card might not have been binded properly, but\nonly initialized with the starting values of Person.\n\nThe test case for any subsequent changes to Person is not tested.\n\nLet\u0027s add the test case for subsequent changes to Person.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":11}}}]},{"date":"2017-07-20","commitResults":[{"hash":"48d5acc77c3a4611e63b8bcc934d2d206ba0028e","messageTitle":"[#459] Remove unnecessary pauses after pressing keys with GuiRobot (#572)","messageBody":"guiRobot#type(...) and guiRobot#push(...) internally pauses after\r\npressing the given keys.\r\n\r\nWe do not need to call guiRobot#pauseForHuman() ourselves after calling\r\nthese two key pressing methods.\r\n\r\nLet\u0027s remove the redundant guiRobot#pauseForHuman() calls.","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"5c33a5c989e08b41c21402b9073f399db4222a86","messageTitle":"Update DeveloperGuide.adoc to use IntelliJ","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":48,"deletions":52}}},{"hash":"69e404a9185dc51fe9f10ba0eb978a00a80e6e60","messageTitle":"Remove Eclipse files","messageBody":"We are migrating our IDEs from Eclipse to IntelliJ. Eclipse files are\nnot used in IntelliJ.\n\nLet\u0027s remove them.\n","fileTypesAndContributionMap":{"classpath":{"insertions":0,"deletions":26},"project":{"insertions":0,"deletions":49}}}]},{"date":"2017-07-21","commitResults":[{"hash":"08c681acf239d3fe4b47b2f4f9c6ef62695ca891","messageTitle":"gitignore: Ignore \u0027out/\u0027 build directory (#576)","messageBody":"When running the application/tests in IntelliJ, a new \u0027out/\u0027 directory\r\nwill be created.\r\n\r\nThe \u0027out/\u0027 directory contains build files. They should not be included\r\nin the repository.\r\n\r\nLet\u0027s update .gitignore to ignore the \u0027out/\u0027 build directory.","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":0}}},{"hash":"7f0105934fb6e9c9e22a2d3ec933dca1950cea72","messageTitle":"PersonCardHandle: Remove equals() method","messageBody":"PersonCardHandle#equals() compares whether both of the cards have the\nsame details.\n\nTests should never utilize the equals() method of person card handles to\ncompare cards. Instead, they should use get*() methods to compare the\ncontents of the card.\n\nLet\u0027s remove PersonCardHandle#equals().\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":13}}},{"hash":"688378ca77646a51af48893c023958e38724d8e4","messageTitle":"PersonListPanelTest: Extract assertCardDisplaysPerson()","messageBody":"Tests need to compare the card and person.\n\nLet\u0027s extract out assertCardDisplaysPerson(), and put it in\nGuiTestAssert instead.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":13}}}]},{"date":"2017-07-25","commitResults":[{"hash":"56137502e40fc58a495195254e82261df3f507e8","messageTitle":"PersonListPanelHandle: Change isListMatching() to assertListMatching()","messageBody":"PersonListPanelHandle#isListMatching() returns false when it founds an\nunmatched card, and returns true otherwise.\n\nWe are deprecating PersonCardHandle#isSamePerson() in favor of\nGuiTestAssert#assertCardDisplaysPerson(...), which does not return a\nboolean.\n\nLet\u0027s change isListMatching() to assertListMatching(), that does not\nreturn a boolean, but rather asserts that each card indeed matches.\n\nAs it is now an assertion method, we could no longer put this method\ninto PersonListPanelHandle, which should only be concerned with querying\nand commanding the GUI. Let\u0027s move assertListMatching() to\nGuiTestAssert.\n\nWe would need a way to expose the scrolling functionality for our\nGuiTestAssert#assertListMatching(). Let\u0027s also add\nPersonListPanelHandle#scrollTo(int).\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":32}}},{"hash":"9fcf590e5e56bacf70e5881358bced026cc30901","messageTitle":"PersonCardHandle: Remove isSamePerson(...)","messageBody":"PersonCardHandle#isSamePerson(ReadOnlyPerson) compares the card with a\nperson.\n\nGuiTestAssert#assertCardDisplaysPerson(...) have the exact same\nfunctionality.\n\nLet\u0027s remove PersonCardHandle#isSamePerson(...), and replace all usages\nwith GuiTestAssert#assertCardDisplaysPerson(...).\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":17}}},{"hash":"badd33a52ff0ddc4da3bbeb4ac9ecb032a380cb5","messageTitle":"AddressBookGuiTest: Remove assertCardMatchesPerson(...)","messageBody":"AddressBookGuiTest#assertCardMatchesPerson(...) calls\nGuiTestAssert#assertCardDisplaysPerson(...).\n\nThis method is redundant as it does not abstract out any lower level\nconcepts.\n\nLet\u0027s remove assertCardMatchesPerson(...), and replace all calls to\nGuiTestAssert#assertCardDisplaysPerson(...) instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":12}}},{"hash":"c0a35764bb67336b487798774460c6831a9b4dac","messageTitle":"Clean up PersonCardHandle","messageBody":"PersonCardHandle contains unused methods. It should also store the tags\nas a list of labels, so that all accessor of tags can return these\nlabels, rather than manually obtaining each of them through the tag\ncontainer.\n\nLet\u0027s clean up PersonCardHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":33}}},{"hash":"f273c67603e807ea8fb17e0119952775242f0acc","messageTitle":"StageHandle#close(): Check that window is closed","messageBody":"There is no post-condition in StageHandle#close() to check that the\nwindow is closed.\n\nLet\u0027s add a post-condition in StageHandle#close() to verify that.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"a671bf2f1ffd9b1be575235e4bc0c5789c49674a","messageTitle":"Tidy up header comments for *Handle classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2017-07-26","commitResults":[{"hash":"f5ca8d64b5053641d7183c65a893df43e713b45f","messageTitle":"[#580] AboutUs page: rename profile photo files (#585)","messageBody":"CS2103 requirements state that profile photos filenames need to be of\r\nthe format \u0027github_id_in_lower_case.png\u0027 (e.g. damithc.png).\r\n\r\nLet\u0027s rename the photos to follow the format, and modify AboutUs.adoc\r\nto point to the new filenames.","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":5}}}]},{"date":"2017-07-30","commitResults":[{"hash":"c27ad03b38f5c1680a70ab9f46c99e861818e446","messageTitle":"[#582] Developer Guide: Explain undo and redo mechanism (#587)","messageBody":"CS2103 students will need to explain their design decisions made in\r\ntheir project. The write up needs to be done inside the Developer Guide.\r\n\r\nThere are no such examples in the Developer Guide for the students to\r\nfollow.\r\n\r\nLet\u0027s add a section to explain undo and redo, to show the students how\r\nit should be done.","fileTypesAndContributionMap":{"adoc":{"insertions":127,"deletions":0}}}]},{"date":"2017-08-01","commitResults":[{"hash":"6c3fc91bf62a4893087d540267c5b7afe498f986","messageTitle":"docs: Manually specify stylesDir","messageBody":"stylesDir is specified as a relative path in build.gradle.\n\nIf the documents are in a sub-folder, the relative path would be wrong,\nas the styles directory is now one level above.\n\nAs a step towards moving johndoe.adoc into a subfolder, let\u0027s manually\nspecify stylesDir inside all documents.\n","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":1},"adoc":{"insertions":12,"deletions":0}}},{"hash":"38c90ab7ff96946b4fe8dfa2f235989a09478a31","messageTitle":"johndoe.adoc: Move inside \u0027team\u0027 sub-folder","messageBody":"johndoe.adoc resides on the \u0027docs\u0027 folder.\n\nIt should be moved inside a \u0027team\u0027 sub-folder to avoid cluttering it\nwith the important documents.\n\nLet\u0027s move \u0027johndoe.adoc\u0027 from \u0027docs\u0027 to \u0027docs/team\u0027.\n","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}}]},{"date":"2017-08-02","commitResults":[{"hash":"60c1d1231c2f2ef11eaff44bbc8ff1ebcf09e512","messageTitle":"TestApp: Add readStorageAddressBook()","messageBody":"Our system test needs to test that the storage file content is updated\ncorrectly.\n\nLet\u0027s add readStorageAddressBook() helper method, that returns the\naddress book created from the content of the storage file, to allow us\nto verify that the file is correct.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"6e7494310a384265efaa3b467cf26bac248f6be2","messageTitle":"TestApp: Add getStorageSaveLocation()","messageBody":"Our system test needs to verify that the save location of the file is\nstill the same.\n\nLet\u0027s add getStorageSaveLocation() that returns the current save\nlocation.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"87e69f3b441d7c08ae97a53222481f121d4a237e","messageTitle":"TestApp: Add getModel()","messageBody":"Our system tests need to verify that the model of the application is\nupdated correctly.\n\nLet\u0027s add TestApp#getModel().\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"990ba7e61c65d3222a034c2b1c0549f417b6eff9","messageTitle":"BrowserPanelHandle: Add rememberUrl() and isUrlChanged()","messageBody":"When executing certain commands (such as adding a person), the browser\npanel is not supposed to change.\n\nLet\u0027s add rememberUrl() and isUrlChanged() to allow us to verify\nwhether the content has been changed after doing a certain test.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"b1ffbc722a83b10301dd3df07897da2dd2d06f64","messageTitle":"StatusBarFooterHandle: Add remember*() and is*Changed()","messageBody":"When executing a certain command, the content of the status bar might\nnot change. For example, if the command failed, the \u0027Last Time Updated\u0027\nand \u0027File Save Location\u0027 should still remain the same.\n\nLet\u0027s add remember*() and is*Changed() methods to allow us to\nverify that their content were not modified.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"4fe218bc925ba14f3878adb8ac5b281156c5feab","messageTitle":"PersonListPanelHandle: Add select(int)","messageBody":"Some tests require us to select a particular person in the person list\npanel.\n\nLet\u0027s add PersonListPanelHandle#select(int) to help us do so.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"e3b40a6a2116c1ae8a60eb319a59710ced9e2ad6","messageTitle":"PersonListPanelHandle: Add remember*() and is*Changed()","messageBody":"When executing a certain command, the selected person in the person list\nshould not change (such as when the command execution fails).\n\nLet\u0027s add remember*() and is*Changed() methods to allow us to\nverify that the selection was not changed.\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"ba49111ae9355307b6e915f583deedf61aad87eb","messageTitle":"Add AddressBookSystemTest","messageBody":"All system tests will require a TestApp together with test classes and\nobjects such as TypicalPersons and injected Clocks.\n\nAddressBookGuiTest does not have methods required for us to verify the\nnon-GUI portion of the program.\n\nLet\u0027s add AddressBookSystemTest.\n","fileTypesAndContributionMap":{"java":{"insertions":155,"deletions":0}}},{"hash":"8a2f9631e6d660dc3a639bf627b9838e64d80fbd","messageTitle":"Add AppStateAsserts","messageBody":"System tests require verification of the application state.\n\nLet\u0027s add AppStateAsserts that contains such verification methods.\n","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":27}}},{"hash":"422b4bcd699222e38f095dc509af892f03738415","messageTitle":"TestUtil: Add model utility methods","messageBody":"Some test cases require obtaining the middle/last index of the model\ngiven. Some test cases also need to get the person inside the model at a\nspecific index.\n\nLet\u0027s add such utility methods to TestUtil.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"2ddcdbd0365de13e9ba0741962bd7b32c853a913","messageTitle":"Convert DeleteCommandTest to DeleteCommandSystemTest","messageBody":"DeleteCommandTest is a GUI test.\n\nWe already have unit tests for the DeleteCommand and GUI components.\n\nLet\u0027s convert DeleteCommandTest to a system test\nDeleteCommandSystemTest.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":111,"deletions":64}}},{"hash":"4a756c13ee2f5d795362ca9dc8a6f22d08570d6d","messageTitle":"[#579] [#581] Developer Guide: Add \u0027Getting Started in Writing Code\u0027 section (#586)","messageBody":"New developers may feel overwhelmed by the codebase when opening the\r\nproject for the first time.\r\n\r\nLet\u0027s add a \u0027Getting Started in Writing Code\u0027 section to provide new\r\ndevelopers some exercises, which are crafted specifically such that they\r\nwill have a chance to touch with all individual components of the\r\napplication.","fileTypesAndContributionMap":{"adoc":{"insertions":229,"deletions":0}}}]},{"date":"2017-08-03","commitResults":[{"hash":"20847316c28404bc225534061f766b0ada38667f","messageTitle":"[#588] Developer Guide: Remove author names from sections (#611)","messageBody":"Future CS2103 does not require each section to be written by a specific\r\nstudent. We can remove the author names that are given at the start of\r\neach section.\r\n\r\nLet\u0027s update the Developer Guide to remove these names.","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":8}}},{"hash":"eec2a5f5a0d428898cd47bab748a6f557ea27651","messageTitle":"Developer Guide: Clarify instructions for setting up Checkstyle-IDEA","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"454a421dd004ae16453481b4039dc03ff20bfa8d","messageTitle":"Developer Guide: Add troubleshooting section for Checkstyle-IDEA","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":0}}}]}],"Damith C. Rajapakse":[{"date":"2016-08-07","commitResults":[{"hash":"9db8290614e92ad72bc905cf80d6693b9eaae7fe","messageTitle":"Initial commit","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":0},"LICENSE":{"insertions":21,"deletions":0}}}]},{"date":"2016-09-18","commitResults":[{"hash":"377cfc16a5919c3bb8367973b24482cc809649f0","messageTitle":"Add build status badge to README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":3}}}]},{"date":"2016-09-19","commitResults":[{"hash":"010d72d609226740ac258881656f07fda9152f1e","messageTitle":"[53] GUI tests: use setText instead of write","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2016-09-20","commitResults":[{"hash":"295e974c7d4d5d9d1d9cef8e26dab034c5a7dcd6","messageTitle":"[68] Flatten doc structure","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":7,"deletions":0},"md":{"insertions":676,"deletions":200}}}]},{"date":"2016-09-21","commitResults":[{"hash":"adde2fc45c378791fd0d7cc26f4c1a51594e9af4","messageTitle":"[71] Cleanup gui tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":376,"deletions":822}}},{"hash":"57c151cc9c0ea3cdf72cfce8b7fc86915d20ca0c","messageTitle":"[73] Cleanup UI","messageBody":"* Rename BaseUiPart\r\n\r\n* Clean up UiPartLoader\r\n\r\n* Clean up UiPart\r\n\r\n* Remove dead code from Ui\r\n\r\n* Add more detailed error reporting during UI loading\r\n\r\n* Move event handling code to the bottom\r\n\r\n* Refine MainWindow::load()\r\n\r\n* Refine MainWindow\r\n\r\n* Auto-detect placeholders\r\n\r\n* Remove About Dialog\r\n\r\n* Remove local variable MainWindow::ui\r\n\r\n* Refine StatusBarFooter\r\n\r\n* Reorder code in PersonListPanel\r\n\r\n* Remove multiple selection mode\r\n\r\n* PersonListPanel: Remove dead code\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":3},"java":{"insertions":164,"deletions":261}}},{"hash":"cf8eb864bf4ac8cb8c710f5fdd3ef03fbfa7c98e","messageTitle":"[79] Further cleanups to UI","messageBody":"* Rename PersonCardController\r\n\r\n* PersonCard: remove dead code\r\n\r\n* Make PersonCard a UiPart\r\n\r\n* UiPartLoader: add missing comments\r\n\r\n* ResultDisplay: remove dead code\r\n\r\n* HelpWindow: Remove dead code\r\n\r\n* MainWindow: tweak comments\r\n\r\n* Remove unused event classes\r\n\r\n* Use events to load page when list selection changes\r\n\r\n* Make PersonListViewCell an inner class\r\n\r\n* PersonListPanel: Use raise instead of post\r\n\r\n* Move ShowHelpEvent to events/controller\r\n\r\n* Remove KeyBindingEvent\r\n\r\n* ShowHelpEvent: add missing header comment\r\n","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":276}}},{"hash":"64e4fba535dacdab162c5c5c6ce3092b4181f629","messageTitle":"[80] Refine browser to be a UiPart","messageBody":"* Make Browser a UiPart\r\n\r\n* Move BrowserPanel to controller package\r\n\r\n* Refine BrowserPanel\r\n\r\n* fix anchor issue\r\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":79}}},{"hash":"3625a1a9952a511930f01e9453cf902851828e32","messageTitle":"[81] Add a Logic class","messageBody":"* Add Logic class\r\n\r\n* Remove MainWindow -\u003e Parser coupling\r\n\r\n* CommandBoxTest -\u003e LogicTest\r\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":49}}},{"hash":"979d2f8e167b2b1afcab461bfeee9a2a63bdb7cf","messageTitle":"[83] Cleanup utils and merge with commons","messageBody":"* Remove JavaVersion\r\n\r\n* Remove DateTimeUtil\r\n\r\n* Remove unused messages from Message\r\n\r\n* Remove PlatformExecUtil\r\n\r\n* Rename Utils\r\n\r\n* AppUtil: Removed dead code\r\n\r\n* Remove ManifestFileReader\r\n\r\n* Move UnmodifiableObservableList\r\n\r\n* Rename util -\u003e commons\r\n","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":587}}}]},{"date":"2016-09-22","commitResults":[{"hash":"92bc32b631c62041625a021719adf7c280711570","messageTitle":"[85] Refine logic and parser","messageBody":"* Remove dead code, narrow scope\r\n\r\n* Removed Parser -\u003e Model dependency\r\n\r\n* Move filtering to ModelManager\r\n\r\n* Mover parser and commands inside logic package\r\n\r\n* Remove dead code from Command classes\r\n\r\n* Rename Logic -\u003e LogicManager\r\n","fileTypesAndContributionMap":{"java":{"insertions":269,"deletions":329},"md":{"insertions":1,"deletions":1}}},{"hash":"3bf3067994fcf29fff1dafaaf0e4971afa524cdd","messageTitle":"[86] Refine model","messageBody":"* Delete dead code\r\n\r\n* Remove unused Config parameter\r\n\r\n* Remove ReadOnlyAddressbook interface from ModelManager\r\n\r\n* ModelManager: Remove dead code\r\n\r\n* ModelManager: remove extra comments\r\n\r\n* ModelManager: add missing comments\r\n\r\n* ModelManager: Remove updateStorage()\r\n\r\n* Move getEmptyAddressBook() to AddressBook\r\n\r\n* Refined ModelManager API for filtered list\r\n\r\n* Refine comments\r\n\r\n* Remove unused UniqueData class\r\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":202}}}]},{"date":"2016-09-23","commitResults":[{"hash":"814d758a4ba69e7b19f7509bed897fcf37610d45","messageTitle":"[88] Refine commons","messageBody":"* Split commons into core and util\r\n\r\n* Move ComponentManager\r\n\r\n* Make LogicManager and Ui to extend ComponentManager\r\n\r\n* Rename Ui UiManager\r\n\r\n* Move exceptions inside commons\r\n\r\n* Move events inside commons package\r\n\r\n* Rename EventManager\r\n\r\n* Rename LogManager and LogManager\r\n","fileTypesAndContributionMap":{"java":{"insertions":235,"deletions":246}}}]},{"date":"2016-09-24","commitResults":[{"hash":"58d8591d43eda5687859e77a4dbf751fc509ee87","messageTitle":"[89] Refine storage","messageBody":"* Remove unused UserPref parameter\r\n\r\n* Add StorageManager::readConfig()\r\n\r\n* Extract ConfigStorage\r\n\r\n* Assert config file path is not null\r\n\r\n* Add ConfigStorage::save()\r\n\r\n* Add test data folder ConfigStorageTest\r\n\r\n* Handle extra fields in the config file\r\n\r\n* Rename ConfigStorage::readConfig() -\u003e read()\r\n\r\n* Remove unused constructor\r\n\r\n* Replace old Config storage methods with new ones\r\n\r\n* Add JsonPrefStorage\r\n\r\n* Add JsonPrefStorage::readPrefs()\r\n\r\n* Add JsonPrefStorage::savePrefs()\r\n\r\n* Connect JsonPrefStorage to StorageManager\r\n\r\n* Cleanup StorageManagerTest\r\n\r\n* Rename ConfigStorage -\u003e JsonConfigStorage\r\n\r\n* Fix broken StorageManagerTest\r\n\r\n* Add Config::toString()\r\n\r\n* Rename methods in JsonConfigStorage\r\n\r\n* Config: keep preference file location as string\r\n\r\n* Add XmlAddressBookStorage\r\n\r\n* Remove *.xml from .gitignore\r\n\r\n* Add read/save methods to XmlAddressBookStorage\r\n\r\n* Reorder StorageManager methods\r\n\r\n* Eliminate Supplier/Consumer use in StorageManager\r\n\r\n* Remove unused SaveDataRequestEvent\r\n\r\n* Remove unused code from StorageManager\r\n\r\n* Rename LocalModelChangedEvent\r\n\r\n* Remove SavePrefsRequestEvent\r\n\r\n* Rename File Saving/Opening exception events\r\n\r\n* Rewire dependencies from UiParts to other components\r\n\r\n* Tidy up MainApp\r\n\r\n* Decouple StorageManager from Config\r\n\r\n* Add missing tests to StorageManagerTest\r\n\r\n* Remove unused static methods in StorageManager\r\n\r\n* Add AddressBookStore interface\r\n\r\n* Implemented AddressBookStorage interface\r\n\r\n* Add UserPrefsStorage interface\r\n\r\n* Add missing comments to StorageManager\r\n\r\n* Move JsonConfigStorage to ConfigUtil\r\n","fileTypesAndContributionMap":{"java":{"insertions":1036,"deletions":508},"gitignore":{"insertions":0,"deletions":1},"xml":{"insertions":1,"deletions":0},"md":{"insertions":4,"deletions":0},"json":{"insertions":45,"deletions":0}}},{"hash":"51cefc33e1a1c895286444810946c81655d94591","messageTitle":"Remove GUI unit tests Fixes #66","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":9},"java":{"insertions":0,"deletions":56}}}]},{"date":"2016-09-25","commitResults":[{"hash":"cc1974efad9d8072c6ffd13aecbc9a9b6beeba56","messageTitle":"[90] Complete dev guide","messageBody":"* Add architechture diagram\r\n\r\n* UiManager: Remove unused method\r\n\r\n* Clean up Config class\r\n\r\n* Fix broken ConfigUtilTest\r\n\r\n* Config file : prefs... --\u003e userPrefs...\r\n\r\n* Extract Model interface\r\n\r\n* Extract Logic interface\r\n\r\n* Extract Storage interface\r\n\r\n* Extract Ui interface\r\n\r\n* Add missing comments to Ui\r\n\r\n* Move UnmodifiableObservableList to commons.core\r\n\r\n* Make ModelManager keep an instance of UserPrefs\r\n\r\n* Rename classes related to Xml serializing\r\n\r\n* Remove Ui -\u003e MainApp coupling\r\n\r\n* Add data folder to .gitignore\r\n\r\n* Fix compile error\r\n\r\n* Add Archi and component diagrams\r\n\r\n* Tweak image size\r\n","fileTypesAndContributionMap":{"java":{"insertions":309,"deletions":213},"gitignore":{"insertions":1,"deletions":0},"md":{"insertions":25,"deletions":7},"json":{"insertions":6,"deletions":6}}},{"hash":"df14561e1dd0ef40d42ffd5abb91e5f681c29f05","messageTitle":"Improve SLAP in MainApp","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"2d77ca44460dd3e0c859896e277df0e36d4bed32","messageTitle":"Add UI image","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":0,"deletions":23},"md":{"insertions":3,"deletions":2}}},{"hash":"29ad56db646046ee6994974a9537579fd74bc721","messageTitle":"Fix broken link in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2016-09-26","commitResults":[{"hash":"86f812bdd47f9b649a86566a07296e81aed0fdae","messageTitle":"[93] Add dev guide details","messageBody":"* Add architecture description\r\n\r\n* Add UI component description\r\n\r\n* Add Logic details\r\n\r\n* Add Model and Storage details\r\n\r\n* Add sequence diagrams\r\n\r\n* Refine SD description\r\n\r\n* Updated SD lifeline\r\n\r\n* Update pptx file with SDs\r\n","fileTypesAndContributionMap":{"md":{"insertions":93,"deletions":12}}},{"hash":"32fde569dbf6aa0a2701b627c589ea8a9a1ca21f","messageTitle":"Fix typo in Windows command","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"3a99016d854adac863dc730d351d429760c1c200","messageTitle":"Update event handling SD","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f046197dd2fe553c07e1c2fd470f3b059be86fd3","messageTitle":"Correct activation bar in SD","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8de0932e6d797664b63c4fe890ae9d7fbeb35e27","messageTitle":"Update Logic CD","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"fbdb57370df557b19286509562297ff091297d98","messageTitle":"Move AddressBook change event handling to Storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":25}}},{"hash":"c6530f9058c9ff9d718471edc8a1e184f4d2f94e","messageTitle":"10 KLoC -\u003e 6 KLoC","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"7ed69a79809b55e172743dbb0d74b012565cf6e1","messageTitle":"Fix typos in EventCenter description","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}}]},{"date":"2016-09-27","commitResults":[{"hash":"daf5657bc565e27f64b7b27d2c441c670500d766","messageTitle":"[115] Move event handler registration to child class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}},{"hash":"9686528b6bbac4bd8317dbf89ee42876cfa38fdb","messageTitle":"[94] Fix compiler warnings (#117)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":37}}},{"hash":"9744f5e306c3b965e36d86e7175b8337545ae616","messageTitle":"Start LearningOutcomes.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":159}}},{"hash":"1e199b60fe885f54dc0ff97bee086c5279b75d77","messageTitle":"Add contributors Akshay and Sam","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":1}}}]},{"date":"2016-09-28","commitResults":[{"hash":"c5bbb3ec5d3f46513c91260aed6aa40690344a98","messageTitle":"[118] Remove IncorrectCommandResult (#118)","messageBody":"* Rename events package controller -\u003e ui\r\n\r\n* Remove IncorrectCommandResult\r\n","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":50}}},{"hash":"e49a96ca1315f68b956dfe79f0298085de6f4b7f","messageTitle":"Add ProductSurvey section","messageBody":"Fixes #120\n","fileTypesAndContributionMap":{"md":{"insertions":5,"deletions":0}}},{"hash":"ee4cc48307f30c9511c367082f20920e913bdc53","messageTitle":"[112] Rename unitTests -\u003e nonGuiTests (#124)","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":3},"java":{"insertions":21,"deletions":11},"md":{"insertions":14,"deletions":22}}},{"hash":"91b1c0c2dca92726ba2170c9dda87bee41efbe99","messageTitle":"Add clarification about enabling assertions","messageBody":"Fixes #105\n","fileTypesAndContributionMap":{"md":{"insertions":5,"deletions":0}}},{"hash":"1f1e9821309fcea6bf8f4d72fcfb079d3064ed85","messageTitle":"[111] Create sandbox folder if it doesn\u0027t exist (#125)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}},{"hash":"4b091a401609b1672a363913d7ab00f26da11814","messageTitle":"Fix switch indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":18}}}]},{"date":"2016-09-29","commitResults":[{"hash":"36549e7feedcb5fd8fa53ac2ebe4675204032e1e","messageTitle":"Update DeletePerson SD to show UI update","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"0f217ae2aaf3ec66ac7af4a8e42abd5aab45ce60","messageTitle":"Update DevGuide to match SD","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"6fc3b166ab6b10bc18568eb5c2ed829666df72a5","messageTitle":"[128] Tweak logging (#128)","messageBody":"* Add prefixes to important log messages\r\n\r\n* Tweak event handling logs\r\n\r\n* Update DevGuide about logging and config\r\n","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":23},"md":{"insertions":43,"deletions":83}}},{"hash":"e85c3d76edab3d79fd282c9afec7f1ee94c6c7f2","messageTitle":"[103] Document that index must be a positive integer (#129)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2},"md":{"insertions":4,"deletions":2}}},{"hash":"2bdfca48baaeb10fbba9cf45a5d779f0e2e04a72","messageTitle":"Fix typo in .gitignore /data/","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":1}}},{"hash":"914eaa6efb348671bbb40407d7ff71cd7273029b","messageTitle":"Add dev photos","messageBody":"Fixes #119\n","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":1}}},{"hash":"540f2d509f31966fd644451df103f07da6ce3768","messageTitle":"Fix png -\u003e jpg","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"d3f05f521093577f079bef10436848b2c3c6cbce","messageTitle":"Increase photo display size","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"c65c6ecacd796fc33d871c6fff0473bb0734a0a9","messageTitle":"Warn that set up can take a long time.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":1}}}]},{"date":"2016-09-30","commitResults":[{"hash":"3930af40204b34906c67f8eb59a09f8f2e6fbacf","messageTitle":"[130] Tweak Gradle preferences file (#130)","messageBody":"","fileTypesAndContributionMap":{"prefs":{"insertions":1,"deletions":0}}},{"hash":"1e5fe333e134aa90e128e160eaed9a149d196982","messageTitle":"[131] Code quality tweaks (#131)","messageBody":"* Rename ShowHelpEvent\r\n\r\n* Fix comment problems\r\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"e7b090ed2f2a5840fd5f51a4fd0ee3fb7e3dd745","messageTitle":"Mention auto-changed settings files","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}},{"hash":"651d56357862b7e26daf8f265847d1747e003bb6","messageTitle":"Fix typos in DevGuide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":40,"deletions":44}}},{"hash":"05f8c18b8c4bb60de0de2b0962e89c5eb5c26ecc","messageTitle":"Add missing # in Dev Guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"fd165514cdf4dbebe31c12af006856b59692d4a8","messageTitle":"Add Dev Ops heading","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":6,"deletions":6}}},{"hash":"2eaae0831d95a897471dfe72648618c5a916c6ad","messageTitle":"Add Build Automation heading","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":0}}},{"hash":"e2be60c946e0eb25e79cadd2f6c9370c9b1749d2","messageTitle":"Fix typos in UsingGradle.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":6}}},{"hash":"22932cec056d9d65d5786b2f4cccd3c8fc9c2fbf","messageTitle":"Add releases link","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"10c2b39bad1c3f2b9a5ac3639d7e710526d28055","messageTitle":"Fix broken link to releases","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"b69bf61fea721d590ac2c3d0ed995f6e903e2dbd","messageTitle":"Fix typos in User Guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":4}}},{"hash":"7c38bbd88e4bb1a0b633577e4f5b151887bef77c","messageTitle":"Give more details about the command format","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":5}}},{"hash":"b378db4929ec8bdd3d16c46886498170d32b2ce8","messageTitle":"Add missing line break to DevGuide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}},{"hash":"0c3fb87fdd35afd7327b52b87cec8185c58f7e7b","messageTitle":"Add missing dependency in Logic CD","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3f7ea164ee6ec52ccf98c7e9f37510cb6f7d935c","messageTitle":"Add SD for delete person within Logic","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":0}}},{"hash":"75942c90c04ff0469d5bb26873b85cd094f37797","messageTitle":"[132] Add some missing util tests (#132)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":1}}}]},{"date":"2016-10-01","commitResults":[{"hash":"c31c5f5c517f63d566999ab121d57d01ac08ef88","messageTitle":"[134] Increase test coverage in storage","messageBody":"* Add test to cover save/read to default path\r\n\r\n* Fix typo in JsonUserPrefStorage\r\n\r\n* Add dependency injection constructor for StorageManager\r\n\r\n* Fix broken tests due to wrong folder name\r\n\r\n* Add test to check data saving exception\r\n\r\n* Add test for StorageManager::getAddressBookFilePath()\r\n","fileTypesAndContributionMap":{"java":{"insertions":138,"deletions":28},"json":{"insertions":0,"deletions":0}}}]},{"date":"2016-10-03","commitResults":[{"hash":"1293b88125d56dd1f647d0b9b775855f1dfdbfb8","messageTitle":"Remove redundant comment lines in GuiTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2016-10-04","commitResults":[{"hash":"b550d0b7ca26f2851e9dc74a595a563118dcf218","messageTitle":"Add LO-EventDriven etc.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":111,"deletions":4}}},{"hash":"3092267187fba507bed344055c782e1c68c16efc","messageTitle":"Add ToC to new LOs","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":3}}},{"hash":"0184f84e138a6b2e41b719be12846e5715c6159e","messageTitle":"Remove extra spaces in LO-DefensiveCoding","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2016-10-05","commitResults":[{"hash":"239bcc15a1d244a1655b06b9f68e645176e310e8","messageTitle":"Add troubleshooting help to DevGuide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":15,"deletions":0}}},{"hash":"386c3c108ff4a554d43a8ad38b8be6d56f6d9fcc","messageTitle":"Add troubleshooting tips for tests","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":4}}}]},{"date":"2016-10-06","commitResults":[{"hash":"76463e67b1bd1bd644a5d9d98197eb5e59425fc1","messageTitle":"Fix broken link in Dev Guide ToC","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2016-10-12","commitResults":[{"hash":"7c481930df6a69fb6a08a036b9e4ee0bed6135bc","messageTitle":"Fix broken link to LO-DefensiveCoding","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"4e2f1695f401f5e06f7652af54007fb51034b7a7","messageTitle":"Add LO-CodeCoverage","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":15,"deletions":2}}},{"hash":"7359b0bc913aeaee57b5863a12d562a418f07e17","messageTitle":"Add test case design info to StringUtilTest::isUnsignedPositiveInteger","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":9}}}]},{"date":"2016-10-13","commitResults":[{"hash":"38a5a4dd871a6f58c673131992d68b9675ff6fba","messageTitle":"Add tests for StringUtil::containsWordIgnoreCase","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":7}}},{"hash":"8dd845ff7ad1762b8cba9cf00c17731f4815f1f6","messageTitle":"Optimize StringUtil::containsWordIgnoreCase","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":9}}},{"hash":"7b432582f6d4bd2cf8344bc8d8f01de80da0a474","messageTitle":"Fix checkstyle problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"9941eabb4bec0b081212312ba86e64a4608c5010","messageTitle":"Add  LO-TestCaseDesignHeuristics","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":13,"deletions":3}}},{"hash":"daa496f6efac093e566451e6a2401739fdfb38f6","messageTitle":"Fix broken link in LOs","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"ba7205071e402ab4e7b2035f23f5ae1b502d3b5f","messageTitle":"Refine LO-TestCaseDesignHeuristics","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":1}}},{"hash":"1927239e91a307bea7821f9ca5b96c5debf95601","messageTitle":"Fix link to StringUtil","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2016-10-16","commitResults":[{"hash":"d9831a20d159837733146de19454d2e4ac741f03","messageTitle":"Add LO-IntegrationTests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":7},"md":{"insertions":32,"deletions":1}}},{"hash":"c73bd06b3eaee4725dbadaf36edc5d23f82459b6","messageTitle":"Fix checkstyle warning for Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"0f92d5f96587a095ca19e5089a94be6d128e1734","messageTitle":"Add LO-SystemTesting","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":11,"deletions":1}}},{"hash":"fe8f137369db6548c4bfa59aa6da80632b8da5ae","messageTitle":"Add LO-AutomatedGuiTesting","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":16,"deletions":6}}},{"hash":"68425842a8ac50d7ee772b2fb6396d4e3ff75b92","messageTitle":"Add LO-DesignPatterns","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":38,"deletions":2}}},{"hash":"b3dd6334a0a4abb1353e08a238880dbde5cab94f","messageTitle":"Add LO-StaticAnalysis","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":22,"deletions":6}}},{"hash":"2e214de6f0f3953db8963ce5da7840204dec0878","messageTitle":"[155] Split Diagrams.pptx file","messageBody":"Fixes #155\n","fileTypesAndContributionMap":{}},{"hash":"8fc301f91dffddfd06d812c589fad4fd2858e699","messageTitle":"Remove unused constructors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":31}}},{"hash":"e2e64653bf90843e1d770da70b0f1a623b5fdd91","messageTitle":"Eliminate reassigning parameters","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"62775f89d057403a684d87157d0da1c399dcb446","messageTitle":"Fix PMD warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}},{"hash":"428a0db8de463902fed14c37fb931902f4de2caf","messageTitle":"Fix more PMD warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":13}}},{"hash":"5c44a011d18b6e2ade0f09c65c9d888991accdfe","messageTitle":"Add codacy badge","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}},{"hash":"1bae855e638bb022e27a7af44d78e3edc222ce64","messageTitle":"Fix code style warnings by codacy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":11}}}]},{"date":"2016-10-17","commitResults":[{"hash":"38cfb097d720e083073c0deb041c129bd250f4bd","messageTitle":"Add questions to LO-TestCaseDesignHeuristics","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":5,"deletions":1}}}]},{"date":"2016-10-18","commitResults":[{"hash":"b12de5a4f66aebfe511148b4bbc43a61e89aa265","messageTitle":"Add missing link in LO ToC","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}}]},{"date":"2016-10-19","commitResults":[{"hash":"8e2cf2b28294c2c7d66d0e4057ae07228af1d2f9","messageTitle":"Add LO-CodeReview","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":18,"deletions":0}}},{"hash":"11d6f54eb698d86600b7d3c1d94ed081c92eacfb","messageTitle":"Update LO-CodeReview","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":16,"deletions":6}}},{"hash":"9f70ed17db8f90b639905ef08b92d3bd8c52ee75","messageTitle":"[#159] Remove non-static initializers","messageBody":"Remove non-static initializers except one (keep one as an example)","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}},{"hash":"8402fb9147fb7e7873f8f3f567651f8f24cfb92f","messageTitle":"Removed redundant default constructor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":6}}},{"hash":"d8839ef9367a5f3f94f2f6f2d0abc74e24b56e7f","messageTitle":"Move inner classes to the bottom","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":63}}},{"hash":"1626849824fd7aeb1db1a568c99c4a532af1f479","messageTitle":"Fix typo in method name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"05e3776752a8d5d68b99c3d80f4204fae251ba0c","messageTitle":"Fix typo in StorageManagerTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b4aded19f02fc030e5d1f33a5958e3410df7b33b","messageTitle":"Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"c2f456d30821125c38eb92610b4c8a5a7338237e","messageTitle":"Move inner class to bottom","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":21}}}]},{"date":"2016-10-20","commitResults":[{"hash":"067d8f3b475e556599b6f77120a36d4ecb6a7947","messageTitle":"Add examples to command summary","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":21,"deletions":9}}}]},{"date":"2016-11-19","commitResults":[{"hash":"61b1f6fa5d259677efcd8df61b73b7569b7d5715","messageTitle":"Update Model class diagram to remove Person - - \u003e Tag","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2016-12-14","commitResults":[{"hash":"38a52f5ad5e1bb97574f38950aa3b1246cc3b469","messageTitle":"Move page title to the top of README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2016-12-18","commitResults":[{"hash":"0c529e619ae7c7166599a8ca8777560b6e183ac9","messageTitle":"Set theme jekyll-theme-cayman","messageBody":"","fileTypesAndContributionMap":{"yml":{"insertions":1,"deletions":0}}},{"hash":"ce4104b2c15037c0ddf0a4e138a79813d7a480af","messageTitle":"Set theme jekyll-theme-tactile","messageBody":"","fileTypesAndContributionMap":{"yml":{"insertions":1,"deletions":1}}},{"hash":"6cab4c4b826af8d8efc52c768f893d4a0cad89c5","messageTitle":"Set theme jekyll-theme-minimal","messageBody":"","fileTypesAndContributionMap":{"yml":{"insertions":1,"deletions":1}}},{"hash":"979e68098b5f3a57d739cdfbc5f43e6fd1ebb048","messageTitle":"Add tip about using pptx files to create diagrams","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":0}}},{"hash":"311ab3c0ccd4d6e49d81234e6d8fe42646e3c834","messageTitle":"Add additional info to LO-CodeCoverage","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":1}}}]},{"date":"2016-12-20","commitResults":[{"hash":"bd02cb898e196560acfbdc98fbacaf333ed08057","messageTitle":"Add AppVeyor badge","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}}]},{"date":"2016-12-22","commitResults":[{"hash":"a8198d59f47468b83c73d79cc33b788abe0f9c6d","messageTitle":"Add section numbers to dev guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":29,"deletions":28}}},{"hash":"eaf2f21193a3256de70e0d5942b4341e34d05206","messageTitle":"Add captions for Dev Guide diagrams","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":12,"deletions":2}}},{"hash":"7195389ddd0cbdc4956b4baefa2a8da61a25542a","messageTitle":"Add section numbers to the user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":17,"deletions":17}}},{"hash":"4bc46893c7d17b28c317c39492d046c86c25a7ad","messageTitle":"Rephrase method header comments to follow the coding style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":15}}},{"hash":"cbf763bf0daa95e370ce3299eb0152fd8617b427","messageTitle":"Add authors to Dev Guide sections to be written individually","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":0}}},{"hash":"ee34067fad658c121745a87e31bd177a0ce51291","messageTitle":"Add template for Dev Guide: Product Survey","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":13,"deletions":1}}},{"hash":"7b1fc01915cbbec4318217496281325cf27bc4a3","messageTitle":"Refine NFRs in Dev Guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":3}}},{"hash":"b7cd36fb51819d806f9c731ca4d05242bf982cec","messageTitle":"Fix GitHub page rendering of Dev Guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":18,"deletions":2}}},{"hash":"a8493447cec673de1c54f2f375ce7253a76f44c1","messageTitle":"Fix github page rendering in User Guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":27,"deletions":8}}},{"hash":"6ca9b47712d7087b7ce708485deb602b53a1bf01","messageTitle":"Fix GitHub page rendering in LearningOutcomes.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":30,"deletions":6}}},{"hash":"df3e2ca0fca50e31ed5d1d5615ea5ae2047c166f","messageTitle":"Set theme jekyll-theme-cayman","messageBody":"","fileTypesAndContributionMap":{"yml":{"insertions":1,"deletions":1}}}]},{"date":"2016-12-23","commitResults":[{"hash":"e280bbdd7add1bdc32eda889b2df1541a2a667fb","messageTitle":"[#236] Reverse #161 (Include test code in coverage analysis)","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":11}}}]},{"date":"2017-01-13","commitResults":[{"hash":"32643f6b7435056071181de2bd34055bb3b05cc4","messageTitle":"Add more info on using pptx files for diagrams","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}}]},{"date":"2017-02-08","commitResults":[{"hash":"8976f44fc8e1b48a2d37bed6657976f7400d8971","messageTitle":"Add missing blank line in dev guide","messageBody":"Missing blank line before the bullet list makes the bullet\r\nlist render incorrectly on GitHub pages","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}},{"hash":"bd3ab6479dc1ce50d849254d5e25753720c474e7","messageTitle":"Elevate heading level of \u0027Headless GUI Testing\u0027","messageBody":"Elevate to level 4 to avoid the heading appear too small","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"1054d0d13f0d39a627db5bd53882bb4bdd162289","messageTitle":"[#246] User/Dev Guide: ToC links broken","messageBody":"Links in the ToC missing section numbers.\n\nFixes #246\n","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":9}}},{"hash":"2d4aa80ec142ce9c29935bfc68ce4e3ffa69ab5d","messageTitle":"Revert \"[#246] User/Dev Guide: ToC links broken\"","messageBody":"This reverts commit 1054d0d13f0d39a627db5bd53882bb4bdd162289.\n\nFixing the ToC links in the .md version causes\nthe links to break in the GitHub Pages version.\nRevert the fix because its more important for\nthe links to work in the GitHub Pages version.\n","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":9}}}]},{"date":"2017-02-15","commitResults":[{"hash":"f40ee42cb2e29a99c9c6b8757b64b0b0f4284d67","messageTitle":"LearningOutcomes.md: fix minor typos","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2017-08-02","commitResults":[{"hash":"b5d8fe3dc9851e14163c87d4d9fa58f7d8b37547","messageTitle":"johndoe.adoc: tweak formatting","messageBody":"* add section \u0027justification for the feature\u0027\n* minor cosmetic tweaks\n","fileTypesAndContributionMap":{"adoc":{"insertions":17,"deletions":7}}}]},{"date":"2017-09-21","commitResults":[{"hash":"ae25c1619a8d9c254f49540dd9c4dcd82b964755","messageTitle":"LearningOutcomes.adoc: tweak to refer to se-book","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":55,"deletions":53}}},{"hash":"c142d9f45a1854575b5a266e5aeabc16b7d7c635","messageTitle":"docs: restructure dev docs","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":145,"deletions":80}}}]}],"Ziyang":[{"date":"2017-03-20","commitResults":[{"hash":"d87cf6bae333f9254f72cf4fe6242cf2c19a8c6f","messageTitle":"[#344] Fix typo in LogsCenter#getLogger(...) header comment (#345)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}],"Paul Tan":[{"date":"2016-12-02","commitResults":[{"hash":"4b99eb594378e44bae3dcf454c2b94cd2215d183","messageTitle":"[183] UiParts should not store a reference to the primaryStage","messageBody":"* UiPart: move setIcon() into MainWindow\r\n\r\nUiPart::setIcon() is only used by MainWindow. Furthermore, UiParts\r\nshould not be allowed to change the primary stage\u0027s icon at their whim\r\nand fancy, as it may lead to multiple UiParts conflicting with each\r\nother because they all want to set the primary stage\u0027s icons.\r\n\r\nSo, make it clear that only MainWindow is allowed to do this by moving\r\nUiPart::setIcon() into MainWindow, and making it private.\r\n\r\n* UiPart: move setIcon() into FxViewUtil\r\n\r\nUiPart::setIcon() does not depend on any internal data of UiPart, and\r\nthus is better suited to be in an external utility class as a static\r\nmethod. This is done to make it clear that calling setIcon() will not\r\nmodify the state of any objects, besides the Stage passed in as an\r\nargument.\r\n\r\n* FxViewUtil: rename setIcon() to setStageIcon()\r\n\r\nThis is done to make it clear that the method operates on a Stage.\r\n\r\n* UiPart: push down primaryStage\r\n\r\nCurrently, all UiParts store a reference to their primaryStage, which\r\nmeans that they can modify the primaryStage at their own whim and fancy.\r\n\r\nWe want to prevent that -- UiParts should not be able to access the\r\nprimaryStage as it makes it hard to reason about which UiPart is\r\ncontrolling the primaryStage and which is not. As such, we want to\r\nremove the reference to the primaryStage from all UiParts.\r\n\r\nOf all the UiParts, we note that only MainWindow requires a reference to\r\nthe primaryStage. All other UiParts do not, and SHOULD NOT, keep a\r\nreference to the primaryStage.\r\n\r\nSo, we push down the `primaryStage` field from UiPart to MainWindow\r\nonly. All other UiParts thus effectively lose access to the\r\nprimaryStage, which is a good thing for encapsulation.\r\n\r\n* UiPartLoader: rename loadUiPart() to initUiPart()\r\n\r\nAll other variants of loadUiPart() will reconstruct the UiPart based on\r\nthe value of \"fx:controller\" in its FXML file.\r\n\r\nOnly loadUiPart(T seedUiPart) does not -- it simply sets up the FXML\r\nscene graph using the existing UiPart object provided.\r\n\r\nTo highlight the difference in behaviour of this method from the others,\r\nrename this method to `initUiPart()`.\r\n\r\n* UiPartLoader: add single argument variant of loadUiPart()\r\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":73}}}]},{"date":"2016-12-08","commitResults":[{"hash":"6c99bdbd9ba4aac9c64643106428409cf0d769b7","messageTitle":"build.gradle: add `run` and `runShadow` tasks (#178)","messageBody":"The `run` and `runShadow` tasks provide a convenient way for developers\r\nto run the built application from its *.class files or the built fat JAR\r\nrespectively.\r\n\r\nThis is accomplished using the application plugin[1] which implements\r\nthe \u0027run\u0027 task.\r\n\r\nThe shadow plugin, which we already use, will automatically detect the\r\n`application` plugin and will integrate with it[2], providing the\r\n`runShadow` task. It also knows that `mainClassName` should be used\r\nas the \"Main-Class\" of the JAR manifest, so we don\u0027t need to specify\r\nthat anymore.\r\n\r\nWe add the `mainClassName` and `plugin` lines OUTSIDE of the\r\n`allprojects` block because the question of \"which class should be run\"\r\nis Gradle project-specific and only applicable to the root project.\r\n\r\n[1] https://docs.gradle.org/current/userguide/application_plugin.html\r\n[2] http://imperceptiblethoughts.com/shadow/#integrating_with_application_plugin","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":4},"md":{"insertions":8,"deletions":0}}},{"hash":"7ff3ad82caaf32e71def3d26f133c1152cad0ac6","messageTitle":" checkstyle: check for trailing whitespace  #179 (#180)","messageBody":"* codestyle: remove trailing whitespace\r\n\r\nSome lines in the code look like an empty line, but actually contain\r\nspaces.\r\n\r\nTo be consistent with the rest of the code, let\u0027s make sure all empty\r\nlines are actually empty.\r\n\r\n* checkstyle: check for trailing whitespace\r\n\r\nTo ensure that no more trailing whitespace is introduced into our code\r\nbase, add a check for it.\r\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17},"xml":{"insertions":7,"deletions":0}}}]},{"date":"2016-12-10","commitResults":[{"hash":"ba0900e84dd5ca552cd93a6f6c10634bbcf56426","messageTitle":"[188] Construct StatusBarFooter in FXML fully","messageBody":"StatusBarFooter currently constructs and sets up its StatusBar controls\r\nusing pure code.\r\n\r\nThe StatusBar control is actually a real control that can be initialized\r\ndirectly in the FXML file. We can avoid placeholder elements and make\r\nthings simpler by just doing that.\r\n\r\nNow, one may think: \"This means Scene Builder cannot edit this FXML file\r\nany more!\", since the StatusBar control comes from controlsfx, which is\r\nnot supported by Scene Builder by default. However,\r\n\r\n1. Scene Builder can actually be configured[1] to support the custom\r\n   controls from controlsfx, allowing it to edit the FXML file.\r\n\r\n2. Having too many placeholder nodes, and constructing the actual scene\r\n   graph in code, kind of defeats the advantage of FXML which is to\r\n   construct the scene graph declaratively without code.\r\n\r\n[1] http://stackoverflow.com/a/30078204","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":2},"java":{"insertions":3,"deletions":20}}},{"hash":"e088d3dd380e3f58ef7153611d817250d2cef333","messageTitle":"checkstyle: accept LF, CR or CRLF as line endings (#194)","messageBody":"Checking out this repo on a Windows machine with a vanilla Git config,\r\nthen running `gradlew.bat checkstyleMain` gives the following errors:\r\n\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\MainApp.java:0: File does not end with a newline. [NewlineAtEndOfF\r\n    ile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\ComponentManager.java:0: File does not end with a new\r\n    line. [NewlineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\Config.java:0: File does not end with a newline. [New\r\n    lineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\EventsCenter.java:0: File does not end with a newline\r\n    . [NewlineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\GuiSettings.java:0: File does not end with a newline.\r\n     [NewlineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\LogsCenter.java:0: File does not end with a newline.\r\n    [NewlineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\Messages.java:0: File does not end with a newline. [N\r\n    ewlineAtEndOfFile]\r\n    [ant:checkstyle] [ERROR] C:\\Users\\pyokagan\\pyk\\addressbook-level4\\src\\main\\java\\\r\n    seedu\\address\\commons\\core\\UnmodifiableObservableList.java:0: File does not end\r\n    with a newline. [NewlineAtEndOfFile]\r\n    ...etc\r\n\r\nThis goes on for every single Java file.\r\n\r\nThis is because this repo\u0027s files uses LF as the line separator.\r\nHowever, the default \"lineSeparator\" value of the \"NewlineAtEndOfFile\"\r\ncheck is CRLF on Windows[1], hence these errors.\r\n\r\nOne may argue that we could switch on `core.autocrlf` in Git, which\r\nwould tell Git to automatically convert all LF line endings to CRLF,\r\nthus avoiding this problem. However, this not only places an additional\r\nburden on Windows users to configure Git properly, it also does not\r\nhandle the use cases where a developer is not using Git. The developer\r\nmay, for example, instead get hold of the repo by downloading the ZIP\r\nfile using Github\u0027s \"Download as ZIP\"[2] functionality, and will thus\r\nstill have this problem as the downloaded ZIP contents will still\r\ncontain LF line endings.\r\n\r\nThus, we should either switch the \"lineSeparator\" property to \"lf\",\r\naccepting only LF line endings, or \"lf_cr_crlf\", accepting LF, CR or\r\nCRLF line endings. (Checkstyle does not support just LF and CRLF only)\r\n\r\nHowever, some developers may have `core.autocrlf` accidentally set, or\r\nmay even prefer to use CRLF line endings in their working copy. As such,\r\nlet\u0027s go the route of allowing LF, CR or CRLF as line endings.\r\n\r\n[1] http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile\r\n[2] https://github.com/se-edu/addressbook-level4/archive/master.zip","fileTypesAndContributionMap":{"xml":{"insertions":4,"deletions":1}}},{"hash":"e68f4529ea42ac5929472b76fbb4a7bf9e8cbbf2","messageTitle":"checkstyle: ensure curly brackets have whitespace around them #181 (#182)","messageBody":"* codestyle: ensure curly brackets are separated by whitespace\r\n\r\nThe Java coding standard[1] requires that curly brackets ({}) be\r\nsurrounded by whitespace.\r\n\r\nHowever, there are several violations of this requirement in the code\r\nbase. e.g.\r\n\r\n    protected void raise(BaseEvent event){\r\n    -------------------------------------^\r\n                        Space required before \u0027{\u0027\r\n\r\nFix all of these code style violations.\r\n\r\n[1] https://oss-generic.github.io/process/codingstandards/coding-standards-java.html#methods\r\n\r\n* checkstyle: ensure curly brackets have whitespace around them\r\n\r\nThere used to be methods in the code base where the curly brackets ({})\r\nare not separated by whitespace:\r\n\r\n    protected void raise(BaseEvent event){\r\n    -------------------------------------^\r\n                        Space required before \u0027{\u0027\r\n\r\nOur checkstyle configuration failed to catch these errors because we did\r\nnot tell checkstyle to check for the LCURLY, RCURLY and SLIST (statement\r\nlist) tokens. Fix this in the checkstyle config file so that such code\r\nstyle violations will not happen again.\r\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":63},"xml":{"insertions":12,"deletions":2}}}]},{"date":"2016-12-13","commitResults":[{"hash":"845249d099d355a00bb33922e1a379033b0006dc","messageTitle":"[#186] Construct BrowserPanel in FXML (#208)","messageBody":"* Construct BrowserPanel using FXML\r\n\r\nThe DeveloperGuide states that the layout of individual UiParts are\r\nspecified in matching `.fxml` files. e.g. The layout of\r\n`MainWindow.java` is specified in `MainWindow.fxml`.\r\n\r\nWhile this is true for almost all UiParts, there is one oddball UiPart\r\nthat does not have a corresponding `.fxml` file -- BrowserPanel.\r\n\r\nFor consistency with the rest of the UiParts, let\u0027s construct the\r\nBrowserPanel using FXML rather than using code.\r\n\r\n* Remove DefaultBrowserPlaceHolderScreen.fxml\r\n\r\nIt is not being used at all.\r\n","fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":21},"java":{"insertions":6,"deletions":10}}}]},{"date":"2016-12-20","commitResults":[{"hash":"04f0810c304e6a424dcd1b18eb1fb8ffd23ee7e2","messageTitle":"[#192] Set Up AppVeyor CI (#218)","messageBody":"AppVeyor[1] is a continuous integration service used to build and test\r\nprojects on a Windows VM. Adding AppVeyor support to this project will\r\nallow us to easily ensure that our tests do not break on Windows.\r\n\r\nAdd an appveyor.yml file that will teach AppVeyor how to build this\r\nproject and run its tests.\r\n\r\nUpdate our documentation to explain to developers how to set up AppVeyor\r\non their own repositories.\r\n\r\nFor now, we will run our tests with 64-bit Java only, since the project\r\ndoes not use any native libraries and thus is unlikely to have any\r\narchitecture-specific bugs. In the future, should we use any native\r\nlibraries, the appveyor.yml file should be updated to run our tests on\r\nboth 32-bit and 64-bit Java.\r\n\r\n[1] https://www.appveyor.com/","fileTypesAndContributionMap":{"md":{"insertions":79,"deletions":2},"yml":{"insertions":18,"deletions":0}}}]},{"date":"2016-12-23","commitResults":[{"hash":"f48f92181a328fb7cb89a1165824c8d2e7bb360b","messageTitle":"[#221] Rework how TypicalTestPersons exposes its persons (#224)","messageBody":"* TypicalTestPersons: remove repetition of typical persons list\r\n\r\nThe list of typical persons is repeated in\r\nloadAddressBookWithSampleData() and getTypicalPersons(). DRY up the code\r\nby making getTypicalPersons() the authoritative source.\r\n\r\n* TypicalTestPersons: make TestPerson fields non-static\r\n\r\nThroughout the code base, TypicalTestPersons is typically used in the\r\nfollowing fashion so that tests can access the test persons using a\r\nshorter variable name, e.g.:\r\n\r\n    TypicalTestPersons td \u003d new TypicalTestPersons();\r\n    td.alice, td.benson etc.\r\n\r\nHowever, with such code, Eclipse will give the following warning:\r\n\r\n    The static field TypicalTestPersons.alice should be accessed in a\r\n    static way.\r\n\r\nThis is because these TestPerson fields are static. This is problematic\r\nbecause these fields can be accessed without first constructing a\r\nTypicalTestPersons object (e.g. with `TypicalTestPersons.alice`,\r\n`TypicalTestPersons.benson` etc.), which could potentially lead to\r\nNullPointerExceptions (if a TypicalTestPersons object was not\r\nconstructed yet) or state leaks (if a test modifies the TestPersons)\r\nwhich are hard to debug.\r\n\r\nAs such, let\u0027s make these TestPerson fields non-static.\r\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":14}}}]},{"date":"2016-12-24","commitResults":[{"hash":"e1cc235f159b1a358b364b4ccf1a0dbf8953a8e4","messageTitle":"[#190] Make ReadOnlyAddressBook truly read-only (#199)","messageBody":"* Remove redundant \"get empty address book\" methods\r\n\r\nIt seems strange that we have AddressBook#getEmptyAddressBook() and\r\nTestUtil#generateEmptyAddressBook() methods, when a simple\r\n`new AddressBook()` will give us what we want.\r\n\r\n* Fully encapsulate UniquePersonList and UniqueTagList within AddressBook\r\n\r\nReadOnlyAddressBook declares the following methods:\r\n\r\n* `UniqueTagList getUniqueTagList();`\r\n\r\n* `List\u003cTag\u003e getTagList();`\r\n\r\n* `UniquePersonList getUniquePersonList();`\r\n\r\n* `List\u003cReadOnlyPerson\u003e getPersonList();`\r\n\r\nAs we can see, there is some redundancy; both `getUniqueTagList()` and\r\n`getTagList()` conceptually do the same thing, and both\r\n`getUniquePersonList()` and `getPersonList()` conceptually do\r\nthe same thing as well.\r\n\r\nSo, to simplify the API we need to pick one set of APIs: either the ones\r\nthat return `UniqueXList`, or the ones that return `List\u003cX\u003e`.\r\n\r\nGoing with the API that returns `List\u003cX\u003e` is more beneficial than\r\n`UniqueXList`: Lists are widely used throughout our code and the\r\nstandard library, and thus returning a list would be much more\r\nconvenient for developers. `UniquePersonList` and `UniqueTagList`, on\r\nthe other hand, only implement the `Iterable` interface, and are thus\r\nslightly more annoying to write code with.\r\n\r\nHowever, there is a deeper problem as well: `UniquePersonList` and\r\n`UniqueTagList` both contain mutating methods, which violates the\r\ncontract of `ReadOnlyAddressBook` to provide a read-only view to the\r\naddress book. We could solve this by introducing\r\n`ReadOnlyUniquePersonList` and `ReadOnlyUniqueTagList` interfaces, but\r\nas argued above, by virtue of not implementing the `List`\r\ninterface these objects are more annoying to deal with and thus it is\r\nlikely better to not return them at all.\r\n\r\nAs such, this commit removes the `getUniqueTagList()` and\r\n`getUniquePersonList()` methods. In addition, we also remove all of the\r\nmethods of `AddressBook` that take a `UniquePersonList` or\r\n`UniqueTagList`, thus fully encapsulating these classes within\r\n`AddressBook`. This not only solves the contract violation problem as\r\ndiscussed above, it also reduces coupling as users will no longer need\r\nto depend directly on `UniquePersonList` and `UniqueTagList` any more.\r\n\r\n* ModelManager: merge two similar constructors\r\n\r\nBoth ModelManager(AddressBook, UserPrefs) and\r\nModelManager(ReadOnlyAddressBook, UserPrefs) both do exactly the same\r\nthing. Let\u0027s DRY up the code by merging them into one single\r\nconstructor.\r\n\r\nThe author notes that the `userPrefs` argument is currently not even\r\nused. However, fixing this is outside the scope of this commit.\r\n\r\n* AddressBook: replace getPersons() with getPersonList()\r\n\r\nReadOnlyAddressBook has a getPersonList() method which returns its list\r\nof persons as a List\u003cReadOnlyPerson\u003e\r\n\r\nAddressBook has a getPersons() method which returns its list of persons\r\nas an ObservableList\u003cPerson\u003e.\r\n\r\nSimplify the API by merging these methods together, by making\r\ngetPersonList() return an ObservableList\u003cReadOnlyPerson\u003e and removing\r\ngetPersons().\r\n\r\n* ReadOnlyAddressBook: make getTagList() return an ObservableList\r\n\r\nEven though there are currently no callers that require the return value\r\nto be an ObservableList, this is still done for consistency with\r\ngetPersonList() and to make it easier to implement future UI features\r\nsuch as a listing of all tags.\r\n\r\n* fixup! Fully encapsulate UniquePersonList and UniqueTagList within AddressBook\r\n\r\n* fixup! Fully encapsulate UniquePersonList and UniqueTagList within AddressBook\r\n","fileTypesAndContributionMap":{"java":{"insertions":169,"deletions":113}}}]},{"date":"2016-12-27","commitResults":[{"hash":"5318247b46485d8157265b0642de57189495e2a2","messageTitle":"Fix \"no newline at EOF\" errors","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":2,"deletions":2},"xml":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3},"yml":{"insertions":1,"deletions":1},"json":{"insertions":8,"deletions":8}}}]},{"date":"2016-12-28","commitResults":[{"hash":"465cb6b67090605d8682735ae41ed5f00d64cede","messageTitle":"Implement Travis CI line ending checks","messageBody":"In our repository, we want:\n\n* All text files to use only LF (\u0027\\n\u0027) as their line endings. Not CRLF\n  (\u0027\\r\\n\u0027)\n\n* All text files to end with a newline (Newline at EOF).\n\nSo, ideally, we should have checks that automatically check for these\nrequirements in our repository.\n\nHowever, we can\u0027t impose these checks on all developers, namely Windows\ndevelopers. They could be using either LF or CRLF (e.g. if the developer\nactivated Git\u0027s core.autocrlf configuration). Even if we did, we can\u0027t\nguarantee that developers do not bypass these checks. As such, we have\nto implement these checks on the Travis CI level instead.\n\nThe next question is how do we implement these checks. Checkstyle is\nalready helping us with that, but it is not completely effective as it\ndoes not check *all* text files -- it only checks the source files which\nare used for compilation.  This means that it does not check things like\nresource files (CSS and FXML files), test data and documentation.\n\nWhile we could probably teach it to check all files, we meet another\nproblem; Checkstyle does not know what a text file is. At best, we can\nonly give it a filter of file extensions to check.\n\nOn the other hand, Git knows the difference between text files and\nbinary files. As such, let\u0027s implement some shell scripts that will use\nGit\u0027s facilities to implement our line ending checks on all text files.\nThese checks will be run on Travis CI, thus guaranteeing that master\nwill not have any more line ending problems.\n\nThese checks are implemented in POSIX shell scripts so that Travis CI\nwould not need to download any additional dependencies in order to run\nthem. Furthermore, developers running Linux or Macs can also run them\nlocally without downloading additional dependencies as well. Windows\ndevs would be unable to run them, but then again these line ending\nchecks are not useful to them because as mentioned above, Windows devs\nmay be using CRLF line endings anyway.\n","fileTypesAndContributionMap":{"sh":{"insertions":44,"deletions":0},"yml":{"insertions":5,"deletions":1}}},{"hash":"8ee1731ffb32d3bf6f107ab24986b5ae286a783e","messageTitle":"Fix \"trailing whitespace\" errors","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"md":{"insertions":167,"deletions":167}}},{"hash":"4e928d4d8b937a5a1f703134b2386e9e2c96d8fd","messageTitle":"Implement Travis CI trailing whitespace check","messageBody":"While our checkstyle configuration already checks for trailing\nwhitespace in our java files, it does not cover all text files in our\nrepository. Notably: our documentation files and other configuration\nfiles such as `build.gradle`.\n\nWhile we could probably coax checkstyle and gradle to check for these\nfiles, it is much easier to just hook onto our existing \"Travis CI\nchecks\" architecture to implement this check.\n\nTrailing whitespace should be considered an error, however we treat\ntrailing whitespace in markdown (`*.md`) files as warnings instead to\naccomodate developers who prefer to edit documentation using the GitHub\nweb interface which does not provide facilities to easily detect and\nremove trailing whitespace.\n","fileTypesAndContributionMap":{"sh":{"insertions":26,"deletions":0}}},{"hash":"9c29f8ed2c67b326b8bbeec88abe95b28bebbd57","messageTitle":"Document Travis CI repository-wide checks","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":35,"deletions":0}}}]},{"date":"2017-01-18","commitResults":[{"hash":"549e2ce6c770a17bdacfa82e2160b02853629f92","messageTitle":"UiPart: implement FXML loading constructor","messageBody":"There\u0027s quite a lot of boilerplate involved if a developer wishes to\nimplement a new UiPart. The developer needs to override:\n\n* `setNode()`\n\n* `getFxmlPath()`\n\n* potentially `setPlaceholder()`\n\nand think of what the sane thing is to do for each of these methods. In\naddition, to make the API pleasant to use, developers need to implement\na static `load()` method. In that method, the developer needs to further\ndecide which of the three overloaded `UiPartLoader::loadUiPart()`\nmethods to call.\n\nThe reason why so much boilerplate is required is because the current\nimplementation, through `UiPartLoader`, places the responsibility of\ncreating new `UiPart` instances (the controller) on the JavaFX\nFXMLLoader. However, FXMLLoader can only use the no-arg constructor of\nUiParts. As such, we need extra code to workaround this limitation in\norder to pass arguments into UiParts, leading to the above boilerplate\ncode.\n\nTo fix this problem, let\u0027s do two things:\n\nFirstly, we introduce a stricter definition of a UiPart: it contains a\nscene graph with a root node of a certain type T. This node can be\nretrieved with the new `getRoot()` getter.\n\nSecondly, we introduce new `UiPart(URL)` and `UiPart(String)`\nconstructors. These UiPart constructors will construct the UiPart\ninstance *first* before passing it to the FXMLLoader. In other words, we\nare now directly in control of our own constructors, which removes the\nneed for the above boilerplate methods. A simple UiPart subclass would\nlook like:\n\n    public class NewUiPart extends UiPart\u003cPane\u003e {\n        private final Object arg;\n\n        @FXML\n        private TextBox myNode;\n\n        public NewUiPart(Object arg) {\n            super(\"NewUiPart.fxml\");\n\n            // We can now initialize final fields!\n            this.arg \u003d arg;\n\n            // We can also access nodes in our FXML scene graph\n            // immediately!\n            myNode.setText(\"hello world!\");\n        }\n    }\n\nNotice how short the code is, as well as how it does not need to\nimplement a static `load()` method or depend on UiPartLoader.\n\nOne problem is that FXMLLoader does not allow passing in a controller\ninstance if the FXML file has a \"fx:controller\" attribute. Without this\nattribute, JavaFX FXML editors could potentially not be able to link the\ncontroller class with the FXML file[1], as they do not know what the\ncontroller class is. However, given the amount of code we save by\nadopting this architecture, this seems to be a worthwhile trade-off.\n\nThere\u0027s lot of ui parts which currently depend on the old way of doing\nthings, though. For now, let\u0027s mark the no-arg UiPart constructor, as\nwell as the setNode(), getFxmlPath() and setPlaceholder() methods as\ndeprecated. Convert setNode() and getFxmlPath() into non-abstract\nmethods so that UiParts who have migrated over to the new API do not\nneed to implement them.  Also, mark the UiPartLoader methods as\ndeprecated since UiParts using the new API should not need to call them.\n\nIn future commits, we will port each UiPart incrementally to use the new\n`UiPart(String)` constructor. When all code has been finally ported, we\ncan then remove the deprecated code.\n\nWhile we are also here, let\u0027s add some tests for UiPart.\n\n[1] It should be noted, however, that Gluon Scene Builder (the usual\n    FXML editor used by developers) does not actually link the FXML file\n    with its controller class, so this commit may actually be a strict\n    improvement with little drawbacks.\n","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":0},"java":{"insertions":198,"deletions":5},"classpath":{"insertions":6,"deletions":1}}},{"hash":"1da3e359b65879d0fde3b1c9849441087e1883d1","messageTitle":"BrowserPanel: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof BrowserPanel to use the new `UiPart(String)` constructor.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":7,"deletions":26}}},{"hash":"16ba2f9b9c6fe2813ba3f52b17d45190fea7a2cb","messageTitle":"PersonListPanel: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof PersonListPanel to use the new `UiPart(String)` constructor.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":8,"deletions":32}}},{"hash":"443d6fa012adeffad8e7448e1d40d14fe15ce7c5","messageTitle":"PersonCard: migrate to use FXML loading constructor","messageBody":"UiPartLoader.initUiPart() is deprecated. Migrate the initialization code\nof PersonCard to use the new `UiPart(String)` FXML loading constructor.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":32}}},{"hash":"4b229e3ada91eed6af32db7635ecb229c617d5ce","messageTitle":"ResultDisplay: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof ResultDisplay to use the new `UiPart(String)` FXML loading\nconstructor.\n\nWhile we are here, remove the unnecessary:\n\n    mainPane.getChildren().add(resultDisplay);\n\n`mainPane` in this case refers to an AnchorPane within\nResultDisplay.fxml:\n\n    \u003cAnchorPane fx:id\u003d\"mainPane\"\u003e\n        \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e\n    \u003c/AnchorPane\u003e\n\nAs can be seen, `resultDisplay` is already a child of `mainPane`, so the\nabove code is essentially a no-op.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":2},"java":{"insertions":5,"deletions":29}}},{"hash":"e78d245a577cbe301bf59e2fd1e0a6d006f6345d","messageTitle":"StatusBarFooter: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof StatusBarFooter to use the new `UiPart(String)` FXML loading\nconstructor.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":10,"deletions":34}}},{"hash":"67be0359491387785849f434c4fd4e45006e47e3","messageTitle":"CommandBox: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof CommandBox to use the new `UiPart(String)` FXML loading constructor.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":9,"deletions":32}}},{"hash":"dc69c618a1470a5efae330fb17b234e3e9cf6877","messageTitle":"HelpWindow: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof HelpWindow to use the new `UiPart(String)` FXML loading constructor.\n\nWhile we are here, shave off a few lines of code by constructing the web\nbrowser directly in the FXML file.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":4},"java":{"insertions":11,"deletions":27}}},{"hash":"0c7cc550f88f6b21481e4c078dc0d08c40cbc834","messageTitle":"MainWindow: migrate to use FXML loading constructor","messageBody":"UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code\nof MainWindow to use the new `UiPart(String)` FXML loading constructor.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":12,"deletions":33}}},{"hash":"fa7dbdef60152365271b7fb2231fa1e97f266ca8","messageTitle":"UiPart: remove deprecated construction methods","messageBody":"These methods were marked as deprecated because UiParts which used them\nto construct themselves ended up having lots of boilerplate code. These\nUiParts have all been migrated to use the newer and better `UiPart(URL)`\nand `UiPart(String)` constructors.\n\nNow that no code is using all these deprecated methods any more, we can\nremove them.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":107}}},{"hash":"2cb1e4ef7672b56e4a7599b1306f5970d8cffef6","messageTitle":"DeveloperGuide: update Ui component info","messageBody":"UiPartLoader does not exist anymore. All UiParts can be directly\nconstructed via `new SomeUiPart()`.\n","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":2}}},{"hash":"88b4c9abbd4687bf59544a4ef9b79b4eb9c86108","messageTitle":"StatusBarFooter: rename addMainPane() to addToPlaceholder()","messageBody":"This is done for consistency with the naming conventions used in the UI\ncode.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"8711079d66e3cfd51e2835ecd9728cfc3d0c2719","messageTitle":"PersonListPanel: use FxViewUtil.applyAnchorBoundaryParameters()","messageBody":"PersonListPanel sets the AnchorPane boundary parameters of its root VBox\nelement directly in its FXML file, while our UI code usually uses\nFxViewUtil.applyAnchorBoundaryParameters() to set the AnchorPane\nboundary parameters instead.\n\nFor consistency, make PersonListPanel use\nFxViewUtil.applyAnchorBoundaryParameters() as well.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":2,"deletions":0}}}]},{"date":"2017-09-21","commitResults":[{"hash":"c1bb12dab64dff38458bb59063542ea6f8e6077f","messageTitle":"build.gradle: upgrade TestFX to 4.0.7-alpha","messageBody":"TestFX 4.0.7-alpha has been released. Besides being the latest and\ngreatest version, 4.0.7-alpha also contains a proper working headless\nmode for Linux.\n\nWithout this upgrade, attempting to run `./gradlew headless guiTests` on\nLinux would result with the GUI tests failing with the following\nexception:\n\n        java.lang.RuntimeException: java.lang.RuntimeException: java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers \"\"\n\n            Caused by:\n            java.lang.RuntimeException: java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers \"\"\n\n                Caused by:\n                java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers \"\"\n\nLet\u0027s upgrade TestFX to 4.0.7-alpha to have happy Linux developers.\n\nThis working headless mode was also present in the 4.0.6-alpha, but we\ncouldn\u0027t upgrade to it as it broke our gui tests. (See e1eafd1 ([#353]\nAll gui tests are failing  (#354), 2017-03-23))\n\nFurthermore, since headless mode now works on Linux, our Travis CI\nbuilds do not need to run xvfb any more. As such, let\u0027s remove its usage\nfrom .travis.yml.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"yml":{"insertions":0,"deletions":4}}}]}],"Kelvin Lin":[],"Akshay Narayan":[{"date":"2016-09-26","commitResults":[{"hash":"eaf53399684f379e42cd1e6aca9bd4c35f736e38","messageTitle":"[101] remove [p] from add command help in the program (#104)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"177844fa34ec87ad0ab0f83581fd82f8815f2d4b","messageTitle":"[96] Fix typos and grammar in DeveloperGuide.md and UsingGradle.md (#97)","messageBody":"* fix typo in developer guide\r\n\r\n* fix typos/grammar in using gradle document\r\n\r\n* Remove \"what are dependencies and\" in Managing dependencies section\r\n","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"feecceffc94bac107dc927e99fc70d063b2bfb28","messageTitle":"[99] remove \"(private)\" in readonlyperson.java (#100)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2016-10-21","commitResults":[{"hash":"29ab5fddbadc885313b055194fcd22c10af5d08d","messageTitle":"[#163] fix typo in developer guide (#164)","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}],"Zhi Yuan Yong":[{"date":"2017-01-15","commitResults":[{"hash":"5b7c2449df37e09e5eac91df1a27ff531d2b0d31","messageTitle":"make Person mutable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"6db34ed3eee573e74f245a3a5d84e21a34472061","messageTitle":"create isAnyPresent() method in CollectionUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"1eb8b13812e55a0f7a43a8e733c30537b2338ed9","messageTitle":"teach classes in Model to execute edit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}},{"hash":"a56fcb0ff747cf25c446f775cf66487cf46ed38e","messageTitle":"create EditCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":163,"deletions":0}}},{"hash":"a791e8859cc79f4f4e7860cec73a128bb7c20a0c","messageTitle":"teach Parser to parse EditCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":0}}},{"hash":"acc1c8798d14d16e38970376a88b6f04b405b588","messageTitle":"create EditCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":162,"deletions":0}}},{"hash":"2d65a0d3bcdcfbbb0350d2c8d740dfd798ec6e8e","messageTitle":"update User Guide to include Edit Command","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":27,"deletions":6}}}]},{"date":"2017-05-17","commitResults":[{"hash":"b98082bc7e98040af92474f37cf55d504c0cf03d","messageTitle":"Add EditPersonDescriptor#equals(Object)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":168,"deletions":0}}}]},{"date":"2017-05-19","commitResults":[{"hash":"780ad50aee0de04279d98d3798c3b65c2e2cb8e1","messageTitle":"Add EditCommand#equals(Object)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":0}}},{"hash":"b918c91b5d725e7331a485bcb112a1dbcf8e3eda","messageTitle":"Create tests for EditCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":247,"deletions":0}}}]},{"date":"2017-05-30","commitResults":[{"hash":"a37629cf4c31f6783ffefbb4cd85bbcf3bc0f016","messageTitle":"Replace asserts with proper exceptions for parameter validation","messageBody":"Parameter validation is done by using asserts, and throws AssertionError\nwhen validation fails.\n\nAsserts may not always be enabled. Furthermore, specific exceptions\nsuch as NullPointerException should be thrown to make the error more\nexplicit.\n\nLet\u0027s replace the asserts with requireNonNull() and checkArgument(),\nwhich throws an appropriate exception when validation fails.\n","fileTypesAndContributionMap":{"java":{"insertions":214,"deletions":135}}},{"hash":"288a958a8d077613b9eed81e5f20219cc4d97449","messageTitle":"Update CollectionUtil#isAnyNull(Object...) to throw NPE","messageBody":"Java’s native Objects#requireNonNull(T) can only take in an Object.\nCalling the native method requires multiple calls in cases where certain\nmethods require multiple parameters to be non-null.\n\nLet’s update CollectionUtil#isAnyNull(…) to do the same operation as\nObjects#requireNonNull(T), and also able to take in multiple parameters.\n","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":58}}}]},{"date":"2017-05-31","commitResults":[{"hash":"ec9802858a993112faf0810e9e242a658d3f5d4b","messageTitle":"Implement ModelManager#equals()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}},{"hash":"8d4cd683088b0983fc4d157bce8b539a4deff9ac","messageTitle":"Update tests to use assertEquals(Model, Model)","messageBody":"The tests check for equality of the individual components of Model\n(AddressBook and FilteredList).\n\nThis can be simplified by checking for equality of the entire Model\ndirectly using ModelManager#equals().\n\nLet’s update the tests accordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":91}}}]},{"date":"2017-06-02","commitResults":[{"hash":"f3eb596fe316f5508c63cede160be2b74931f73c","messageTitle":"EditCommandTest: Merge with EditCommandIntegrationTest","messageBody":"As we have decided not to write pure unit tests for EditCommand, there\nis no need to specifically make the distinction between EditCommandTest\nand EditCommandIntegrationTest.\n\nLet’s merge them into EditCommandTest.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":100}}},{"hash":"701cb3b9a8fb6b5a7cc5a0c4850b4b27399999d9","messageTitle":"EditCommandTest: Construct EditCommand directly","messageBody":"EditCommandTest constructs its EditCommands for testing by first\nconstructing an edit command string via PersonUtil#getEditCommand()\nand then parsing that via Parser#parseCommand() to obtain an EditCommand.\n\nThis causes unnecessary coupling with Parser in EditCommandTest as\nconstructing EditCommand does not require Parser.\n\nLet’s improve EditCommandTest by constructing EditCommand using its\nconstructor instead.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":28}}},{"hash":"8087b5dc3806533c4258a7622d16018d30ac4f65","messageTitle":"EditCommandTest: Update PersonBuilder usage with more compact version","messageBody":"These lines of code were written before PersonBuilder had default values\nin the default constructor. It is now unnecessary to call PersonBuilder#with*\nmethods as default values will be assigned when calling the default\nconstructor.\n\nLet’s make this code more compact.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"6685551ab60859ab8d824bceae904a44791d7442","messageTitle":"EditCommandTest: Remove unnecessary line breaks in header comments","messageBody":"These line breaks are unnecessary as they are located on the last\nline of code.\n\nLet’s remove them.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"46e57b8f069ac90945b4fb5e94ad88c5dd1e1f30","messageTitle":"EditCommandTest: Replace `Command command` w/ `EditCommand editCommand`","messageBody":"EditCommandTest only contain tests for EditCommand. There is no need\nfor these helper methods to take in Command which is more general.\n\nLet’s do the replacement.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}}]},{"date":"2017-06-03","commitResults":[{"hash":"6ddeccc82b19d3c61ab68b6dc8249ed5aa4d86ac","messageTitle":"Logic: Create CommandHistory","messageBody":"Addressbook does not keep track of entered commands.\n\nThis makes it difficult for the user to trace commands entered\npreviously. In addition, users have to type out the whole command again\nshould they make a small typo in their commands entered into the\nsystem.\n\nAs a step towards implementing history functionality, let’s create\nthe class CommandHistory.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"c184e7351763bbd049b55d9a5b58c635d3f976c7","messageTitle":"Create HistoryCommand","messageBody":"Addressbook does not keep track of entered commands.\n\nThis makes it difficult for the user to trace commands entered\npreviously. In addition, users have to type out the whole command again\nshould they make a small typo in their commands entered into the\nsystem.\n\nAs a step towards implementing history functionality, let’s create\nthe class HistoryCommand.\n","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":6}}},{"hash":"567545ee8e951fc67db600f37f7820cb6c5b00e2","messageTitle":"Teach Parser to parse HistoryCommand","messageBody":"Addressbook does not keep track of entered commands.\n\nThis makes it difficult for the user to trace commands entered\npreviously. In addition, users have to type out the whole command again\nshould they make a small typo in their commands entered into the\nsystem.\n\nLet’s teach Parser to parse HistoryCommand to allow the user to see\nwhat he has entered previously.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"554e26f9a97b3323276e8ec30a628f502b04ec11","messageTitle":"UserGuide: Add History command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"ae5481905f5c735dd9f927474b75ff1bca7739c5","messageTitle":"DeveloperGuide: Include CommandHistory","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2017-06-09","commitResults":[{"hash":"c7710969266fa3887aff311d4bc05f93b5701f30","messageTitle":"PersonBuilder constructor: Change Person to ReadOnlyPerson","messageBody":"PersonBuilder\u0027s constructor takes in Person, which is more specialized\nthan ReadOnlyPerson.\n\nAs we can also copy the details of a person with ReadOnlyPerson, the\nconstructor is unnecessarily restrictive.\n\nLet’s change it to take in a ReadOnlyPerson instead.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"8d2ccd94e022622f950a5d5bca83b07b4f2ec3cd","messageTitle":"Update EditCommandTest to check equality using Model directly","messageBody":"The tests check for equality of the individual components of Model\n(AddressBook and FilteredList).\n\nThis can be simplified by checking for equality of the entire Model\ndirectly using ModelManager#equals().\n\nLet’s update EditCommandTest accordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":14}}},{"hash":"79bb60d09f1c2872be0ed291e109162986ca29d8","messageTitle":"Move EditCommandTest#createEditPersonDescriptor(ReadOnlyPerson)","messageBody":"This method is a helper method that creates an EditPersonDescriptor\nobject. EditPersonDescriptorBuilder also contains helper methods to\ncreate EditPersonDescriptor objects.\n\nThis causes inconsistency in the codebase as EditPersonDescriptorBuilder\nought to contain all necessary helper methods required to construct\nan EditPersonDescriptor object.\n\nLet’s move this method over to EditPersonDescriptorBuilder.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":18}}},{"hash":"7290079e5e3ef46ceff790253f8d00a73d5f9bff","messageTitle":"Add missing integration and hybrid tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":4}}}]},{"date":"2017-06-21","commitResults":[{"hash":"ac351cfa0111c4edb737875d1ad69254fe54f6f8","messageTitle":"LogicManagerTest: Remove repeated tests","messageBody":"LogicManagerTest tests all commands at integration test level.\n\nThese tests have already been covered in *CommandIntegrationTest.\n\nLet’s remove them.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":246}}},{"hash":"920e3f5b48fe93b0767d63e08c340bc2c6b5b651","messageTitle":"LogicManagerTest: Remove unused methods","messageBody":"After removing repeated tests from LogicManagerTest, some methods are\nnow unused.\n\nLet\u0027s remove them.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":184}}},{"hash":"e05d7e14797fd4fd004c742980134aee08a5d901","messageTitle":"LogicManagerTest: Remove Storage component","messageBody":"LogicManagerTest is an integration test for Logic, Model and Storage.\n\nSince the system tests cover Storage, it is unnecessary for\nLogicManagerTest to include Storage.\n\nLet’s remove the Storage component from LogicManagerTest, so that\nLogicManagerTest is an integration test for Logic and Model only.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":32}}},{"hash":"82b33c2dbf1367e310794d5c36391ea91e2cc625","messageTitle":"LogicManagerTest: Remove generic type name","messageBody":"Specifying the generic type name is unnecessary.\n\nLet’s replace it with a wildcard instead.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"5303863303cd39ab4c5f8cc15e386106c17160d1","messageTitle":"LogicManagerTest: Remove unnecessary test","messageBody":"LogicManagerTest has 2 tests testing for the same code path (verifying\nthat ParseException is thrown).\n\nThis is unnecessary. Let’s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":8}}},{"hash":"06a592eca49d0d181355753c7f97c6595537aef4","messageTitle":"LogicManagerTest: Place private methods after test methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":34}}},{"hash":"265c96ff581fc24f88c6d10a38d3d06ddb41a343","messageTitle":"LogicManagerTest: Rename test method","messageBody":"The current test method name does not reflect the equivalence class\nbeing tested.\n\nLet’s update the test method name accordingly, and rename the local\nvariable inside the test method to reflect the update.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"99bfbcef557690d7cc942a95f361f05380ad2935","messageTitle":"LogicManagerTest: Add test for CommandException thrown","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"81fc7600593f69143b957f67cb04995d7d71f4ef","messageTitle":"LogicManagerTest: Add successful test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"2a932f5be144dde36aad1c1e9100a2b222769034","messageTitle":"LogicManagerTest: Merge LogicManagerTest#execute_verifyHistory_success()","messageBody":"A separate test is created to verify the history.\n\nThis is unnecessary as we can verify the history in each test.\n\nLet’s remove LogicManagerTest#execute_verifyHistory_success() and test\nfor the history in each individual test.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":31}}},{"hash":"540862f623c58f94ce112f611c2a49484d23869f","messageTitle":"LogicManagerTest: Initialise object variables during declaration","messageBody":"Object variables `model` and `logic` are initialised in #setUp().\n\nThis is unnecessary as JUnit instantiates the class for each test,\nthus resetting instance variables after each test.\n\nLet’s initialise these object variables during declaration instead.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":9}}}]},{"date":"2017-06-26","commitResults":[{"hash":"a4bc9f8b32900dc0dfd43acf573c586c329e4b59","messageTitle":"Rename EditCommandTestUtil to CommandTestUtil","messageBody":"The constants declared in EditCommandTestUtil can be used by other\ncommand tests.\n\nLet\u0027s rename EditCommandTestUtil to a more generic name,\nCommandTestUtil.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":22}}},{"hash":"cc2b06cdcf78ec88b425fadd4470dc4e5a065627","messageTitle":"Extract constants from EditCommandParserTest to CommandTestUtil","messageBody":"Constants in EditCommandParserTest can be used by other command\ntests.\n\nLet\u0027s extract these constants from EditCommandParserTest to\nCommandTestUtil.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":19}}},{"hash":"c4e0a604808d195dcec7b7e933e6b0d275eec2e4","messageTitle":"AddCommand: Implement equals(Object) method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"b1ab21f8350f16616af46922255e7794f2798d0e","messageTitle":"Add tests for AddCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":0}}}]},{"date":"2017-06-28","commitResults":[{"hash":"16e31fc560bc8e444312af09a5eae209cc813d6a","messageTitle":"Implement equals(Object) for DeleteCommand \u0026 SelectCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"951ca32ca14f47e139a7167c2ac152f1751f6fe9","messageTitle":"Update visibility modifier of DeleteCommand \u0026 SelectCommand","messageBody":"Both target indices of DeleteCommand \u0026 SelectCommand are public.\n\nThis breaks the encapsulation of these classes.\n\nLet\u0027s change them to private. As DeleteCommandParserTest and\nSelectCommandParserTest no longer have access to the target indices\ndirectly, let\u0027s use DeleteCommand#equals(...) and\nSelectCommand#equals(...) to check that the target indices are correct.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2017-07-03","commitResults":[{"hash":"6c20a77fcda62a30f1431d9fc090cd10293eede6","messageTitle":"CommandBox: Reset style class upon editing text","messageBody":"CommandBox is highlighted red when the user presses enter with an\ninvalid command input in the CommandBox. The highlight is only reset\nwhen the user presses enter with a valid command input in the CommandBox.\n\nAs the highlight is meant to inform the user that he / she has entered\nan invalid input, there is no need for the highlight to persist after\nthe user has edited the text in CommandBox.\n\nLet\u0027s reset the highlight of the CommandBox the text in it is updated.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"1b6aa2091c5a48eaa1757ebc164d1099942b0c61","messageTitle":"Rename setStyleToIndicateCommandSuccess() to setStyleToDefault()","messageBody":"This method is no longer called when a command is successfully\nexecuted. Instead, it is called whenever the text field is edited.\n\nLet’s update the name of this method to reflect this behaviour.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2017-07-04","commitResults":[{"hash":"2a4b7aa165fc368eb95ddc87e3e374530cf26902","messageTitle":"Move UiManager#handleShowHelpEvent(…) to MainWindow","messageBody":"UiManager catches ShowHelpRequestEvent.\n\nShowHelpRequestEvent is handled by MainWindow, so it should be caught\nby MainWindow instead.\n\nLet’s move this method to MainWindow.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":7}}},{"hash":"481e58e9256c2ca5411d85e17d75c023d6316781","messageTitle":"Move UiManager#handleJumpToListRequestEvent(…) to PersonListPanel","messageBody":"UiManager catches JumpToListRequestEvent.\n\nJumpToListRequestEvent is handled by PersonListPanel, so it should be\ncaught by PersonListPanel instead.\n\nLet’s move this method to PersonListPanel.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":7}}},{"hash":"15cf4b14b80b91fc6d2259105cd88411849dbc33","messageTitle":"Update PersonListPanel#scrollTo(int) visibility modifier to private","messageBody":"This method is no longer called by classes other than itself.\n\nLet’s update its visibility modifier to private.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d725516f91920b256dcb7966b8b78ff37bb770f0","messageTitle":"Move UiManager#handlePersonPanelSelectionChangedEvent(…) to BrowserPanel","messageBody":"UiManager catches PersonPanelSelectionChangedEvent.\n\nPersonPanelSelectionChangedEvent is handled by BrowserPanel, so it\nshould be caught by BrowserPanel instead.\n\nLet’s move this method to BrowserPanel.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"be4b7fbe305992b86a4d3ab63bee6f65cbb7f770","messageTitle":"Update BrowserPanel#loadPersonPage(…) visibility modifier to private","messageBody":"This method is no longer called by classes other than itself.\n\nLet’s update its visibility modifier to private.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"175017ddff5c23826d3d5cac9fe2fb1a92b1e8d1","messageTitle":"Add ListElementPointer","messageBody":"The native ListIterator’s cursor does not point to an element.\nRather, it points in between elements. As a result, alternating\ncalls of ListIterator#next() and ListIterator#previous() return\nthe same element.\n\nThis behaviour is not suitable for implementing the functionality\nof allowing up and down buttons to return the previous and next\ninput respectively.\n\nAs a step towards allowing up and down buttons to get previous and\nnext input respectively, let’s create ListElementPointer.\nListElementPointer has an index that works as a pointer to an element\nin the list. This allows us to iterate through the list while\nproviding better code clarity.\n\nWe have tried to create a class that wraps around ListIterator, but\nit does not work well because the cursor still does not point to an\nelement.\n\nAlso, we have tried to create a PeekingListIterator(an extension\nof PeekingIterator [1]), in which we use peekNext() and peekPrevious()\nto get the next and previous elements accordingly. One of the ways\nis to override the next() and previous() methods such that they do\nnot return anything. However, this would violate the Iterator’s\nsemantics. Another way is to not override both methods, and simply\nignore the return values i.e we only access the next and previous\nelements by using peekNext() and peekPrevious() respectively.\nHowever, this isn’t intuitive to future developers who may wonder\nwhy we are ignoring the return values.\n\n[1]: http://google.github.io/guava/releases/21.0/api/docs/com/google/common/collect/PeekingIterator.html\n","fileTypesAndContributionMap":{"java":{"insertions":276,"deletions":0}}},{"hash":"389b2a177a1a671e69daa8fbd2153b6ae07f130d","messageTitle":"Teach Logic component to return the user input history","messageBody":"CommandBox has no way to access the user input history in Logic as\nCommandHistory’s visibility modifier is private.\n\nThis makes it impossible for CommandBox to retrieve what the user\nhas input previously.\n\nAs a step towards allowing up and down buttons to get the previous and\nnext input respectively, let’s teach the Logic component to return\nthe user input history in CommandHistory.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"5856b94e0c851d40fd0de5cb28593d400a96fd80","messageTitle":"Allow up and down buttons to get previous and next input respectively","messageBody":"The user is only able to see their previously typed commands through\nthe history command.\n\nThe user may need to access their previously typed commands quickly in\norder to fix a previous typo, or to reuse the input for another\nvariation.\n\nLet\u0027s add a function that allows users to retrieve the previous and\nnext input in the history by pressing the up and down arrow keys\nrespectively.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":131,"deletions":1}}},{"hash":"8af0d06c72c25b1868d2491bb7c8e239ec836266","messageTitle":"CommandBoxTest: Update existing test case","messageBody":"commandBox_handleKeyPress() no longer needs to create a local GuiRobot\nas the class already has a GuiRobot.\n\nLet’s remove the creation of the local GuiRobot in\ncommandBox_handleKeyPress().\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}},{"hash":"b404fa406bb23173f7ce9abb1cc016d35aeab33c","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":0}}},{"hash":"8dc5b6e49b781994f7309a83740a08af55cd18f5","messageTitle":"PersonUtil: Update getPersonDetails(...) visibility modifier to public","messageBody":"getPersonDetails(Person) visibility modifier is private.\n\nA future test will need this method (see next commit).\n\nLet’s change the visibility modifier to public.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e03ce4f16937da11ff9269d447f66c955ecbc7b9","messageTitle":"Add ParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":0}}}]},{"date":"2017-07-10","commitResults":[{"hash":"aa05ef5e084e0e99e4df40bec8dd06f25ef3d036","messageTitle":"UniqueTagList: Modify setTags(UniqueTagList) to setTags(Set\u003cTag\u003e)","messageBody":"Person#setTags(Set) constructs a UniqueTagList from the set of tags\npassed in. It then calls UniqueTagList#setTags(UniqueTagList),\nwhich then calls setAll(UniqueTagList#internalList).\n\nThis makes the construction of UniqueTagList unnecessary as no\nother properties of UniqueTagList are required here.\n\nLet’s teach UniqueTagList#setTags(UniqueTagList) to take in Set\ninstead, to avoid the unnecessary construction of UniqueTagList.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"ffe36a8c0e6abda38149f8b013bddd7c8b18b324","messageTitle":"AddressBook: Modify setTags(Collection\u003cTag\u003e) to setTags(Set\u003cTag\u003e)","messageBody":"AddressBook#resetData(ReadOnlyAddressBook) calls setTags(Collection),\nfollowed by a catch clause asserting that AddressBooks should not\nhave duplicate tags.\n\nThis makes the code unnecessarily long as there is a try-catch\nblock, where the catch block does not do anything significant.\n\nLet\u0027s modify setTags(Collection) to take in a Set instead. This\nmethod will call UniqueTagList#setTags(Set), which does not throw\nDuplicateTagException. Thus, this eliminates the need to catch it\nin AddressBook#setTags(Set), thus removing the unnecessary assertion.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":20}}},{"hash":"0ea22876167526b4058942a368fa0c8d080c5033","messageTitle":"UniqueTagList: Remove setTags(Collection\u003cTag\u003e)","messageBody":"This method is now unused.\n\nLet’s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":12}}},{"hash":"fa654d9636adc51cdc3e62afb166e91220de4862","messageTitle":"Combine both CommandTestUtil classes","messageBody":"There are two classes named CommandTestUtil, located in different\npackages.\n\nThere is no need for these classes to be separate as they both have the\nsame responsibilities.\n\nLet’s merge these classes.\n","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":119}}}]},{"date":"2017-07-11","commitResults":[{"hash":"9c6d89080e6671aee5e151659b473730eacc1616","messageTitle":"AddCommandIntegrationTest: Use CommandTestUtil methods","messageBody":"CommandTestUtil#assertCommandSuccess(...) and\nCommandTestUtil#assertCommandFailure(...) verify the content of the\nmodel. Therefore, these methods are suitable for doing verification\nin integration tests.\n\nAddCommandIntegrationTest does not use these methods for verification in\nits tests. The logic is inlined instead. This violates the DRY principle.\n\nLet\u0027s teach AddCommandIntegrationTest to use\nCommandTestUtil#assertCommandSuccess(...) and\nCommandTestUtil#assertCommandFailure(...).\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":17}}},{"hash":"aa8aeaf02f795944936f63ddcf0b1b18f07e6082","messageTitle":"ClearCommandTest: Use CommandTestUtil#assertCommandSuccess(...)","messageBody":"ClearCommandTest uses its assertCommandSuccess(...) to verify the\ntest results.\n\nAs CommandTestUtil has a similar method, ClearCommandTest should use\nit instead.\n\nLet’s remove ClearCommandTest#assertCommandSuccess(...) and teach\nClearCommand to use CommandTestUtil#assertCommandSuccess(...) instead.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":13}}},{"hash":"59fa74867986e3a2889d7ec761b1e92475f5d46e","messageTitle":"ListCommandTest: Use CommandTestUtil#assertCommandSuccess(...)","messageBody":"ListCommandTest uses its assertCommandSuccess(...) to verify the\ntest results.\n\nAs CommandTestUtil has a similar method, ListCommandTest should use\nit instead.\n\nLet’s remove ListCommandTest#assertCommandSuccess(...) and teach\nListCommand to use CommandTestUtil#assertCommandSuccess(...) instead.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":14}}},{"hash":"09cc03796fd832cab610ca3678bb499c740fe483","messageTitle":"DeleteCommandTest: Static import CommandTestUtil methods","messageBody":"DeleteCommandTest uses CommandTestUtil#assertCommandSuccess(...) and\nCommandTestUtil#assertCommandFailure(...)\n\nAs both methods are called multiple times in the class, we should\nstatic import them to make the code look shorter.\n\nLet’s static import these 2 methods.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"750613018859af887a9ff8e2c069196b2a1a87f8","messageTitle":"EditCommandTest: Static import CommandTestUtil methods","messageBody":"EditCommandTest uses CommandTestUtil#assertCommandSuccess(...) and\nCommandTestUtil#assertCommandFailure(...)\n\nAs both methods are called multiple times in the class, we should\nstatic import them to make the code look shorter.\n\nLet’s static import these 2 methods.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":8}}}]},{"date":"2017-07-17","commitResults":[{"hash":"054aa63ad898cd5e37267f6dff49c3cf6751b36a","messageTitle":"Rename Parser to AddressBookParser","messageBody":"Parser parses the commands specific to AddressBook application.\n\nIt should have a more specific name: AddressBookParser as it is doing\na specific task.\n\nLet’s rename Parser to a more specific name.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"402bcb01ec40c9c18435012b45997f89dd826842","messageTitle":"Add Parser interface","messageBody":"XCommandParsers have common behaviour. However, they are not linked\nby inheritance or interface.\n\nThis makes the code look unstructured.\n\nLet’s add Parser as an interface, with the XCommandParsers\nimplementing it.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":5}}},{"hash":"7e4d4ec1391519d95e116d30ada2f37f836c8a04","messageTitle":"Add CommandParserTestUtil","messageBody":"XCommandParserTests have similar helper methods to verify the success of\neach test case.\n\nFollowing the DRY principle, we should extract these helper methods into\na common class.\n\nLet’s create a CommandParserTestUtil, which is a utility class that\nhas these helper methods for verifying the success of\nXCommandParserTests.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"4fe4e2b7cc88803bb59343ff972c05a4332e6941","messageTitle":"AddCommandParserTest: Use helper methods in CommandParserTestUtil","messageBody":"AddCommandParserTest uses its own version of assertParseSuccess(...)\nand assertParseFailure(...)\n\nFollowing the addition of CommandParserTestUtil, there is no need for\nAddCommandParserTest to have its own code for verifying the correctness\nof the test cases.\n\nLet\u0027s teach AddCommandParserTest to use the helper methods from\nCommandParserTestUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":42}}},{"hash":"a7c50d6d951f8b7279cebe9b5f5c2907c7d4ae20","messageTitle":"DeleteCommandParserTest: Use helper methods in CommandParserTestUtil","messageBody":"Following the addition of CommandParserTestUtil, there is no need for\nDeleteCommandParserTest to have its own code for verifying the\ncorrectness of the test cases.\n\nLet\u0027s teach DeleteCommandParserTest to use the helper methods from\nCommandParserTestUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":13}}},{"hash":"6eb4e3f700b49d44b13a6dfc1c295863a4149db9","messageTitle":"EditCommandParserTest: Use helper methods in CommandParserTestUtil","messageBody":"EditCommandParserTest uses its own version of assertParseSuccess(...)\nand assertParseFailure(...)\n\nFollowing the addition of CommandParserTestUtil, there is no need for\nEditCommandParserTest to have its own code for verifying the correctness\nof the test cases.\n\nLet\u0027s teach EditCommandParserTest to use the helper methods from\nCommandParserTestUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":54}}},{"hash":"b29fd96927d9d5bcaa2e130c495ddcace6d4a2a6","messageTitle":"FindCommandParserTest: Use helper methods in CommandParserTestUtil","messageBody":"Following the addition of CommandParserTestUtil, there is no need for\nFindCommandParserTest to have its own code for verifying the correctness\nof the test cases.\n\nLet\u0027s teach FindCommandParserTest to use the helper methods from\nCommandParserTestUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":13}}},{"hash":"5266cc7c22509a53b75f9020876d9fd3b9638e79","messageTitle":"SelectCommandParserTest: Use helper methods in CommandParserTestUtil","messageBody":"Following the addition of CommandParserTestUtil, there is no need for\nSelectCommandParserTest to have its own code for verifying the\ncorrectness of the test cases.\n\nLet\u0027s teach SelectCommandParserTest to use the helper methods from\nCommandParserTestUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":13}}},{"hash":"cbc6571757d250295849622286c1d8bf7cf8d621","messageTitle":"Update DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-07-18","commitResults":[{"hash":"b1c5e49fad734f8b07c87178c3b3108fc6c8ee50","messageTitle":"Teach Person and ReadOnlyPerson to be observable","messageBody":"Person is not using *Property for its fields.\n\nThis makes Person unobservable.\n\nLet’s replace Person’s fields to use ObjectProperty, and let’s teach\nReadOnlyPerson to return the ObjectProperty fields.\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":20}}},{"hash":"23fd697b2f4ea2de1054cdee6bda7050d26891c9","messageTitle":"Import EasyBind","messageBody":"JavaFX does not provide API for binding the model and view easily.\n\nWe need to create an additional ObservableList to map the FilteredList\nin the ModelManager. Also, we have to ensure that the ObservableList\nis updated whenever the FilteredList is updated.\n\nLet’s import EasyBind which abstracts the implementation, allowing\nus to bind view and model with less work.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"75cbfa3804ff365646e903514282d9313da4300e","messageTitle":"PersonListPanel: Update ListView\u003cReadOnlyPerson\u003e to ListView\u003cPersonCard\u003e","messageBody":"PersonListPanel displays a list of ReadOnlyPersons stored in its ListView.\n\nThis can result in cases whereby the PersonListPanel contains a\nparticular person, however there is no corresponding PersonCard\ncontaining the person.\n\nSince Person is now observable, let’s update ListView\u003cReadOnlyPerson\u003e\nto ListView\u003cPersonCard\u003e, with each PersonCard observing the Person\nthat the card is displaying.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":34}}},{"hash":"6f8c65369437191e86cb3484308dc39a48e47dd8","messageTitle":"UniquePersonList: Remove unnecessary method call","messageBody":"UniquePersonList calls internalList#set(int, ReadOnlyPerson) when it\nupdates a person in the list. Previously, this call was necessary to\nupdate the UI, as PersonCard was not observing the Person object that\nit is displaying.\n\nThis method call is no longer needed as PersonCard is now observing\nthe Person object that it is displaying.\n\nLet’s remove the method call along with its comments.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"baa5988d5bcf9c0d95d3aca56e90ef19e42206e8","messageTitle":"PersonListPanelHandle: Update methods","messageBody":"PersonListPanel now has a ListView that stores PersonCard instead of\nReadOnlyPerson.\n\nPersonListPanelHandle however, still has methods that return\nReadOnlyPerson instead of PersonCards.\n\nLet’s update these methods accordingly.\n\nAlso, as a result of changing these methods, SelectCommandTest will\nbe verifying the equality of the PersonCards instead of the\nReadOnlyPersons. Let’s implement equals(Object) for PersonCard.\n","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":24}}}]},{"date":"2017-07-19","commitResults":[{"hash":"d532bbcbd55c287d472853cd60ff2091c123cd85","messageTitle":"TestUtil: Remove unused methods","messageBody":"These methods are unused.\n\nLet’s remove them.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":28}}},{"hash":"da8d7d41ff02ba6b2d3e5405460291db1b70d458","messageTitle":"TestUtil: Remove asList(T[])","messageBody":"asList(T[]) converts an array into a List.\n\nThis method is unnecessary as there’s a method in Java library\nArrays.asList(T[]) which achieves the same effect.\n\nLet’s update callers to call Arrays.asList(T[]) instead and remove\nasList(T[]).\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":13}}},{"hash":"f60bfca366e5edefbd3338d1d08c6ccda60c21fc","messageTitle":"TestUtil: Remove generateSamplePersonData()","messageBody":"generateSamplePersonData() returns a List of 8 Person objects. This\nmethod is only called once by XmlUtilTest, and only the first person\nis used.\n\nThere is no need to create 8 Person objects when only the first person\nis used. Furthermore, TypicalPersons also provides a List of Person\nobjects for purposes of testing, thus this portion of code in TestUtil\nis duplicate code as well.\n\nLet’s simplify XmlUtilTest to use a PersonBuilder to create a Person\nobject. This causes generateSamplePersonData to be unused, let’s remove\nit.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":36}}},{"hash":"38d9783502e452754791edd8d06a03388663df11","messageTitle":"TestUtil: Remove removePersonFromList(...)","messageBody":"removePersonFromList(Person[], Index) removes a Person in the array\nby converting it into an ArrayList for the removal to happen, followed\nby converting it back into an array. This method is only called by\nDeleteCommandTest.\n\nThese conversions make the code unnecessarily verbose.\n\nLet’s teach DeleteCommandTest to use an ArrayList\u003cPerson\u003e instead of\nPerson[]. This results in removePersonsFromList(Person[], Index) to be\nunused, let’s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":38}}},{"hash":"febbaece598492c54445a579d72a9629c0245d2d","messageTitle":"TestUtil: Remove addPersonsToList(...)","messageBody":"addPersonsToList(Person[], Person...) adds Person objects in the array\nby converting it into an ArrayList for the addition to happen, followed\nby converting it back into an array. This method is only called by\nAddCommandTest.\n\nThese conversions make the code unnecessarily verbose.\n\nLet’s teach AddCommandTest to use an ArrayList\u003cPerson\u003e instead of\nPerson[]. This results in addPersonsToList(Person[], Person...) to be\nunused, let’s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":26}}},{"hash":"b4a85a2092c808a392041332ab4da3dd2d0d5140","messageTitle":"TestUtil: Inline compareCardAndPerson(...)","messageBody":"TestUtil#compareCardAndPerson(PersonCardHandle, ReadOnlyPerson) only\ncalls a method inside PersonCardHandle.\n\nCallers of this method can simply call PersonCardHandle\u0027s method\ndirectly on its own.\n\nLet\u0027s inline TestUtil#compareCardAndPerson.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":10}}},{"hash":"4fd44ae9c6b9535dade808b8ff80478ad09bd088","messageTitle":"TestUtil: Extract createDataFileWithData(T, String) to TestApp","messageBody":"createDataFileWithData(T, String) is only used by TestApp.\n\nIt’s unnecessary to place this method in TestUtil.\n\nLet’s extract it to be a private method in TestApp.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":13}}},{"hash":"286991add3fe9026070a692c6e98ca50814263d3","messageTitle":"TestUtil: Update access modifier of SANDBOX_FOLDER","messageBody":"Constant SANDBOX_FOLDER has public access modifier even though it is\nonly called within the class.\n\nThis unnecessarily exposes it to other classes.\n\nLet’s change its access modifier to private.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8e89baa73572ebe03ef336ba52eda33cdbb962e3","messageTitle":"TestUtil: update header comments for getFilePathInSandboxFolder(String)","messageBody":"The header comments are missing descriptions for both the parameter and\nreturn value.\n\nThis makes the @param and @return tags useless.\n\nLet’s remove these tags and update the header comments to make it more\ndescriptive.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"e068ad1a2f2849a053fc9dfd98f53e534a4519a3","messageTitle":"TestUtil: Move assertThrows(...) to Assert","messageBody":"TestUtil contains assertThrows(...) and\ngetFilePathInSandboxFolder(String). Both methods are doing things that\nare unrelated to each other.\n\nThis makes TestUtil a class with low cohesion.\n\nLet’s create a new class Assert and move assertThrows(...) into it.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":17}}}]},{"date":"2017-07-20","commitResults":[{"hash":"f9c27cf45b32ebb5bb2dcfb2cc04516dcc0e5360","messageTitle":"TypicalPersons: Make all methods and fields static","messageBody":"TypicalPersons is a utility class that creates preset Persons for tests\nto use. Some methods and fields are non-static.\n\nThis makes it troublesome for test classes to access these preset\nPersons as they have to create a TypicalPersons object prior to\naccessing the Person objects.\n\nLet\u0027s make all methods and fields in TypicalPersons to be static. Also,\nto prevent state leaks between tests, let’s change these methods and\nfields to return ReadOnlyPerson instead of Person, as ReadOnlyPerson\ncannot be modified.\n","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":100}}},{"hash":"1b97737703af291734edfb0af2f1b307aad6eb39","messageTitle":"TypicalPersons: Remove getTypicalPersons()","messageBody":"getTypicalPersons() return an array of ReadOnlyPersons.\n\nThis method is simple enough and can be converted to a static field.\n\nLet’s remove getTypicalPersons() and convert it to be a static field.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":21}}},{"hash":"d975164a0286ecf736e205edf4dd59369ffa14e6","messageTitle":"TypicalPersons: Add private constructor","messageBody":"TypicalPersons is a utility class that is not meant to be constructed.\n\nWithout a private constructor, other classes may accidentally create\ninstances of TypicalPersons.\n\nLet’s add a private constructor to prevent other classes from creating\ninstances of TypicalPersons.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2017-07-21","commitResults":[{"hash":"f1141e4254c4d18bb8b4468496a4c565c4c4a4b7","messageTitle":"PersonListPanelHandle: Update getPersonCardHandle(int) access modifier","messageBody":"getPersonCardHandle(int) is private.\n\nOther classes are unable to call this method.\n\nAs part of preparing to remove getCard(int) in future commits, let’s\nupdate getPersonCardHandle(int) access modifier to public.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"04a675ffa421de7792897d8152e43aad819ec45e","messageTitle":"PersonListPanelHandle: Update getSelectedCard()","messageBody":"getSelectedCard() returns an Optional\u003cPersonCard\u003e.\n\nTests should not directly interact with Node objects such as PersonCard\nas it breaks the encapsulation of the PersonCard object.\n\nLet\u0027s rename getSelectedCard() to getHandleToSelectedCard(), and update\nit to return PersonCardHandle instead of PersonCard.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":14}}},{"hash":"09f9afe69c0739776512b9d0b274e33159fdc176","messageTitle":"PersonListPanelHandle: Remove getCard(int)","messageBody":"getCard(int) returns a PersonCard.\n\nTests should not directly interact with Node objects such as PersonCard\nas it breaks the encapsulation of the PersonCard object.\n\nLet\u0027s remove getCard(int).\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":14}}},{"hash":"6ab4a04a0beabd3e1e5aea114ffbdce4759e1c16","messageTitle":"Add UndoableCommand and update some commands to extend it","messageBody":"All commands extend Command.\n\nThis disallows us from identifying which commands can be reversed.\n\nLet’s create UndoableCommand and update the relevant commands to\nextend it.\n\nAlso, we implemented the Template Pattern for UndoableCommand#execute()\nwhich ensures that every command that extends UndoableCommand will\nautomatically call saveAddressBookSnapshot() when execute() is called\nto facilitate the undo redo mechanism. Classes that inherits from\nUndoableCommand will have to override executeUndoableCommand() instead\nof execute() as a result.\n","fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":8}}},{"hash":"b77644134e519c27db2aeb393b3cd73460b340f0","messageTitle":"Add UndoRedoStack","messageBody":"There are no data structure to store UndoableCommands to be undone\nand redone.\n\nThis implies that we are unable to undo and redo previously executed\ncommands.\n\nAs part of implementing the undo and redo features, let’s add\nUndoRedoStack to store previously executed commands.\n","fileTypesAndContributionMap":{"java":{"insertions":325,"deletions":0}}},{"hash":"81ea6b54680a81a96f1472608d71f989add0ffd4","messageTitle":"LogicManager: Add field UndoRedoStack","messageBody":"LogicManager is in charge of managing the execution of the user input.\n\nLet’s add UndoRedoStack as a field in LogicManager, so that it can\nmanage the adding of user input into the stack.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"60b533686699eaf59496d060a252b240dcbb8bbb","messageTitle":"Command#setData(...): Add UndoRedoStack parameter","messageBody":"setData takes in Model and CommandHistory, which stores the list of user input.\n\nLet\u0027s teach setData(Model, CommandHistory) to take in UndoRedoStack\nas a parameter as well. This removes the need to parse the user input\nagain, making it easier to implement the undo and redo commands.\n\nLet’s change setData(Model, CommandHistory) to\nsetData(Model, CommandHistory, UndoRedoStack).\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":12}}},{"hash":"19715700d917f66c9b037ed23888138247cbe22f","messageTitle":"Add UndoCommand \u0026 RedoCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":223,"deletions":2}}},{"hash":"d59c5dbbec0bf909a46b7539fa32e6efa6f0c90e","messageTitle":"Teach AddressBookParser to parse UndoCommand and RedoCommand","messageBody":"LogicManager passes the user input to AddressBookParser for parsing.\n\nAddressBookParser does not know how to parse “undo” and “redo”.\n\nTo finish implementing the undo and redo features, let’s teach\nAddressBookParser to parse UndoCommand and RedoCommand.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"1f4433849895051c126204ddad4c3f43504c977f","messageTitle":"Update User Guide and Developer Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":54,"deletions":1}}}]},{"date":"2017-08-04","commitResults":[{"hash":"c9eeff4cda88ff513d3e56763640bd15d0622db9","messageTitle":"AddressBookGuiTest: Shift EventsCenter#clearSubscribers()","messageBody":"EventsCenter#clearSubscribers() is called in the method annotated by\n@Before.\n\nThis can cause bugs as the last test class that inherits from\nAddressBookGuiTest may subscribe to EventsCenter in the last test case,\nbut it will not be cleared, thereby causing a state leak.\n\nLet’s shift this method call to the method annotated by @After instead.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-08-05","commitResults":[{"hash":"62de04adea4d5dcd2d065923156ca02b5a24a9a4","messageTitle":"Add EventsCollectorRule","messageBody":"Tests that use EventsCollector are not calling\nEventsCenter#clearSubscribers().\n\nThis causes a state leak between tests\nas EventsCenter is a static class, and the EventsCollector object\nregisters itself to the EventsCenter to receive events.\n\nLet’s add EventsCollectorRule which properly tears down the\nEventsCollector object, thus preventing state leak between tests.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"9615a54d6bc5178bafa7d151d1268d14c8ab0181","messageTitle":"Update tests to use EventsCollectorRule","messageBody":"Tests that use EventsCollector are not calling\nEventsCenter#clearSubscribers().\n\nThis causes a state leak between tests\nas EventsCenter is a static class, and the EventsCollector object\nregisters itself to the EventsCenter to receive events.\n\nLet’s update tests to use EventsCollectorRule which properly tears down\nthe EventsCollector object, thus preventing state leak between tests.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":20}}},{"hash":"f6c7ee9c68900dacbeccd5a8b393519ea22dd313","messageTitle":"Nest EventsCollector in EventsCollectorRule","messageBody":"EventsCollector exists as a separate class even though it is only used\nby EventsCollectorRule.\n\nEventsCollector is a test utility class which should only be used in\ncontext of EventsCollectorRule to ensure that EventsCollector objects\nare properly torn down after they are initialised.\n\nLet’s refactor EventsCollector by nesting it in EventsCollectorRule.\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":58}}},{"hash":"587fe5296d66ea237c10ccf842ef7021144d5691","messageTitle":"TypicalPersons: Update static constant to getter method","messageBody":"TypicalPersons#TYPICAL_PERSONS is a static constant.\n\nThis implies that there may be a possible state leak between tests if\nTypicalPersons#TYPICAL_PERSONS is updated.\n\nLet’s update this constant to become TypicalPersons#getTypicalPersons()\ninstead which returns a new array every time this method is called.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":18}}},{"hash":"0a2533dc038d37a98eaac2b9eebbc948f37b604f","messageTitle":"BrowserPanel: Update string constants","messageBody":"The existing URL that we use will eventually be morphed into another URL\nby Google after a short while.\n\nThis complicates testing as we do not know when will the morphing of URL\nbe done, thus if we do the test verification after the URL is morphed,\nthe test will fail.\n\nLet’s update the string constants to be equal to the morphed URL.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}}]},{"date":"2017-08-07","commitResults":[{"hash":"4492ae125b86b3364b93e0b2330852cd647ea591","messageTitle":"BrowserPanelHandle: Post WebViewLoadedEvent when WebView is done loading","messageBody":"There is no way to determine whether the BrowserPanel’s WebView is done\nloading.\n\nThis may lead to scenarios whereby BrowserPanelTest tries to verify\nthe expectedUrl before the WebView is done loading, which causes the\ntest to fail.\n\nLet’s teach BrowserPanelHandle to post WebViewLoadedEvent when the\nBrowserPanel’s WebView is done loading, so that BrowserPanelTest can\ncatch the event and do the test verification afterwards.\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"78aaac494729844d8bf23fc7f13f92d0dc6b377d","messageTitle":"Upgrade Checkstyle to version 8.1","messageBody":"We are using an older version of Checkstyle version (v. 7.2).\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":0,"deletions":8},"xml":{"insertions":7,"deletions":8}}},{"hash":"c3ed55ac23aa095f0a4176daaf9949d3a7c302b6","messageTitle":"GuiRobot: Update visibility modifiers of constants","messageBody":"The visibility modifiers of these constants are public.\n\nThere is no need for these constants to be public as no other classes\nare using them.\n\nLet’s update the visibility modifiers of these constants to be private.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1619f955c2b13cb9f3399e301d9c809f881e90a7","messageTitle":"AddressBookGuiTest: Move assertListSize(int) to GuiTestAssert","messageBody":"AddressBookGuiTest is a super class that sets up the test environment\nfor subclasses.\n\nThere is no need for it to concern itself with test verification methods\n(a violation of Single Responsibility Principle).\n\nLet’s move assertListSize(int) to GuiTestAssert instead.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":12}}},{"hash":"81fc057bcc9b895956d3999a845dfa601944f0eb","messageTitle":"AddressBookGuiTest: Move assertResultMessage(String) to GuiTestAssert","messageBody":"AddressBookGuiTest is a super class that sets up the test environment\nfor subclasses.\n\nThere is no need for it to concern itself with test verification methods\n(a violation of Single Responsibility Principle).\n\nLet’s move assertResultMessage(String) to GuiTestAssert instead.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":26}}},{"hash":"3c6ac6deb5126cf5144eae2679faa7282c7dcef2","messageTitle":"AddressBookGuiTest: Move raise(BaseEvent) to EventsUtil","messageBody":"AddressBookGuiTest is a super class that sets up the test environment\nfor subclasses.\n\nThere is no need for it to concern itself with helper methods used by\nthe test classes (a violation of Single Responsibility Principle).\n\nLet’s move raise(BaseEvent) to EventsUtil instead.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"d9cf8b226403db374c60fb6956077e6f10d6be4a","messageTitle":"EventsUtil: Update method names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":14}}},{"hash":"910b15a57605b6ec69d208d1c9c592914489eb89","messageTitle":"PersonListPanelHandle: Remove unused method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"928eeef74a8fea097d9c2822f08e34d666fdfb6b","messageTitle":"PersonListPanelHandle: Add isAnyCardSelected()","messageBody":"To check whether a card is selected, the caller has to call\nPersonListPanelHandle#getHandleToSelectedCard()#isPresent().\n\nThis is not as intuitive as creating a method that returns true if a\ncard is selected.\n\nLet’s add isAnyCardSelected() which returns true if a card is selected,\nand let’s update callers to call this method instead.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"bfa08bd0fcd4e4800899d62a8c72ec423cf3f29d","messageTitle":"PersonListPanelHandle: Update return type of getHandleToSelectedCard()","messageBody":"getHandleToSelectedCard() is a test method that returns an\nOptional\u003cPersonCardHandle\u003e. If no card is selected, it returns an\nOptional#empty().\n\nSince it is a test method, we expect callers to only call it when a card\nis selected. As such, we do not need to account for the case when no\ncards are selected.\n\nLet’s update the return type of getHandleToSelectedCard() to\nPersonCardHandle.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"f357f1a7af8deca20aad8e26ed77c63a2b106991","messageTitle":"EditCommand: Update executeUndoableCommand() return value","messageBody":"executeUndoableCommand() returns the String value of the person to be\nedited.\n\nThis is wrong as it should return the String value of the edited\nperson instead. The tests still pass as the person to be edited\nis not replaced; it\u0027s values are updated to reflect the edited values.\n\nAs part of simplifying the logic of\nUniquePersonList#updatePerson(ReadOnlyPerson, ReadOnlyPerson), let\u0027s\nupdate executeUndoableCommand() to return the String value of the\nedited person.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"a5cb7900ae929a81f59f15f81a9c22eebfe8543e","messageTitle":"UniquePersonList: Simplify logic of updatePerson(...)","messageBody":"This method retrieves the person in the list to be updated, and calls\nPerson#resetData(ReadOnlyPerson) to update the values of that person.\n\nWe do not need to retrieve the person in the list to be updated, to\nupdate the list accordingly.\n\nLet’s simplify the logic by setting the updated Person object in place\nof the person to be updated.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}}]},{"date":"2017-08-08","commitResults":[{"hash":"db3eeaba34c043c5465a07f94962ecb6ecd181e4","messageTitle":"UniquePersonList: Rename updatePerson(...) to setPerson(...)","messageBody":"Following the previous commit, the target person is no longer updated.\nRather, the editedPerson is being set in the target person\u0027s place.\n\nLet\u0027s rename updatePerson(ReadOnlyPerson, ReadOnlyPerson) to\nsetPerson(ReadOnlyPerson, ReadOnlyPerson) to better reflect what it is\ndoing.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}},{"hash":"895430f4c9434c980cf6ed148e0ad36e37c5c5c2","messageTitle":"Person: Remove resetData(ReadOnlyPerson)","messageBody":"This method is now unused after the previous commit.\n\nLet’s remove it.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":13}}},{"hash":"bd0b938e532251fc796b043a778ca30052e389a4","messageTitle":"TypicalPersons: Remove loadAddressBookWithSampleData(AddressBook)","messageBody":"getTypicalAddressBook() and loadAddressBookWithSampleData(AddressBook)\nare similar methods. The former returns an AddressBook with the content\nof the preset Persons in TypicalPersons, while the latter appends the\ncontent of the preset Persons into the original content of the\nAddressBook passed in.\n\nNo callers require the appending functionality, and they can call\ngetTypicalAddressBook() instead.\n\nLet’s remove loadAddressBookWithSampleData(AddressBook).\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":10}}},{"hash":"b1eab19871123c8df33e5436dae0d0b9ad2a543a","messageTitle":"TypicalPersons: Write header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"49cc710c3122ea00b61b0bcf9604a8ac9075c562","messageTitle":"TypicalPersons: Remove defensive copy in getTypicalAddressBook()","messageBody":"getTypicalAddressBook() calls ab.addPerson(new Person(person)).\n\nThis is unnecessary as AddressBook performs a defensive copy when\ncalling addPerson(ReadOnlyPerson).\n\nLet’s remove the defensive copy in getTypicalAddressBook().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"d53434c2fe10adc73bb0ac2bd7ee0065eda9925f","messageTitle":"TypicalPersons: Move Index constants to TypicalIndexes","messageBody":"TypicalPersons contain Index constants.\n\nThis violates Single Responsibility Principle as TypicalPersons should\nonly contain constants and helper methods pertaining to Person objects.\n\nLet’s add TypicalIndex and move the Index constants to this new class.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":27}}},{"hash":"0126a8a1f78b6122ca7936fda6fde7ac79cc61ac","messageTitle":"TypicalPersons: Update getTypicalPersons()’s return type","messageBody":"getTypicalPersons() return an array of ReadOnlyPerson.\n\nSome callers require the values to be stored in a List instead of an\narray. As such, they have to manually convert it to a List.\n\nLet’s teach TypicalPersons to return a List\u003cReadOnlyPerson\u003e instead.\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":17}}},{"hash":"50d641d033139583735f0c7fd2d00764c7ac9f3b","messageTitle":"MainApp: Update version number","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-08-10","commitResults":[{"hash":"60753179a8875fd4b2af4da7ed43185284e210b7","messageTitle":"Model: Remove updateFilteredListToShowAll()","messageBody":"Model has 2 methods to update the filtered list.\nupdateFilteredListToShowAll() displays all persons in the filtered list,\nwhile updateFilteredPersonList(Predicate\u003cReadOnlyPerson\u003e) displays\nthe persons that matches the predicate.\n\nupdateFilteredListToShowAll() is redundant as we can pass in a\nPredicate that always return true to\nupdateFilteredPersonList(Predicate\u003cReadOnlyPerson\u003e) to cause it to\ndisplay all persons.\n\nLet’s remove updateFilteredListToShowAll().\n\nEven though we can pass in a null pointer to display all persons as\nthis is the way that FilteredList is implemented, however we chose to\npass in a lambda expression \"(unused) -\u003e true\" to display all persons.\nThis is because null can be a result of programming errors and using a\nnull pointer makes it harder to differentiate whether it was\nintentional for the list to display all persons, or whether it was a\nresult of programming errors.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":20}}}]},{"date":"2017-08-12","commitResults":[{"hash":"c10a72a792ba791eb6898c69f4cce4584ea60488","messageTitle":"AppStateAsserts: Resolve browser loading race condition","messageBody":"BrowserPanel’s WebView takes time to be loaded.\n\nThis causes a race condition as the verification of the browser’s\nURL may happen before the browser was successfully loaded, therefore\ncausing the test to fail.\n\nLet’s add a boolean variable isWebViewLoaded to BrowserPanelHandle.\nThis variable will be updated to true when a new web page is loaded.\nIf AppStateAsserts is expecting a new web page to be loaded, it will\nwait until isWebViewLoaded equals true before verifying that the\nbrowser’s URL is changed.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":5}}},{"hash":"c4ea7e5a2102220453eb3bd1c2a5577017062d8a","messageTitle":"Remove WebViewLoadedEvent","messageBody":"We have 2 ways to notify other classes that the WebView has been\nsuccessfully loaded.\n\nThere is no need to have 2 ways to notify other classes that the WebView\nhas been successfully loaded; having 1 way of doing so is sufficient.\n\nLet’s remove the posting of WebViewLoadedEvent in BrowserPanelHandle\nand let’s remove WebViewLoadedEvent too.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":25}}}]},{"date":"2017-08-14","commitResults":[{"hash":"f01c17dbb281044c6c3bebc26152cb25ad4869da","messageTitle":"PersonListPanelHandle: Fix logic error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"a951b97f02d9b827c52d1047fb93c3e534051215","messageTitle":"BrowserPanel: Fix GUI update not running on JavaFX thread","messageBody":"loadPage(String) must run on the JavaFX thread.\n\nThe current implementation doesn’t ensure that this method runs on the\nJavaFX thread.\n\nLet’s update the method to ensure that this method runs on the JavaFX\nthread.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"e771b11af6b33858c937e84123c86762d3810c3c","messageTitle":"StatusBarFooter: Fix GUI update not running on JavaFX thread","messageBody":"setSyncStatus(String) and setSaveLocation(String) must run on the\nJavaFX thread.\n\nThe current implementation doesn’t ensure that these methods run on the\nJavaFX thread.\n\nLet’s update them to ensure that they run on the JavaFX thread.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"dbb2a6af08b951ac2878248a763e4ebc9d24c783","messageTitle":"ResultDisplay: Fix GUI update not running on JavaFX thread","messageBody":"Setting a new value to be displayed in ResultDisplay must run on the\nJavaFX thread.\n\nThe current implementation doesn’t ensure that it runs on the JavaFX\nthread.\n\nLet’s update it to ensure that it runs on the JavaFX thread.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2017-08-19","commitResults":[{"hash":"114b560c07314476a49b42f4e10721b9a1bf3ced","messageTitle":"DeleteCommandSystemTest: Add test verification methods","messageBody":"The test verification methods in AppStateAsserts is flexible and caters\nfor all the tests.\n\nThis causes these methods to be ambiguous concerning what exactly is\nbeing tested. For example, the header comments of\nassertCommandSuccess(...) only tells us that “the GUI components display\nwhat we expected”, which is ambiguous.\n\nLet’s shift the test verification methods from AppStateAsserts to\nDeleteCommandSystemTest and custom tailor it to suit the DeleteCommand,\nso that we do not have to pass in as many boolean flags to these\nmethods, and so that developers can easily see what is being tested.\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":101}}}]},{"date":"2017-08-20","commitResults":[{"hash":"49694c6745534c76106a6913484656ff372b0bfc","messageTitle":"AddressBookSystemTest: Extract setup methods","messageBody":"AddressBookSystemTest is getting bloated and its\u0027 responsibility begins\nto become unclear.\n\nThis violates SRP.\n\nLet\u0027s extract setup methods into new classes, so that the\nresponsibility of AddressBookSystemTest is solely to provide helper\nmethods for tests to use.\n","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":56}}},{"hash":"d7b44b25934b2dba7a7bfdf7006d3dc2289856bb","messageTitle":"ClockRule: Improve verification","messageBody":"ClockRule only injects a fixed clock at the start of each test method.\nSome test methods do multiple tests i.e. execute multiple commands,\nwhich implies that the status bar\u0027s timing is always being verified\nwith the same timing.\n\nThis causes the testing of the status bar\u0027s timing to be insufficient\nas we are only effectively testing that the first test updates the\nstatus bar\u0027s timing correctly.\n\nLet\u0027s add a method in ClockRule that updates the injected clock to the\ncurrent time, and let\u0027s teach DeleteCommandSystemTest to call this\nmethod whenever a test is executed.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2017-08-21","commitResults":[{"hash":"ab3df4f6a35870692acbabd282ff6dc0acf5d64b","messageTitle":"Delete AppStateAsserts","messageBody":"AppStateAsserts contains test verification methods.\n\nAs the responsibility of AddressBookSystemTest is to provide helper\nmethods for tests to use, the test verification methods should belong\nto AddressBookSystemTest.\n\nLet\u0027s move the test verification methods from AppStateAsserts to\nAddressBookSystemTest. This makes AppStateAsserts redundant, let\u0027s\ndelete it.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":66}}},{"hash":"1df9e961534b9239cd1d9688d51077af52fdd771","messageTitle":"AddressBookSystemTest: Add test verification helper method","messageBody":"The browser panel is only updated if and only if the selected card in\nthe person list panel is changed.\n\nIt is unnecessarily tedious for test classes to call both methods\nseparately to check that both the browser panel and the person list\npanel has changed. For e.g., DeleteCommandSystemTest has to call both\ngetBrowserPanel().isUrlChanged() and\ngetPersonListPanel().isSelectedPersonCardChanged().\n\nLet\u0027s add helper methods in AddressBookSystemTest\nassertBrowserUrlAndSelectedCardChanged() and\nassertBrowserUrlAndSelectedCardUnchanged(). These methods will then\ncall the relevant methods in BrowserPanelHandle and\nPersonListPanelHandle to perform the test verifications.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":16}}},{"hash":"752be46b083f08a7b147ad4a9e05059154fb1c4c","messageTitle":"AddressBookSystemTest: Add test execution and verification method","messageBody":"All tests will have to verify that the command box, result display box\nand model are correct. These verifications are repeated in\nDeleteCommandSystemTest. When we implement future tests, we foresee\nthese verifications will be repeated again.\n\nThis violates DRY principle.\n\nLet\u0027s extract these common checks as a helper method in\nAddressBookSystemTest, so that DeleteCommandSystemTest and future tests\ndo not have to repeat the same code.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":25}}},{"hash":"759b7b27bdb45d642c47afce8598a30b8480f4a2","messageTitle":"AddressBookSystemTest: Add CommandBox’s style verification","messageBody":"CommandBox\u0027s style is not verified in tests.\n\nThis check should be included to ensure thoroughness of the test\nverification.\n\nLet’s add methods to verify that the CommandBox\u0027s style is as expected.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"18b5566e8269e4e6e136deebd19f066d03aef10f","messageTitle":"DeleteCommandSystemTest: Remove assertDeleteCommandSuccess(...)","messageBody":"assertDeleteCommandSuccess(...) and assertCommandSuccess(...) achieve\nroughly the same functionality.\n\nThis results in both methods having similar header comments, making it\nhard to distinguish the difference between the methods.\n\nLet\u0027s inline assertDeleteCommandSuccess(...) and extract parts of the\ncode into a helper method.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":14}}},{"hash":"89fcc52287583aa8f8fdb6948cfc6c6a05bd4fb3","messageTitle":"AddressBookSystemTest: Improve test verification","messageBody":"assertSelectedCardChange() only verifies that the selected card is\ndifferent from the card that was remembered previously.\n\nThis test verification passes even though the incorrect card may be\nselected.\n\nLet’s teach assertSelectedCardChange() to accept a new parameter Index\nexpectedSelectedCardIndex, so that this method is able to verify\nthat the correct card has been selected.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":15}}},{"hash":"d40057bc8210a3b60c7b46e53ca25df3b70599eb","messageTitle":"AddressBookSystemTest: Update verifyApplicationStartingStateIsCorrect()","messageBody":"This method verifies that the starting state of the application is\ncorrect through the use of assertions.\n\nThe method name should be updated to\nassertApplicationStartingStateIsCorrect() to better reflect what it is\ndoing.\n\nLet’s update the method name and the header comments accordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"e71aaf14d195d2c004b2c7b36325aad2c72d6848","messageTitle":"AddressBookSystemTest: Remove typo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"92a3c9ebda1abeef0107d84aded48cfa81baf61a","messageTitle":"AddressBookSystemTest#getTestApp(): Update access modifier to protected","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-08-24","commitResults":[{"hash":"2a1100736769dcb0b9edd95ba3d28a1df152fe44","messageTitle":"AddressBookSystemTest: Update header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2017-08-26","commitResults":[{"hash":"4002c7ae3f3eebdedc5651cc9bc541c904dff08a","messageTitle":"TestApp#getModel(): Return actual model","messageBody":"This method returns a defensive copy of the model.\n\nThis isn’t an exact copy of the model as the ModelManager’s constructor\ninitialises the FilteredList to show all persons, even though the\noriginal model’s FilteredList may not be showing all persons.\n\nAs there is no way to make a defensive copy of the model, let’s return\nthe original model instead.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}}]},{"date":"2017-08-27","commitResults":[{"hash":"5bdfdc9d9b6a333c5edd06e130264873a5879399","messageTitle":"AddressBookSystemTest: Wait for browser to load after command execution","messageBody":"Test classes have to call\nWebViewUtil#waitUntilBrowserLoaded(BrowserPanelHandle) whenever a\ncommand that causes the browser to load a new page is executed.\n\nThis causes code repetition when other test classes are implemented.\n\nLet’s shift this method call to executeCommand(String), so that this\nmethod only returns after the browser has loaded.\n\nAlso, let’s enhance the concurrency check so that\nWebViewUtil#waitUntilBrowserLoaded(BrowserPanelHandle) does not have to\nmanually reset the boolean concurrency variable.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":14}}},{"hash":"a88eb6f91b7847f0e2bbed3a39538a78f048ef58","messageTitle":"AddressBookSystemTest: Add missing wait for browser to load","messageBody":"When TestApp is initialised, the default browser url page is loaded.\n\nThere is no wait to ensure that this page is loaded before\nassertApplicationStartingStateIsCorrect() is called. This causes a race\ncondition: if the page has not been successfully loaded before\nassertApplicationStartingStateIsCorrect(), this assertion method will\nfail.\n\nLet\u0027s teach AddressBookSystemTest to wait for the browser to load\nbefore calling assertApplicationStartingStateIsCorrect().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"553a75bb5867cd66a12e1e8fd63ce4f767beac29","messageTitle":"AddressBookSystemTest: Update application’s clock on command execution","messageBody":"Test classes have to update the application’s clock after each command\nhas been executed. In DeleteCommandSystemTest, the update is called in\nboth assertCommandSuccess(...) and assertCommandFailure(...).\n\nThis leads to a lot of code repetition when other system tests are\nimplemented, as they will have to update the clock in their own\nimplementations of assertCommandSuccess(...) and\nassertCommandFailure(...).\n\nLet’s update executeCommand(String) to update the application’s clock\nimmediately before a command is executed so that test classes do not\nhave to update it.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2017-08-28","commitResults":[{"hash":"1f60054e8af483caeb5d8ae6dd2eb0caa63757ed","messageTitle":"Tests: Update helper methods to throw unchecked Exceptions","messageBody":"Helper methods in tests throw checked Exceptions.\n\nAs tests are not expected to handle checked Exceptions, it is\nunnecessary for helper methods to throw checked Exceptions.\n\nLet\u0027s update these helper methods to throw unchecked Exceptions\ninstead.\n\nIf tests call methods in the main code base that throw checked\nexceptions, they do not have to wrap the code around a try-catch block\nto rethrow an unchecked exception. This is because it makes the code\nunnecessarily longer. The purpose of this PR is to stop the throwing\nof checked exceptions from propagating, causing the tests and helper\nmethods to need to throw them as well.\n","fileTypesAndContributionMap":{"java":{"insertions":297,"deletions":224}}}]},{"date":"2017-08-29","commitResults":[{"hash":"2415b605e3a8ebb92c636cc85ee66f83a52b67cd","messageTitle":"AddressBookSystemTest: Rename command box verification methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"3263209f1c6f3e03f620b67cbe21f7f90d371fa7","messageTitle":"Convert SelectCommandTest to SelectCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":70}}},{"hash":"003bac5e67d26a19472e643a6f1fc1512ac83956","messageTitle":"SelectCommandSystemTest: Add additional tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":9}}},{"hash":"bd9035de414ea669a7871932d2940c310aaae3b9","messageTitle":"SelectCommandSystemTest: Add tests involving filtering","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":8}}},{"hash":"8f4bb16d4087e0e0882a3210d0e4535a43543ab1","messageTitle":"DeleteCommandSystemTest: Update assertCommandFailure(...)","messageBody":"assertCommandFailure(...) creates a defensive copy of the TestApp\u0027s\nModel.\n\nThis is unnecessary as TestApp#getModel() returns a defensive copy\nof the TestApp\u0027s Model as well.\n\nLet\u0027s shorten the code in assertCommandFailure(...) by simply calling\nTestApp#getModel().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"530bf36261417b29e3e23617b023d93e72bdc9e9","messageTitle":"Convert FindCommandTest to FindCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":51}}},{"hash":"3a33cc50431b78d60fecb0933aaba9fa0f840ef8","messageTitle":"FindCommandSystemTest: Add additional tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":1}}},{"hash":"a3c1fbccf91043411e1cf2d75bc461f771f1a0fd","messageTitle":"FindCommandSystemTest: Add tests involving card selection","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":3}}}]},{"date":"2017-08-30","commitResults":[{"hash":"1c8fbf24d0aa63e000fa43b4ddd9a6a91a5b56ae","messageTitle":"Convert ClearCommandTest to ClearCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":39}}},{"hash":"559383f29db4e470d5d4ba7da222341503c5b0d7","messageTitle":"ClearCommandSystemTest: Add additional tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":4}}}]},{"date":"2017-09-02","commitResults":[{"hash":"c587a0506cee54a37e1d888f742b52a8d5e53132","messageTitle":"Convert AddCommandTest to AddCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":71}}},{"hash":"75fd8630c663124d7edcf20d9e27ba2254d2cbcb","messageTitle":"AddressBook#addPerson(ReadOnlyPerson): Document bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"90778a6682680a564876caa5b9ebde811a32de8e","messageTitle":"AddCommandSystemTest: Add additional tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":162,"deletions":4}}}]},{"date":"2017-09-04","commitResults":[{"hash":"d8a4602a47abd816b2125720a0ceb5fd0c926148","messageTitle":"Developer Guide: Document previewing of .adoc files","messageBody":"Students may not know how to preview .adoc files locally. As such, they\nmight push the changes to their repo every time they make a change to\npreview the changes that they have made.\n\nThis is inefficient.\n\nLet\u0027s add a section in Developer Guide to teach the students on more\nefficient ways of previewing the changes that they have made to .adoc\nfiles.\n","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":0}}},{"hash":"dbaeba1680f1cb0df7a2fa14bb0773a9d2ca9ae8","messageTitle":"DeleteCommandSystemTest: Update creation of ModelManager","messageBody":"ModelManager objects are created by calling the constructor.\n\nThis makes the code look unnecessarily long as we have to pass in the\nexpected address book as the parameter when constructing the\nModelManager object.\n\nLet’s update the creation of ModelManager objects by calling\ngetTestApp()#getModel() instead. This method returns a defensive copy\nof the current model.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":6}}},{"hash":"030f8621cfc60f541bac4d324a2e9311cca64d57","messageTitle":"DeleteCommandSystemTest: Update the use of expectedModel","messageBody":"This variable is used throughout the test.\n\nThis makes it hard to keep track of what the expectedModel is currently\nstoring, since some of the test cases use the expectedModel object\nthat is constructed few test cases before itself.\n\nLet’s replace the use of expectedModel with other more meaningful\nvariables.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":5}}},{"hash":"ad591fb53879ac039f1b9ddb4effeb0d019800c3","messageTitle":"DeleteCommandSystemTest: Add overload assertCommandSuccess(Index)","messageBody":"There are repeated code in the test method.\n\nThis violates the DRY principle.\n\nLet’s refactor the repeated code out into a new overload test\nverification method.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":10}}},{"hash":"8915a7d7db28baba7629548ac6b5b92a583fe995","messageTitle":"DeleteCommandSystemTest: Add missing test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}}]},{"date":"2017-09-06","commitResults":[{"hash":"3b27d4102a9e69eecb2380ac1a5bb88e7aa723df","messageTitle":"DeleteCommand and SelectCommand: Don’t use UnmodifiableObservableList","messageBody":"executeUndoableCommand() and execute() in DeleteCommand and\nSelectCommand respectively call Model#getFilteredPersonList() and\nassigns it to a variable of type UnmodifiableObservableList.\n\nThere is no need for these commands to assign the variable to such a\nspecific type; in the event when Model#getFilteredPersonList() is\nupdated to return another type of List, these Commands will need to have\ntheir code updated as well.\n\nLet’s update the variable to be of type List instead.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"c1df3f4d1da28933b75c1d7d59e1e00f3a38f45b","messageTitle":"UniquePersonList: Update asObservableList() return type","messageBody":"asObservableList() returns an UnmodifiableObservableList\u003cPerson\u003e.\nCallers can access the Person objects inside the list and modify them,\ncausing the internal list in UniquePersonList to be updated as well.\n\nThis is a potential cause of bugs.\n\nLet’s update this method to return\nUnmodifiableObservableList\u003cReadOnlyPerson\u003e instead.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"40bf2a16cbd5e078853b2dbf94092528712ae8c2","messageTitle":"Update classes to not use UnmodifiableObservableList","messageBody":"FXCollections#unmodifiableObservableList(ObservableList\u003cE\u003e) returns an\nunmodifiable wrapper list on top of provided observable list. This\nworks similarly to UnmodifiableObservableList in our code base.\n\nThere is no need for us to use our own version of\nUnmodifiableObservableList.\n\nAs part of deleting UnmodifiableObservableList, let\u0027s update classes to\ncall this method in FXCollections to create an unmodifiable\nObservableList instead of using UnmodifiableObservableList.\n","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":25}}},{"hash":"d33ffaf0dcc22018968ddf758f8ac424545ccf96","messageTitle":"Delete UnmodifiableObservableList","messageBody":"This class is unused.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":399},"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-09-08","commitResults":[{"hash":"c07e1463923e1cab7bb65d167ce6f57d35c18287","messageTitle":"Convert EditCommandTest to EditCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":289,"deletions":161}}},{"hash":"f8b29a62da1cea2d5b90b17356ad6c958576b4f7","messageTitle":"Developer Guide: Fix unintended quote marks","messageBody":"There are no quotes in the Developer Guide, but there are quote marks\nin it.\n\nThis is misleading.\n\nLet\u0027s remove these quote marks.\n","fileTypesAndContributionMap":{"adoc":{"insertions":14,"deletions":15}}},{"hash":"3a347a81c3a75a38fe052bd6ac771ad94b37dc65","messageTitle":"DeveloperGuide: Fix formatting errors in the use case","messageBody":"There are formatting errors in the use cases. For example, some use\ncases are not properly indented.\n\nLet\u0027s fix them.\n","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":4}}}]},{"date":"2017-09-18","commitResults":[{"hash":"8c158106ad43c1db8f3e2f20f8759bdd3df8b6db","messageTitle":"Update AboutUs.adoc","messageBody":"The AboutUs page has a different format compared to other versions of\nAddressBook.\n\nThis is untidy.\n\nLet\u0027s convert AddressBook - Level4\u0027s AboutUs page to be of the same\nformat as that of other versions of AddressBook. Also, as this project\nis expected to be forked and worked on by students, let\u0027s also add a\nsample page format by updating existing names and images to use\nplaceholder names and images.\n","fileTypesAndContributionMap":{"adoc":{"insertions":16,"deletions":21}}}]},{"date":"2017-09-19","commitResults":[{"hash":"31efee105e7ead4ee458ca2de957c3dded46a109","messageTitle":"DeleteCommandSystemTest: Rename variable commandToRun to command","messageBody":"assertCommandSuccess(...) and assertCommandFailure(...) takes in a\nString named commandToRun.\n\nThis variable is unnecessarily long; naming it as command is\nsufficiently descriptive.\n\nLet\u0027s update commandToRun to command.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"48abf5a3d160c77f529803d1825ed8b514848f6e","messageTitle":"DeleteCommandSystemTest: Update test verification method comments","messageBody":"The javadoc comments for test verification methods are written in a\nparagraph.\n\nThis makes it hard to read, especially since it\u0027s quite long.\n\nLet\u0027s improve readability by making it into point forms instead.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":11}}},{"hash":"e57cdf5677ed4d473d33161607924ebe903377e3","messageTitle":"DeleteCommandSystemTest: Segment test cases","messageBody":"There are many tests cases in the test method.\n\nWithout segmenting the tests, it is harder for future readers to know\nwhat we are testing.\n\nLet’s segment the test cases to improve readability of the test cases.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"44b7dcda16e7022f6d7ef3c417b635b24d91a786","messageTitle":"DeleteCommandSystemTest: Remove String#valueOf(int) call","messageBody":"We convert an int value to a String by calling String#valueOf(int) when\nwe are creating a command.\n\nThis method call is unnecessary as the integer value is automatically\nconverted to a String.\n\nLet’s remove the call to String#valueOf(int).\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"11f1e7c2c842faa5bd547cea6f911bb473750abc","messageTitle":"AddressBookSystemTest: Remove getTestApp()","messageBody":"All test classes call getTestApp()#getModel() to retrieve the model.\n\nThis is unnecessarily long. Also, it’s unnecessary for these test\nclasses to be aware of what a TestApp is.\n\nLet’s replace getTestApp() with getModel(), which retrieves the\ntestApp’s model directly.\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":58}}},{"hash":"4334a642340a8b11fb2c8bb10f75abdeb6f73e70","messageTitle":"AddressBookSystemTest: Extract common test helper methods","messageBody":"System tests manually execute FindCommand, ListCommand and SelectCommand\nto set up the some of the tests.\n\nIt is unnecessary for these tests to know the exact command to execute\nto set up the tests.\n\nLet’s extract the execution of these commands to AddressBookSystemTest\nto provide a layer of abstraction for these system tests.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":38}}},{"hash":"f44a524b29127d154a6858f036b535f2bf62dd9d","messageTitle":"DeleteCommandSystemTest: Replace assert with Assume","messageBody":"We use assert to show that a precondition is met before executing a\ntest.\n\nAsserts should not be used in test cases as JUnit’s Assume class\nprovides the same functionality, and it conveys the message that a\nparticular condition needs to be met before the test is executed.\n\nLet’s replace assert statements with Assume.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"8bc11d6f6b8dfd1640e4bf449c39ab695e8c8e24","messageTitle":"EditCommandSystemTest: Replace assert with junit.Assert","messageBody":"We use assert to show that a precondition is met before executing a\ntest.\n\nAsserts should not be used in test cases as they can be disabled.\n\nLet’s replace assert statements with junit.Assert\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"baaaffebdf1500b657b10120dfd7e8772522a812","messageTitle":"SampleDataTest: Fix buggy implementation of getDataFileLocation()","messageBody":"getDataFileLocation() must return a non-existent file location as part\nof this method\u0027s post-condition.\n\nHowever, this isn\u0027t ensured in the current implementation. As a result,\nthe test case in SampleDataTest may fail.\n\nLet\u0027s update getDataFileLocation() to ensure that it returns a\nnon-existent file location.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"26ed50f9b44b666c577eebfa4eb1c8009afcb20a","messageTitle":"DeleteCommandSystemTest: Replace Assume with Assert","messageBody":"We use Assume to show that a precondition is met before executing a\ntest.\n\nAssume should not be used in test cases as the Travis build passes even\nif tests are ignored. This forces developers to have to manually\nverify each Travis build to ensure that no tests are ignored.\n\nLet’s replace Assume with Assert.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2017-09-21","commitResults":[{"hash":"c2de0d491991e48ab8f1c5310a6e94c47ce81909","messageTitle":"LearningOutComes: Add hyperlink to EventsCenter","messageBody":"This allows students to access EventsCenter.java easily.\n","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"467805643b20219c425c151269141483c51f9fe6","messageTitle":"LearningOutComes: Remove redundant instructions","messageBody":"The hyperlink to the instructions are given just a few lines above this\nline.\n","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"57e71f4811eb4380a8fea20ffc428940c98abe52","messageTitle":"LearningOutcomes: Fix typo","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"e1bff8fe57f5bc9c03ca47b84d4316b7d6c92263","messageTitle":"LearningOutcomes: Fix method reference in documentation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"3f8b0ee31b2167b908574c446d919f50991ce309","messageTitle":"LearningOutcomes: Update LogicManagerTest","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":5}}},{"hash":"2e608f0badfae4d030f22ed72d7836d1d34afa13","messageTitle":"LearningOutcomes: Update System Tests","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"dc7d5f7ddb5d4bb63c9256517a3068fe111fcd0e","messageTitle":"DeveloperGuide: Update outdated information","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":2}}},{"hash":"f1e11184e4199f318ad5257310ac57dd1a62a29a","messageTitle":"UserGuide: Add EditCommand to Command Summary","messageBody":"This was missing.\n","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":0}}},{"hash":"cfcebedbfba50afe2b07bdc149ab43b9ef0d06ef","messageTitle":"UserGuide: Update command headers","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}},{"hash":"2a4e8fd7a954030367061ae379eb8172542f7b07","messageTitle":"UserGuide: Improve clarity and readability","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":3}}},{"hash":"1390523cb86b9b6993ea61e2c8b722b628c63dc9","messageTitle":"UserGuide: Update Command Format","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}},{"hash":"9cbbf8a9c9a32a4fa76fe581ee2832951ffc7efb","messageTitle":"UserGuide: Update find command example","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"73c179f703e5d13955ce785c340eeff8152f290b","messageTitle":"UserGuide: Fix typo","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"e01838596ae5f036ed8658c4bbd4907dbeb7eefb","messageTitle":"UserGuide: Update broken link","messageBody":"This link breaks on the offline version.\n","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}}]}],"Esilocke":[{"date":"2017-10-01","commitResults":[{"hash":"a06792f28283c3f1f6ccff08808e67dc7b55e3af","messageTitle":"Documentation: Add use cases for search and edit","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":64,"deletions":1}}},{"hash":"ef1d1ba722517747c9bc1a925db16cb624deee4f","messageTitle":"Documentation: Add use cases for undo/redo","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":30,"deletions":0}}}]},{"date":"2017-10-03","commitResults":[{"hash":"9cc5fd0eb41aa5a86a39c9d7691831c99b59793c","messageTitle":"Model: Attempted to remove null-checks for model classes, in preparation for allowing of optional data.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"1aacd8e852b0f7b81032658ae875e570967308ae","messageTitle":"Model: Restored null-check for Name class as names are required and cannot be left blank","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"ac81016508d6a8cc220d5639e92507b5e196d14a","messageTitle":"Model: Lifted restrictions on data validation. Empty data may not be submitted into the address book.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":3}}},{"hash":"6fee1e117b5090516cb295c006a97a8e2a6dce12","messageTitle":"Documentation: Changed repo URL of DG to match organization name","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"36e104e205e4a314a327d86f91382fb10ac9e772","messageTitle":"Documentation: Add use case for sorting","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":25,"deletions":0}}},{"hash":"2e39d6d5efe5d8282b3ca4f26b30ea9f3e43a1bb","messageTitle":"Model: Enforced coding standards and removed unused import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":9}}},{"hash":"241125a71c8f2b37aa0e330f741e2a2d22ed8202","messageTitle":"Documentation: Updated user guide to reflect potential changes in data validation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}},{"hash":"670e48b51901845026ec7ce5e51d687bafbaaf6e","messageTitle":"JUnit: Removed certain obsolete JUnit tests with the implementation of optional data input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":25}}}]},{"date":"2017-10-04","commitResults":[{"hash":"faf8b799044f4eca93347567131b80ef73378917","messageTitle":"Minor: Attempt to rerun Travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"34e782b69a643452200e092e9d8d9338332dad88","messageTitle":"Minor: Removed trailing whitespaces","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"cdee2f9772964fa0afa0f35d7feea84e1dbdd47c","messageTitle":"Minor: Removed unused import statement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-10-07","commitResults":[{"hash":"ef391820b7774d3d62b76275eb68e8ba66a87772","messageTitle":"Documentation: Fix extension lettering","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":6}}},{"hash":"210a367583e87e101dc0422038430a83b8774ec9","messageTitle":"Documentation: Rename undo/redo use case for clarity","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"33e764d1143cc96c842422ad60f6eafecb17befb","messageTitle":"Cleanup - Removed unnecessary import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"0296f83b731ac8e2a45b45690ddf9cf4ab6f8598","messageTitle":"Cleanup: Remove unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-10-10","commitResults":[{"hash":"387644f658d383e060dae1b7cc9d55e0bbcfbc59","messageTitle":"Documentation: Update user guide for upcoming features","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":19,"deletions":2}}},{"hash":"a8966d59ac2d125957a1d1d25505a2ee66123475","messageTitle":"Documentation: Added further details on new upcoming commands","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":166,"deletions":39}}},{"hash":"4c4279a69350a99c931ea3a30dbae711eae4aff6","messageTitle":"Documentation: Updated user guide for birthday addition, and added upcoming tags","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":10}}},{"hash":"42fecf4f13ad55141ad8c15efa1ae0b663e53090","messageTitle":"Documentation: Minor formatting on command summary","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":5}}},{"hash":"bf018c69cc244e9685217ad75d8a4f3b9d824713","messageTitle":"Cleanup: Removed trailing whitespace","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-11","commitResults":[{"hash":"5dda10cb51d541033dc289e019dced12af446e8d","messageTitle":"Model: [TDD] Add blank new tests for tasks object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}}]},{"date":"2017-10-12","commitResults":[{"hash":"8132fdbf172868d998312ec16769e7f5c3e2c810","messageTitle":"Model: [TDD] Expand on testing for deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":0}}},{"hash":"4bd2d25ef785383336dea41d4c7a4cdd668d3ff7","messageTitle":"Model: [TDD] Expand on testing for descriptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"e4b8e1a88288626607b56d68a30b342f4b4b709d","messageTitle":"Model: [TDD] Expand on testing for names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"7f0b3b7763f6fcf7d05615a9bc12bb2055d2ba4b","messageTitle":"Model: [TDD] Expand on testing for priorities","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"5a9c36b39009dcf9f16750a5568bb31a210f2ba7","messageTitle":"Model: Add empty classes for Tasks object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"a37f81df1a4b75e4fbdf51a07ca027d8eb2ab30c","messageTitle":"Model: [JUnit] Updated Task object test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":15}}},{"hash":"2e5c5bc98ae22e6db2141acc136dc2fcf719a7b3","messageTitle":"Added unit functionality for Deadline object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":122,"deletions":0}}},{"hash":"6dfb78e3187cdaabfb8e44b1955f6bf3386692d5","messageTitle":"Added unit functionality for Description object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":0}}},{"hash":"f5856b657a65f908b886911e57e870c8d0e13b7e","messageTitle":"Added unit functionality for Name object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"06b4bbc73057bc5ef706b90553bfc19c37d76a1d","messageTitle":"Added unit functionality for Priority object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}}]},{"date":"2017-10-17","commitResults":[{"hash":"2f0901960407705956146fee96f9a902cd0c9db4","messageTitle":"[Checkstyle] Resolved checkstyle conflicts in import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7b0737a001efb38a1fa76282f3caaf217353c9d3","messageTitle":"[Checkstyle] Resolved import checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"38deb0714450bc6b511324c172e431c672651ca1","messageTitle":"[Checkstyle] Added Javadocs to Task object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2017-10-18","commitResults":[{"hash":"c59f32494e373809146a87aa47ef0c66b2cd796e","messageTitle":"Documentation: Add Sequence Diagram for addTask","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"c3d17e460889c33e2d03c1396d1f85291a784e8e","messageTitle":"Documentation: Added description of implementation of tasks objects","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":56,"deletions":0}}}]},{"date":"2017-10-19","commitResults":[{"hash":"42a042cc5b7feafccbc1067af4a9a938bfdb9fcb","messageTitle":"[Documentation] Added further explanation on how Task objects will be handled","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":31,"deletions":0}}},{"hash":"5d040ebbf20427f117bead1daad51de64bfa1586","messageTitle":"Resolve merge conflicts","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":4}}},{"hash":"cc5b5c5b49098ee3c6671c33b5621eb7f5b4403b","messageTitle":"[Logic] Add support for global addition of tags","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"e62deca4bfc507efb8fe6c75f1aa4e7b9d2dc8e8","messageTitle":"[Logic] Add support for global deletion of tags","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":4}}},{"hash":"b8ec6ab9765ec26d72bd44f3e0c6aca596b59f07","messageTitle":"[Model] Add new method \"editTag\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"5fb9f027dad770b18fcc0ee0472417d58d0ea254","messageTitle":"[Model] Expanded on editTag method in Model Manager.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"c39d30d3b093d417516315354c1573a96b7ffd28","messageTitle":"[JUnit] Added blank tests for EditTagParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"25611f7a67db963311a5dc0a39e65ea7a096c23c","messageTitle":"[JUnit] Added blank tests for EditTagCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"976ec2d36a59fb37f3b500715461c7552dfd9fda","messageTitle":"[Logic] Added new command: EditTagCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"9d90d368656430a8b68257d105b1a6917283284a","messageTitle":"[Logic] Added blank new parser for EditTagCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]},{"date":"2017-10-20","commitResults":[{"hash":"f36a97e39c8f27d7ac29163b075210a210b88a99","messageTitle":"[Logic] Added functionality for EditTagParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":1}}},{"hash":"5b9a886358e6dae8c1ab5cb4cf9306615b8c469a","messageTitle":"Renamed EditTagParser to EditTagCommandParser to match naming standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":0}}},{"hash":"189afe6610dbba4e4bd260e43db3e8e18731cdfe","messageTitle":"Removed file due to renaming","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":61}}},{"hash":"a0a01545085a08a2038f7df4676175249a60b147","messageTitle":"[Logic] Add support for AddressBookParser to read EditTag commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"0a32338e5432b8e396e11fab8d45000f5fb8ce28","messageTitle":"[Logic] Updated usage messages for EditTagCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"1a1df84bf389e3c9342136ae06bdbbac30ee640e","messageTitle":"[Model] Changed data structure of editTag to a mutable one","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"a40fdb38fc1faaf3456c54d5122d68200c39b05d","messageTitle":"[JUnit] Added editTag method to Model stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"d023a43c13b6310eb6dcb703318afd0c13b5068b","messageTitle":"[Logic] Decreased complexity and improved abstraction for add/deleteTagCommands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}},{"hash":"52dc2f7defca6fd1f25f1d0c54d95ec5efeb93ee","messageTitle":"[Logic] Moved error messages from the parser to the command itself","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":5}}},{"hash":"bde174362aeed02418853f01f98ce79f60d99385","messageTitle":"[Junit] Added basic tests for EditTagParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":1}}},{"hash":"111d355ecb36f029440529b51d530aeb9a8102f4","messageTitle":"[Junit] Renamed class to EditTagCommandParserTest to match naming standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"26f70e9d7d9d5abcbe9775e963a15503603b606e","messageTitle":"[Junit] Removed redundant variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"40d9989d3a7d4b83c933fb39bbfa4f4d804b0057","messageTitle":"[Junit] Added some extra functions for generating AddressBook objects","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"7c14abb709229ed52951bce506f886c97ea2c9d6","messageTitle":"[Junit] Added test functionality for EditTagCommandTest, as well as renamed the class to match naming standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":18}}},{"hash":"350dc87a307c36b774fa754b8a9512a5efa0b674","messageTitle":"[Junit] Added extra functions to generate more types of AddressBook objects","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"7e5eb6270501912fcddc350a120c89885a3a1157","messageTitle":"[Logic] Changed shorthand to etag, to prevent future conflict with edit task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"08e16f0003a86caf8e20a9d48f2c08538f6c7f61","messageTitle":"[Documentation] Updated documentation to reflect latest changes in feature sets","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":71,"deletions":60}}},{"hash":"bb2230ee9886ce9ec1cbbf646cac637f73dae93a","messageTitle":"[Documentation] Updated documentation to reflect task-related command changes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":64,"deletions":56}}}]},{"date":"2017-10-22","commitResults":[{"hash":"0b819987b49dcb6bbaa267bc6239debfadf87e3d","messageTitle":"[Documentation] Improved documentation to reflect \"you-attitude\"","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":131,"deletions":67}}},{"hash":"885a81137425dca24c9f0373736f164d306a99ae","messageTitle":"[Documentation] Added extra line to \u0027list\u0027","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-23","commitResults":[{"hash":"fe32a8674de0da448cc5c7d13fe7e467ca91b952","messageTitle":"[Documentation] Added overview + about to UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":0}}},{"hash":"5b9eddf8df7efdd143171a26cf758ccb02002156","messageTitle":"[Logic] Added basic support for Task addition","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":7}}},{"hash":"5207940a9e02b786a2cf48bf620eba2ccda351a3","messageTitle":"[Logic] Added basic support for Task deletion","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":9}}},{"hash":"3d794df2ab5ee8a049239a51b38df1b6b444c2b4","messageTitle":"[Model] Added new exception for TaskNotFound","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"5f7fe5b03db9d92bc5ca58d94c8a39f06b8eaf69","messageTitle":"[Model] Added constructors for Task object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"95c0a54afd047b6b1fae56fdab6ac1e7619bfc01","messageTitle":"[Logic][Messages] Added new messages for Task index-related commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"89798e070c20785a9ffc63b1df6914c0be760f6c","messageTitle":"[Model] Added basic interface for ReadOnlyTasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"14d0f5190fabca54f93c82cc24b717b602b704f8","messageTitle":"[Model] Implemented interface methods from ReadOnlyTask","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"3c26dbd36c60e57a103ac4c803ac24669742ed65","messageTitle":"[Logic] Added import statements and exception handling for DeleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"5aecaabcb7863180e59d66996858e34830ca9ead","messageTitle":"[Logic] Removed comment on addTask, and added import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"112797bf1dc45c88e32643970ebaa5f323e0bba3","messageTitle":"[Model] Added stub add/delete Task methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"1da2b0cf49e674915a7323b73e08f5d97d052fa1","messageTitle":"[Model] Added add/delete Task methods to interface","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"9699377ce6617e43a3aa0dfc7e9a37256f90b883","messageTitle":"[Model] Added getTasksList method to interface to suit new need for task access","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"3585485c59998cb6633d1ecd36519f5c1f25205c","messageTitle":"[Model] Updated main AddressBook class with new variable/methods for Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"f206ae697d508411224e9deb0c2bc3536e5660c9","messageTitle":"[Model] Created new UniqueTasksList to store tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]},{"date":"2017-10-24","commitResults":[{"hash":"938ca4f1b33bb26509000ae0084a6a40b0daba5f","messageTitle":"[Logic] Updated parser to include a check for \"task\" in the command-line arguments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"c4ff4ce06d33a55dc1cbd70455bcf42f1ebb56e9","messageTitle":"[CLI Syntax] Added more prefixes for task-related syntaxes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"efbc16e586692a18e802309b1410d82339cb0334","messageTitle":"[Logic] Improved Add parser to accept task addition","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":7}}},{"hash":"03d23de4d26a993802fd7345485d2d4c00e72875","messageTitle":"[Logic] Updated messages with task-related messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"86157adb1562bbe7c432d4ae2b1fea3219763589","messageTitle":"[Logic] Added new methods to parser util to handle task parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":7}}},{"hash":"ecaedea33d21846bb74a7ef7ddc4f92954cd1209","messageTitle":"[Storage] Added basic XmlAdaptedTask file to handle task storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"751091baa41f2eb4642c944dd1c2de309b2f6b3e","messageTitle":"[Storage] Added getTasksList method as part of interface requirements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"01f712f148162b51530f23f83cd4453831dee62e","messageTitle":"[Logic] Improved Delete parser to handle delete tasks correctly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"0561c66ab235cf6f0e666a375d68d97faa6044c1","messageTitle":"[Model] Added extra guard clause to catch special values for deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"5451d69d8d82f4238f99efd3c0c5814e192db413","messageTitle":"[Model] Added extra guard clause to catch special values for priorities","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"c610006be5f8a108af093be0d8c402c3ed86a498","messageTitle":"[Model] Added getAsText method to print out tasks easily","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"9e34dc32200fa2e4051f74d2b3f75db700f88934","messageTitle":"[Model] Converted basic classes to ObjectProperty classes in preparation for UI implementation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":18}}},{"hash":"e022d96a4cb0ce7d3c566c09f222eac29ff8f321","messageTitle":"[Model] Renamed class to distinguish it from person Names, as both of them have different validation methods and cannot be put together yet","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"7168bf0db23e6c54bda6706d3fdeac324ec7b525","messageTitle":"[Model] Added basic methods for UniqueTasksList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":1}}},{"hash":"72cfcf3d9226328c8eb2da929577fe6267c8873e","messageTitle":"[Model] Added UniqueTasksList to address book","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"80512c7cf4e1edf78fc278e320fc97b567f0986e","messageTitle":"[JUnit] Fixed delete command arguments due to new changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":23}}},{"hash":"cced6e5ac90d7b7c802195e5147dbc68a8646361","messageTitle":"[JUnit] Renamed Name to TaskName for greater clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":21}}},{"hash":"ba814c5f1be733abc83c84c2d111891ce5556e8f","messageTitle":"[JUnit] Added missing methods to Addressbook stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"aec99642afb5eee462ebd3fa6bb6f8a8da172bed","messageTitle":"[Model] Added exception for duplicate tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"0a2e9d59cf0a53d633d3ace5b645230600362a32","messageTitle":"[Model] Added basic add/remove operations for UniqueTasksList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"cb175acfc4e83e3437984cd06704fa9df879d81f","messageTitle":"[Model] Added basic add/remove operations for address book","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"cc3e711ed4d32944fbdba87492d358fc218d3860","messageTitle":"[Model] Added throws statement to Model for addTask","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"12b934e99949f033649d0e2163301af430e11d92","messageTitle":"[Model] Expanded on Add/Delete task operations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"3ba0315a36b2de3314a6af1d71eb099a6c0f84c0","messageTitle":"[Model] Added exception handling to AddCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"c85ee6cc3f900e56142a6500a9a01da4839f81e6","messageTitle":"[Model] Added parameter setters for TaskBuilder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"bf084a6c379ad0eb790ef524e8bad0e11b61f746","messageTitle":"[JUnit] Added TaskBuilder for task-related command testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":0}}},{"hash":"2aaca34c1ae0fbd08f95c50b7434c0d5367ccba1","messageTitle":"[JUnit] Added valid task parameters to utilities","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"ae9f6e566a329ff824beb6a105c3fa7d1e1b9ef7","messageTitle":"[JUnit] Updated Add parser with task-related tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":0}}},{"hash":"d8dcc24276afde3c95aa0e450a580ae9990ebadd","messageTitle":"[JUnit] Updated Delete parser with task-related tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"7a2e93a44c5e6be13422ed395683087d79794f8e","messageTitle":"[Model] Added equals method for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"a678fa4eb8b1e0fd9466f60e9539208b3a8c1439","messageTitle":"[Model] Added isSameStateAs method for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"c79235efe0ffa69628e6a44ce12182e4806eb92c","messageTitle":"Added EOF to appease checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"f0c903bfd8cbb4fc1c4d869cf779cc6263fe6a46","messageTitle":"[JUnit] Added tests for Add command, for task addition","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":9}}}]},{"date":"2017-10-26","commitResults":[{"hash":"8b19e515232082138889c70f8a7ed9d0010a49ee","messageTitle":"[Logic] Improved exception handling, and javadoc documentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"623a4fa514072ed271a35e007ce07d98daed9cb3","messageTitle":"[Logic] Replaced 2 instances of assert false with assertion exceptions instead, to remove 1 unneeded return statement.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"b1d7f0b054d9b0a9dfccf2b6bce596ba07dd1717","messageTitle":"[Model] Added new methods to handle task editing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"54352f81dd5a52ca39eb9acef260288e52689872","messageTitle":"[Model] Added setTask method to handle task editing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"98c7273a8900dc9365dde997c34882c643b4b2ca","messageTitle":"[Model] Added updateTask method for task editing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"86998940573c7883e49f53f8e0e19ff082f8aab3","messageTitle":"[Model] Implemented methods for task editing in Model manager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"f516400c62c3e165d00e1cc49eefa884fdaf340a","messageTitle":"[Logic] Split parse into a constructPerson vs constructTask method, to handle task and person editing differently","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":1}}},{"hash":"97d18ae0f348855ebeb36f2adf9e310ea4b2c865","messageTitle":"[Logic] Added support for task editing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":171,"deletions":11}}},{"hash":"0a6e5ec099ce1c446242fa1f072e2bd40d65099f","messageTitle":"[JUnit] Add new TypicalTasks object that generates tasks for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}},{"hash":"cacfc0ab55ee481a0f0a438aecd2471bfca8236d","messageTitle":"[JUnit] Added EditTaskDescriptorBuilder for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":0}}},{"hash":"1fac207f4779b90ab00f41f75679dbb2ed38d627","messageTitle":"[JUnit] Added EditTaskDescriptorBuilder for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"a2e6dbf9498d144abe92708287ca81e8c56dd524","messageTitle":"[JUnit] Added missing methods to Model stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"b14e5886e6a80ed246eafade832f4b077ae081cb","messageTitle":"[JUnit] Added EditTaskDescriptorTest for Task building tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"91f34d01a80590208a40f76e907ade3366b641c0","messageTitle":"[JUnit] Renamed confusing comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"1309906b5e39b037304af652c365e66903b5331f","messageTitle":"[Logic] Added a ClearCommandParser, to detect the type of object to be deleted","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"e6eb038b5bde5364393a29c1e82de213d369fb28","messageTitle":"[Logic][Utils] Added extra Person prefix for Clear command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"151779afd18bacd123403218fcc2fa4f3b5a63c8","messageTitle":"[Logic] Changed Clear command\u0027s parse statement to perform a parse instead","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5e63a91a53bda591b06d1c565c73364f63f85aac","messageTitle":"[Logic] Added support for persons clearing, tasks clearing, or full clearing of the address book","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":3}}},{"hash":"9be9f6b1fb67ff6aab8de70687c021c7325b70b8","messageTitle":"[Model] Added new method resetPartialData, to allow users to reset only their contacts or tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":4}}},{"hash":"9f3a34da461013b17085abd3594ea503c0776436","messageTitle":"[Model] Added setTasks for re-initialization process","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"cd8f66a90c37f18a4f905e87c97da433435e896e","messageTitle":"[Logic] Added support for person+task input, the result will clear the whole address book.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"0c4f175c5f751e3f61732afe275e297f5982847b","messageTitle":"[Logic] Added more variables as the type of data to delete, and the print result are different","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":9}}},{"hash":"0897a2acdda0efd1c4fd1ebdd6e3b9a1e0959d89","messageTitle":"[Model] Added a predicate checker that checks the name and description for the keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"b37d14d0a8254f7809ac7c25ce18d4b73d2862a9","messageTitle":"[Logic] Updated equals method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"8c47e13669552dd3e483e0941dca798adbca081b","messageTitle":"[Logic] Add extra method for printing task listing operation successes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"f8623617128aca50008079f15d164c146f748285","messageTitle":"[Commons] Added new message for task listing operations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2017-10-28","commitResults":[{"hash":"9183e59be77dfeba2e163f5481310c66c9c000fb","messageTitle":"[Logic] Changed access of success message formatters to public for JUnit purposes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"b142521095a18154ef99696d30937080885ff314","messageTitle":"[Logic] Added new method getFilteredTaskList, for UI purposes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"17641a4b187f0c98bf7c17681597b639bdc38f17","messageTitle":"[Logic] Implemented getFilteredTaskList in Logic manager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"1d2df4f909a61ce97ae7c4275a3da5da92c02005","messageTitle":"[Logic] Updated List to list all contacts and persons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"f6fea07e3f6d8d4e9f6a6d0513e330daf125e88b","messageTitle":"[Logic] Attempted to allow FindParser to process task-related commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":8}}},{"hash":"b4be548b341201abd3cf21eb781d1c3da2c55aac","messageTitle":"[Model] Added a predicate checker for the Find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"d77d4554de1eaf91fa3028be5b0bb5d5c2510cd9","messageTitle":"[Logic] Updated Find command to allow for task finding","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":8}}},{"hash":"29bc537afbe35baefcab7e22aefb85d933043d18","messageTitle":"[Model] Replaced erroneous statement in addTask","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"91d6176ff5a12bfcc2b0cc254f1b7f0991fb0dce","messageTitle":"[Logic] Uncommented out task-related lines in resetData","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"db5c36757357cb4ae717d3f3dd76e407bd596ba1","messageTitle":"[Model] Added new getters for UI-related commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"c857c3ca2eea03e1577d9589fdc27bfe4382bb64","messageTitle":"[Model] Implemented UI property getters in Tasks object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"638c043646490e4a3029dc2413a8d5b6c00966d7","messageTitle":"[Storage] Finally allowed Tasks to be stored in the XML file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"0c1974020654801bafb1062163d2a9e22b0e404e","messageTitle":"[UI] Added a first attempt at reproducing a TaskCard for UI display","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":0}}},{"hash":"3878b4b51c8564cc969b67942f1d60238cd7c5d8","messageTitle":"[UI] Attempted to create a container for TaskCards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":0}}},{"hash":"76b06a6b5f7a50f2645a14502e7720c16d76e34a","messageTitle":"[UI] Attempted to introduce the TaskPanel into MainWindow","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"7eea792489e8fc5af6de1cf5a786fc147bc4650c","messageTitle":"[UI][FXML] Made new FXML files for TaskCard/Panel, and updated MainWindow","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":66,"deletions":4}}},{"hash":"26bf4b99e1e1458de83ebd6675662199a5b52b9b","messageTitle":"[Event] Added an event-class for task selection","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"53e9f52fcbc8b2eb2a0954966ea70c800cad5fa8","messageTitle":"[JUnit] Updated Model stub with missing methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"9fc80a09d43c964385d435a5c5c5a9ce4f8859e2","messageTitle":"[JUnit] Rephrased Clear command tests, as the default \"clear\" now has different behaviour","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"120c0c8bdcc1c6b12b0adaf466b9f1852516b5c4","messageTitle":"[JUnit] Rephrased tests, as the default \"clear\" now has different behaviour","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"ffb6b92daf58a28fe5ddcce4d76326466a352613","messageTitle":"[JUnit] Rephrased assertCommandSuccess for Clear System test, as the clear command exhibits different success messages depending on what it had cleared","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}}]},{"date":"2017-10-30","commitResults":[{"hash":"55acc2a48b499a794f03734bec39d8d5d6438df2","messageTitle":"[Docs] ?","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"6797259bcbae8b84581aadc1d73c309ae3de5477","messageTitle":"[Events] Updated AddressBookChangedEvent to keep track of the number of tasks as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"79a85a84dafa548084b590e357531c0d66673956","messageTitle":"[Model] Updated isEquals, hashcode and toString with task-related methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"ffd4083d0cef838a15f067fbc8c16e4c1807b8d2","messageTitle":"[Model] Updated isEquals to include Tasks as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"1260daa60f537e715804ae4d1c6b326cdbce4804","messageTitle":"[UI] Added getTaskListPanel for subsequent JUnit use","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"77b2af1b0dbb9b61298a140197f1ea737bba9720","messageTitle":"[UI] Removed initial constructors to fix the problem of listeners not binding properly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"5cb7af1f8d3da390b2bd06dbfc79bfb91bf9f97e","messageTitle":"[UI] Applied CSS theme to TaskListPanel as well","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":1,"deletions":1}}},{"hash":"9f7adfd268ebbbe9d964ab528aa810ac82b4e08c","messageTitle":"[UI] Attempted to follow PersonCard\u0027s structure to fix binding issues","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":23,"deletions":28}}},{"hash":"942fa4d9ac05799914e7dbcabc3380b527a1d87d","messageTitle":"[UI] Attempted to follow PersonListPanel to fix binding issues","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":6}}},{"hash":"2c03efb7e6113088c56832451dcc4eda0a2f1c36","messageTitle":"[Model] Restructured UniqueTaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":19}}},{"hash":"7c6a75e4895877a5918a5d467f92d80bb6c874ef","messageTitle":"Appease checkstyle with EOF","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"a64e7fcf9be647b3d720a45af9b8a1ab316e5229","messageTitle":"[Logic] Solved the issue of the FindCommand breaking due to a missing trim","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"87e2411fc0c53eb0a593d6f90e3c89c7b6bf1acd","messageTitle":"[Logic] Restored missing catch statement caused by bad merging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"037ba98f0b0c9e9aaf4731c7f1eddd75555865c6","messageTitle":"[Side][Collate] Added collate tags for things done so far","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":11}}}]},{"date":"2017-10-31","commitResults":[{"hash":"3807389886aa2651625cd92f3b57845c54f78271","messageTitle":"[Logic] Add new AssignTaskCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"acd118437179c1f08083c9dba7e3bbd9456f9336","messageTitle":"[Logic] Add new DismissTaskCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"f1d7f979f1df2365c0b84f97f74936dd2b0cd621","messageTitle":"[Logic] Add new parsers for Assign/Dismiss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"78b5605e339b373c20c47a8f229cf074cdb6c5ea","messageTitle":"[Model] Added new Assignees class to keep track of who is assigned","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"3c2246718ee47bdf08488a14732da4baedec198f","messageTitle":"[Model] Updated Task/ReadOnlyTask to reflect new Assignees field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4}}},{"hash":"b0ee4dd81d266628f362d0d0ef2a4f04677945c8","messageTitle":"[Model] Added new assign/dismiss related functions to Model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"d22da4b1433cf234a6cba7a74b8f5428da1cef5b","messageTitle":"[Model] Implemented Assign/Dismiss functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"42cfd6f814219e2105dd6fca69cc925f6345f6be","messageTitle":"[Storage] Modified XML storage to handle Assignees","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"18f67cb8b87537ee590ffe89a24c14d58b0d905c","messageTitle":"[Logic] Added new Prefixes for Assign/Dismiss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"074c0e48118c6a4ca2734ebe3c20bb7c57333912","messageTitle":"[Logic] Added functionality for Dismiss Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":1}}},{"hash":"ba7c2ce9ad2db09faf89e0f554ac76bf9b94b43d","messageTitle":"[Logic] Added functionality for Assign parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":1}}},{"hash":"5225c92be4fe8f982188b550cf8ffc9e8b0a7d18","messageTitle":"[Logic] Update AddCommand Parser to reflect new Assignees field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"7b46bb4e70a4bae2beb1f6576571fa203000d16b","messageTitle":"[Model] Made a new constructor that does not use Assignees. This constructor will make a new empty assignees list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"d071ff881c4e8029aedd06d37cf0cff268216549","messageTitle":"[Logic] Reverted Add command parser to use the new constructor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"61cbd833aadd9a8527f6425476a4ddf7855dc375","messageTitle":"[Logic] Allow Address book to parse Assign/Dismiss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"7b19c3ace3aae3a24885d0a1583240f9b9f56c5d","messageTitle":"[Logic] Added Assignees field to Edit Descriptor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"29799238105edfede8f01159bd6bd90b986ce27b","messageTitle":"[Logic] Added functionality to Dismiss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":1}}},{"hash":"4e923b254f3f2b400810bec1c75dee9a6b18e00b","messageTitle":"[Logic] Added functionality for Assign","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":1}}},{"hash":"7bf438ba7a4767f8da4675f6e445632183340634","messageTitle":"[UI] Added new field to TaskCard to keep track of how many people are assigned to this task","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":0},"java":{"insertions":3,"deletions":0}}},{"hash":"943df958f2167ba243f815a3943486c56e782d7e","messageTitle":"[JUnit] Updated TaskBuilder to add Assignees. New Assignees are empty by default","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"905e0816067e3f4e7f4c58f7745485ce98840ee8","messageTitle":"[JUnit] Added missing methods to Model Stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"a93ba56f2196b511677ed1043b5192b87615bf03","messageTitle":"[Docs] Fixed minor parsing error","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"1409419ffe250276e845215a055a03ad58b09c10","messageTitle":"[Appeasement] Removed unused return statement. The actual function is being kept as it will be needed to handle edit commands in the future","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"32f575bbb353b9723c873a8687a5d959c7aa0cc2","messageTitle":"[Appeasement] Removed unused method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"113b4df16aea950a2bdb1f2782516b217019eb36","messageTitle":"[JUnit] Added new utility class to generate addressbooks with both persons and tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":2}}},{"hash":"5562e8f2c4b99a14f13511fbda96031d49fbb890","messageTitle":"[Cleanup] Renamed Assign/Dismiss command names for clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":36}}},{"hash":"1da725a69d5c7db31e0016a220574658f24aa3e4","messageTitle":"[JUnit] Renamed all existing usages of getTypicalAddressBook, due to the method creating a different address book now","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":63}}},{"hash":"142af37942c0d76ed243bc597d1f466158b759b0","messageTitle":"[JUnit] Add new JUnit tests for Assign command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":0}}},{"hash":"80835bc6e935465a0c04691a5d16c80abcafc08e","messageTitle":"[JUnit] Removed unused Rule","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"43d20463f239bb93badc6a8f3e8bfbbfa1df7340","messageTitle":"[JUnit] Added collate, and renamed confusing comment","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"3f5cb5cc81aa65cf4d07e978afcab1f0855156cc","messageTitle":"[JUnit] Add JUnit tests for Dismiss Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":0}}},{"hash":"bf6a583a6314bd26a291b5def7509d597f0f3353","messageTitle":"[Collate] Add collated folder","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2253,"deletions":0}}},{"hash":"480a4f38c37ec1ad4147b635b6fc29424985ed67","messageTitle":"[Docs] Update UserGuide to reflect latest changes in project","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":24,"deletions":27}}}]},{"date":"2017-11-01","commitResults":[{"hash":"5fa19ce00fc92be516df83e36d162b19b1a91b5f","messageTitle":"[Model] Added new fields for whether the task is completed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"9b692395e7814cf96e5d914be67d45750fc0205f","messageTitle":"[Model] Added functionality for task completeness","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":3}}},{"hash":"5b5b6fe28177b4533497c40ad79a877344ed8fec","messageTitle":"[Model] Update existing storage/model methods to handle new field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":5}}},{"hash":"4b4ef07b8bf099d6c1e1c1e93748e6b6943e8de7","messageTitle":"[UI] Added new label to TaskCard to allow the user to see whether or not a task is completed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"761e6ce21135c200cd6b3d4fe75f7bcaa7d297fd","messageTitle":"[UI] Added new label to TaskCard to allow the user to see whether or not a task is completed","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":0}}},{"hash":"6bebd7853f55abc5d6d2af5df845b4a7fd9694a3","messageTitle":"[JUnit] Updated Task Builder with latest fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"479b4031803c0c6656d66927ee7532eb1b3e5431","messageTitle":"[Model] Updated equals method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"2f134d72ac5aee31beebff65ec65c59cf1571228","messageTitle":"[Storage] Allowed XML file to store the state of tasks as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"a2b4bed27fdc85f4346e5f1c418be667470bd6f4","messageTitle":"[Model] Added new method to change the state of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"e42a9190479c714dca3ebb004b2045fc57131be3","messageTitle":"[Model] implemented setAsComplete functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"a0945bda31f55bd8e7d87ab6e1122d5e41845da0","messageTitle":"[Collate] Added collate lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"39ef215be5e2919020dbfd8195948cf7f32adae6","messageTitle":"[Logic] Added new parsers for setTaskComplete and setTaskIncomplete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"066e525818a32b60895e72be305f811e539c0ee8","messageTitle":"[Logic] Added new commands for setTaskComplete and setTaskIncomplete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":0}}},{"hash":"bc866c64274967a10f9cbb6add76ef31f8186a1b","messageTitle":"[Collate] Added collate lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"a57f49d1ab18c4e959741e170f94af648428d854","messageTitle":"[Logic] Allowed the address book to parse setcomplete and setincomplete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"b44dba9af58dc4349c3207f2a353eaaa2f62f080","messageTitle":"[JUnit] Add missing methods to ModelStub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"ec74fb3c3d72df6098f7f5076c74a8431c77cec3","messageTitle":"[Appeasement] Corrected instantiator of Boolean from String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"0b4c561ec6086e0fdd2630e36875c91945f6b22a","messageTitle":"[Model] Fix bug that was causing setcomplete/incomplete to still even if the state did not change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"e4b10530624da3a38cb2b61e1f7332e936155e72","messageTitle":"[Logic] Renamed recycled message name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"46f304e05e682854cffd14bc6870cbec05b90c3f","messageTitle":"[JUnit] Added tests for setTaskComplete and setTaskIncomplete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":176,"deletions":0}}},{"hash":"2b1b53ed85a4398453fb90cd79d2a7eebba5f65f","messageTitle":"[Appeasement] Removed unused local variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"fdecae6a1d7adb356bef790599be13280677621a","messageTitle":"[JUnit] Added builder with state for TaskBuilder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"7e8148acaf24d680d2cdd8038e33d84f06b312c3","messageTitle":"[Model] Add setter for state","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"c93a9679dab3ef3ccbca8d0d7a6d520a4ec06687","messageTitle":"[Logic] Reordered the structure for execute","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"61d7d53ac709be19fcf7b85301919abe7603addc","messageTitle":"[Cleanup] Renamed SetTaskXCommand to SetXCommand instead","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":20}}},{"hash":"3701e74c3fac76cad501c6fc14d82f9a2bcfeb44","messageTitle":"[JUnit] Added tests for AddressBookParser for new commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":0}}},{"hash":"dade3d85e383328be218a277b54b49c33932260e","messageTitle":"[JUnit] Added taskUtil for generating add commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"13762e5ed965557cd8bd90ad789ba280d095a91e","messageTitle":"[Cleanup] Classes affected by rename operation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":30}}}]},{"date":"2017-11-02","commitResults":[{"hash":"b40ea9d841e9b95a22ed755bfbd067fa1d34d59f","messageTitle":"[Docs] Update user guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"814881a9a5983c1f8ab8b86552fba11b9542d44b","messageTitle":"[Gradle] Added Natty as a dependency for better date parsing","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":0}}},{"hash":"274051c95e122b251ec196468c137b84f43e9696","messageTitle":"[Model] Replaced existing date parsing with Natty\u0027s version to allow for more dates","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":55}}},{"hash":"d4f14a442c0d9f03b18f074a73b8b4adbd8a449e","messageTitle":"[JUnit] Removed irrelevant tests since Natty will accept them all","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":21}}},{"hash":"7158215812ad0fde1414951b9342b3b43bb108c7","messageTitle":"[Logic] Replaced invalid deadline in utils with something more absurd","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"cfc7851625ec849230162cb1fd184a383ccd79ad","messageTitle":"[JUnit] classes affected by renaming of invalid messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"de5c2083fc9498a234577fef1ac245d515f2c496","messageTitle":"[Model] Removed unused variables, and added extra test for equals","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":17}}},{"hash":"3f1d5c34f0fef340eeaecc42e5b9c8d7fb7cbc90","messageTitle":"[Model] Remove date equals check","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"3a54e3ef1f9b1b85c77ab5e86a099aac7b87195f","messageTitle":"[Model] Remove code duplication","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}}]},{"date":"2017-11-03","commitResults":[{"hash":"d3d52d17465403550c40b1f7a42eb44c45471bb7","messageTitle":"[Model] Added new method to convert priority values to strings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":16}}},{"hash":"f51affa46a21241a31bb686624bb34b4aeb25b9a","messageTitle":"[Model] Update sort comparator for priority","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"bb45b504f95104997f06523e76055d6ca599775d","messageTitle":"[JUnit] Update sort comparator for priority","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"20d168424665d5f09ce0ba207f12a7cd90896dab","messageTitle":"[JUnit] Changed how priority strings are built, since the value is different from what is shown on the screen","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4ae09d82c9ee25f28dceb2df413003bf0d503003","messageTitle":"[Storage] Updated XML storage class since value is now an integer","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e957d5ba2f208675ea65449006774a5a0fc14fac","messageTitle":"[Model] Changed Priority placeholder value","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"84f98eb4100d76647bd21637e563774074f392bb","messageTitle":"[Model] Updated TaskPredicate to allow for more extensive filtering","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":5}}},{"hash":"01953d419ae810a5504f3825e748bc7c78f57ae6","messageTitle":"[Logic] Updated FindCommandParser to be able to take in more arguments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":3}}},{"hash":"a8158023fb2bd5ab98d14ac4cec45e1b152282fd","messageTitle":"[Logic] Added more Prefixes for Find","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"3e11ca50b217883e5e549ca9d26d4ea91dc10ad7","messageTitle":"[Logic] Shrunk the tokenizer to resolve crashes when 2 prefixes shared the same name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":4}}},{"hash":"3df76211b500984c3a870062228aa6c7fa57b410","messageTitle":"[Logic] Added new message for invalid flags for FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"b00b05eb1adc73fa9fb5b5d9e0312dc527d1d89a","messageTitle":"[JUnit] Corrected incorrect argument length for Find parsers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4dea0b27fed49a72a30ea80f85de46a672823e82","messageTitle":"[JUnit] Removed obsolete statement in Priority Test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"091556bdc1d417f114fe4fca2c2f40f001e27c53","messageTitle":"[Logic] Fixed issues that was preventing users from editing tasks, if there were more tasks then persons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"276b45707fdfbde1a24aa97c9e273b0803adb9d0","messageTitle":"[Logic] Removed problematic guard clause","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"d4a236b6539fe69dc47696eeeccd1c68443448e0","messageTitle":"[Model] Added extra space to make the printed task look neater","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"234ebd211158bdf1977f1c89a45454f22d2edc04","messageTitle":"[Model] Improved validation for priorities","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"85b81c1caac0e1df9cad8afcb2e43e3e3f9e076b","messageTitle":"[Logic] Reduced coupling by removing the need for the Priority object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"f5029fc8d5e7f39721ce76d663eaf6b2ecd7b609","messageTitle":"[Logic] Added extra message for invalid priority find values","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8f1e727207b5c8fb920013cd0e23070708db3cd3","messageTitle":"[JUnit] Added tests for TaskPredicate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":0}}},{"hash":"dcf122ed7a8fa5bc698264082d522bd3bcb4b8c5","messageTitle":"[JUnit] Added a simpler constructor for cases where state/priority checks are not required","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"55308142d1812b23b712e42c780aa6217e91343c","messageTitle":"[Logic] Renamed Prefix for \"iscomplete\" for clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4d19fc6cad5be25f9afe1199b0461379a0fabc10","messageTitle":"[Docs] Updated UG with more details on how to perform a more specialized search","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":1}}},{"hash":"1e9c801a4ca27f9c2e40ed96440403f085d70868","messageTitle":"[Docs] Further updated UG with additional restrictions on Find","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"4ad2c5b78c6279ed327e17c0e6133e8df2ea828f","messageTitle":"[UI] Added sample fxml file for Task Panels","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":39,"deletions":0}}},{"hash":"9ebc75f3b8fa8322692b3df25cd55b90d70fe4b4","messageTitle":"[UI] Added basic functionality for ViewTaskPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}}]},{"date":"2017-11-04","commitResults":[{"hash":"658cf7fb6d51e9e7d7e1858288658485d834c736","messageTitle":"[UI] Added switching function when a task or person is selected","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"c6a21451090179dbd31208489442153d90f9520f","messageTitle":"[Commons][Events] Added a new event to handle task selection, as having both the task and persons panel subscribe to the same event will cause errors in the UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"5bcca0eecd3ce18d47eae078d2f09c1c3c42c95b","messageTitle":"[Logic] Added functionality for task selection to SelectCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"9f9bff68bbddd102c63d0dea0024909821478d29","messageTitle":"[Logic] Added functionality for task selection parsing to SelectCommand Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":3}}},{"hash":"a9da60b8d93cfee976713c8ff05af6f7a62812cc","messageTitle":"[UI] Changed the event catcher to a different type, to prevent conflict when attempting to change the browserPanelPlaceholder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"788330c2f4605877daa96fccf33f9f274ef110e8","messageTitle":"[JUnot] Updated existing changes to reflect new structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"fe078d873730fc105957adc6b0573a1d9a3e4b49","messageTitle":"[Appeasement] Removed method with empty body, and reorganized structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":12}}},{"hash":"936d14f429619cdc4784c53dd0957ac10b96dd2b","messageTitle":"[JUnit] Added tests for SelectCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"075f2c7438ec6f143385bead932c545f42d9fb04","messageTitle":"[Logic] Added new command result for task selection success","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"b41940b4b2d2c7d51b83bcf03236bf1799cdd47a","messageTitle":"[UI] Made the main window subscribe to locate events as well to solve the panel not clearing itself when locate was requested","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"744aa2eb382e38fae2c51d4f03ca55e1a1eff25c","messageTitle":"[JUnit] Added more tests for Select Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"4142cfe76f350065435467f40d127a7c0ba9995d","messageTitle":"[JUnit] Added more tests for Select Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":21}}},{"hash":"1ae22f4df65454e9c2ac3a2f0ef3dc0cc17f771b","messageTitle":"[JUnit] Fix naming issues with the same variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c27ab373a53ffa1bfe450d73785759a9f8816bc2","messageTitle":"[Events] Added a new event to handle task updating, when the selected task\u0027s change state button is pressed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"7af3f5db783c8c5737a3599dfbe7c93d6941a15c","messageTitle":"[Model] Added new methods to obtain the printable string for a task\u0027s state, as well as a method to invert the state","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"e887408a9da8b7ea69c7afb12e440a9b632cb149","messageTitle":"[UI] Updated ViewTaskPanel with new fields, and implemented functionality for switching task states","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"c449845013055973b7b2abe45afda42c6836cdd7","messageTitle":"[UI] Added new event subscriber to update the model when a task state is changed via the UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"66e80c9cee182a06331599c642fc9a912d115382","messageTitle":"[UI] Added new labels and changed button ids for ViewTaskPanel.fxml","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2}}},{"hash":"003e9a01c0b6aaeddc7beacd70849b099054d246","messageTitle":"[Storage] Added support for storing assignees","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":1}}},{"hash":"6d4a119b0c84c394d0953a87e5a69130fe317eac","messageTitle":"[Model] Changed the way assignees are handled, since assignees now only takes in the indexes rather than the full person","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"862b4f5c31bb997423deeffd2fc20aa3695955fa","messageTitle":"[Model] Changed assignee data structure from Readonlyperson to Index","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":13}}},{"hash":"b228ea76af4f3a1ca7249208c132d3e7e0785ac2","messageTitle":"[Model] Added new method to convert ReadOnlyPersons to Indexes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"670ed98955339997d7fa2ee259f03a800d02505e","messageTitle":"[Collate] Added missing collate lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"e11824cae5d73aadbb2a5725a13b2ca35ad13a86","messageTitle":"[Logic] Fix incorrect prefix, and simplified createPersons method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":7}}},{"hash":"af6f3c844d8fe48d6cb96280c84f1e2677384276","messageTitle":"[Model] Added method to extract person indexes, from the persons themselves","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"ad639b1d248fc8841744b7507b7ad1b1b0694f1a","messageTitle":"[Model] Added assertion statement to make sure the person is always there","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2017-11-05","commitResults":[{"hash":"052dfba021c8ddf81f0245fa6d805dab3e6e5535","messageTitle":"[Logic] Removed the need to have prefixes for all fields except for name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":40}}},{"hash":"a190141b922c70282fb0922704d7e829918768e3","messageTitle":"[JUnit] Removed obsolete tests since missing prefixes will not throw parse exceptions any more","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":24}}},{"hash":"a5f931cc5ba40f277649637d9d1f93d8f131f0b2","messageTitle":"[JUnit] Removed obsolete tests since missing prefixes will not throw parse exceptions any more","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":12}}},{"hash":"a897bd0745c8bfe418ff22a47a0dbae2bc59ba09","messageTitle":"[Logic] Made Assign, Dismiss SetComplete, SetIncomplete undoable commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"33503b6ea147917df7087d88c3469aeed1bd69f0","messageTitle":"[Model] Added new constructor for Assignees, as well as a method to handle the internal list, whenever a person is deleted.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"6dd191e0f1d69863a528864e9162839c75b065dd","messageTitle":"[Model][Task] Added internal methods to clear assignees to Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"a61ee3ad521fbefe44cf3e6d075abed9d1196103","messageTitle":"[Model][Tasks] Added new methods to handle assignee removal","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"7331709ef571d1bff28841de5c94f8ab1f9232cf","messageTitle":"[Model] Added new method to handle assignees change when a person is deleted","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"84a0647ebee3a364cb479b88d4770ceccec0dcc4","messageTitle":"[Model] Fixed bug that was causing assign, dismiss, setComplete, setIncomplete to fail during an undo operation. Also added functionality when a deleted person could potentially affect the assignment list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":17}}},{"hash":"87716292d759a9dd8fad266378642fc7c1f91f56","messageTitle":"[Model] Added a new method to UniquePersonList that keeps track of how person indexes move during a sort operation, as this will be needed to update all existing assignee lists","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"764753a8b2d65ec44422b6caaed688b726de59eb","messageTitle":"[Model] Added new method to Assignees to update the internal list after a sort operation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"7c15620bf6e0ce17d5b67f5b909e2f4b8e73f522","messageTitle":"[Model] Removed unused methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":7}}},{"hash":"909c322b2aca9fcbed9855a2890fa7d5ac501c27","messageTitle":"[Model] Added method to update all internal assignees list after a sort operation, and fixed problems that caused undo to fail","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":1}}},{"hash":"d27ee33e40ff2d702504e5f00c76e36722f45184","messageTitle":"[Model][Addressbook] Added new methods to get the persons-mapping from a sort operation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"c3bb17141c54828944ff03f642bd666fcc313f9e","messageTitle":"[Model] Expanded on sort functionality to include support for assignees","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"48fcbf98e6209f661f6bc9cabe7956a6b7daf036","messageTitle":"[JUnit] Updated JUnit test for Assign command, as previously the model was not updating properly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"6ea0c3797d614840b852bde1414d5fb6ca41807c","messageTitle":"[JUnit] Updated dismiss command tests: the model component was not being checked previously","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":15}}}]},{"date":"2017-11-06","commitResults":[{"hash":"e5f81c41d5b6390006e2fb275fde4f0efe42fe5f","messageTitle":"[Model] Fixed incompatability caused during merging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"7ab282252a30baf1312cef95bb46c1c645df544b","messageTitle":"[Model] Removed condition check for name, as an exception would have been thrown earlier if it had failed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":4}}},{"hash":"a9005bfe540744a8ac44488c9cf6242af58b8c23","messageTitle":"[UI] Removed the anchorpane that was originally meant to display the assigned persons as displaying all assigned persons will now be done in a different way","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":49,"deletions":10}}},{"hash":"fc79accb9f84c1d5cb5ea52aba93a557c986c04b","messageTitle":"[UI] Replaced convulated method with lambda","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":9}}},{"hash":"b541042a16ee5b0f0b47a3fb6f557383f0064dde","messageTitle":"[UI] Added CSS styling to ViewTaskPanel for better readability","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6}}}]},{"date":"2017-11-07","commitResults":[{"hash":"1b74b4b5f28303c76a527cf7394c2f91d23e22ce","messageTitle":"[UI] Added ViewPersonPanel.fxml for displaying person information in the browserpanel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":117,"deletions":0}}},{"hash":"e3bcf251a62ad7e95e6a1525ead29a69e32b4225","messageTitle":"[UI] Edited Javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c6c0979fe1bad828a11fb314c7e9ceb0a5121378","messageTitle":"[UI] Added functionality for ViewPersonPanel, except for favourite status display","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":196,"deletions":0}}},{"hash":"d888f6ba920fe58a0edc3ca7676e0d7d74e916ff","messageTitle":"[UI] Added viewPersonPanel into MainWindow, and changed the event handler to display the viewPersonPanel when a person is selected instead","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"2dde1a036b876989e2f8127974a48fba1127d74f","messageTitle":"[UI] Removed personPanelSelect subscriber as selecting a person should not cause the browser to be called","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":6}}},{"hash":"c6b1c23998b0b3e8cdbce50f4a96aeeb68ec5b8d","messageTitle":"[JUnit] Removed checks for Google search URL as the person-panel no longer performs a google search","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":15}}},{"hash":"9fbb474aa079e7edfe0765889e50b3ff0b5cd0e2","messageTitle":"[Docs] Added portfolio page","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":166,"deletions":0}}},{"hash":"9257092912abeb85e8f0958d62133597b1192e44","messageTitle":"[Docs] Rephrased DG for Task implementation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":27,"deletions":29}}},{"hash":"a0c793f89d374d11082453864879def913ef1418","messageTitle":"[Docs] Added tags for portfolio page including purposes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"4d77a98edb79b3340565637afea729cfdd012b1a","messageTitle":"[Docs] Added extra include statements from UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":0}}}]},{"date":"2017-11-08","commitResults":[{"hash":"e3173c342e1cd7d1851b1f7b289de301d347c0e7","messageTitle":"[Docs] Added portfolio page","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":166,"deletions":0}}},{"hash":"bc6c88e237c7c783d4bdc86e40b34351133b63f0","messageTitle":"[Docs] Rephrased DG for Task implementation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":27,"deletions":29}}},{"hash":"d9a85d44f48a21769140a3a9563ed400531e34a7","messageTitle":"[Docs] Added tags for portfolio page including purposes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"02585ed1c2b9ed9df238067803e7b13cac375fec","messageTitle":"[Docs] Added extra include statements from UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":0}}}]},{"date":"2017-11-09","commitResults":[{"hash":"b67a79659aad7fb65aec5e9b18205dd70a776e8b","messageTitle":"[Logic][Optimization] Split existing commands that handle both persons and tasks into one that handles persons, and one that handles tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1072,"deletions":0}}},{"hash":"b6ece609c48af79ef7b18498b90c4756d5c1a4ba","messageTitle":"[Logic] Split commands into commands that handle only persons or types to preserve SRP, and made the superclasses abstract","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":928}}},{"hash":"836a9f64242c4e44b15b7d2e883f7dd957f5bdbc","messageTitle":"[Cleanup] Simplified code and attempted to remove some warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":20}}},{"hash":"a75ac997b34ba76cbfe4e6f574ea2dd5f356df5c","messageTitle":"[Collate] Moved collate line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"e4bb24a4102f5124a86e8a4aec7895b3fa7d88d0","messageTitle":"[Logic] Updated parsers affected by the split in commands to function properly, and resolved some warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":35}}},{"hash":"f0c80dd8af2453a983062e054a7101d4ac4c9098","messageTitle":"[Cleanup][Logic] Edited inaccurate Javadoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"7e9a4adf8c0b3d387bacde818289d831d241cf3f","messageTitle":"[Refactor][JUnit] Updated JUnit tests due to split in command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":392,"deletions":412}}},{"hash":"ada644ed54ea8ee3af2b7979c8928233e1cc97f4","messageTitle":"[Refactor][JUnit] Updated JUnit tests due to split in command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":137,"deletions":133}}},{"hash":"3eb34b8b3ca48b7caf68cca6d2aeaac202de8421","messageTitle":"[Refactor][JUnit] Updated JUnit utils due to split in command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"8377bc3260d4898a2a4475f861f04b5f1c191ca7","messageTitle":"[Collate] Collated file auto-update","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"f9a7adb860ddbc0cf1cc3cd65a6e6cf09c8edc95","messageTitle":"[Appeasement] Removed unused variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}}]},{"date":"2017-11-10","commitResults":[{"hash":"47373107ec5fb5c96b07644c2b6eb3d34acf8812","messageTitle":"[Logic][Cleanup] Added extra prefixes to the usage instructions for commands that require either the task/ prefix or the tag/ prefix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":24}}},{"hash":"2c3cb2c0419ddc564d989421023b24fcace56e13","messageTitle":"[Logic][Optimization] Split parser classes into separate parser classes that only handle 1 type of object, to preserve SRP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":540,"deletions":0}}},{"hash":"2f32ded2ce50bb536913b13b74418076d547424b","messageTitle":"[Logic][Optimization] Split parser classes into separate parser classes that only handle 1 type of object, to preserve SRP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":388}}},{"hash":"446e4c3254eb3068ccb5d24bcba1df9899226fec","messageTitle":"[Logic] Changed the prefix of task to task/, as it was possible to cause commands involving the word \"task\" in a person command to fail","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"7d2005f2c6ccaf1a922cad46b2e49c5571017c35","messageTitle":"[Logic] Removed redundant switch-case statements since AddTag/DeleteTag/EditTag/FindTag now share the same command word with their Add/Delete.. counterparts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":20}}},{"hash":"40bc1f6e67ba432da52397b0051b52f5318e5608","messageTitle":"[JUnit] Updated JUnit tests that were affected by the Parser split","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"2d3b4a275e7a75d023b4d0bffe766dbcc6a76b73","messageTitle":"[Logic] Added clause to remove the tag prefix when it is detected","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"3c3ca138d127f83fdc3fecc62da722fe7b32a7d0","messageTitle":"[JUnit] Added basic test suite for Add/Delete/Edit/Find/Select task commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":539,"deletions":223}}},{"hash":"1ee1481155c362834e6275e175c901fa83d8f662","messageTitle":"[Logic][Fix] Fixed problem with predicate that was causing the find command to only look at the first value","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"115e734d2bf0a949e6fc3165dbb38d090cf2e09e","messageTitle":"[JUnit] Moved ModelStub to a new file since other tests will be using it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":171,"deletions":0}}},{"hash":"dfd16737bae4dd248f77d0cac8cb0bee00ee799c","messageTitle":"[JUnit] Added new line for invalid task names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"3519bee7cc9a0c3802d01ea1928addd2545c55b3","messageTitle":"[JUnit] Added basic test cases for Task-related commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":393,"deletions":108}}},{"hash":"0ed7fc31fb5455290b705a9be017ebadb4a0946d","messageTitle":"[Cleanup] Renamed MESSAGE_TASK_USAGE to MESSAGE_USAGE, to match all the other commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"2587d879d8a21db3b6fae0f7ba5bba0a5526dcfa","messageTitle":"[Cleanup][Fix] Added extra line to remove the task prefix when editing tasks, to solve the problem where users had to type \u0027edit \u003cindex\u003e task ....\u0027, which did not follow the other commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"7bdc6596de0cdfa37f1c5240e89f76fcf8543906","messageTitle":"[Appeasement] Taken measures to appease Codacy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1cc6ba8e08b6c3a4a759a92aa767eeec4a077cb4","messageTitle":"[Appeasement] Taken measures to appease Codacy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"3e5029f65deb73e8860448961a837dffa8963b28","messageTitle":"[Logic][Optimization] Split Clear command into smaller classes as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":49}}},{"hash":"0b2d8e8adbf563e5b20365b547fec2a65f74b851","messageTitle":"[Logic][Optimization] Updated ClearCommandParser accordingly after splitting ClearCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"bce33f3d8311e05dbb520c8f8964cee005bc4e5e","messageTitle":"[Cleanup] Removed print statement from Task predicate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"059ed0440dae269ceced2b6b1e40ad9d88758f4b","messageTitle":"[Cleanup] Replaced for loop with for-each in Task Predicate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"e14c71e0dd81003f6a4e08cd459a13aaea0bf6c1","messageTitle":"[Cleanup][JUnit] Standardized some method names, and fixed misleading Javadoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":18}}},{"hash":"fb774976be6ee63fac7381cc6f0ac22586cf1c89","messageTitle":"[JUnit] Added new method to display only the second task (required for setcomplete/incomplete tests), and split Valid_favourite into Valid_favourite_alice and valid_favourite_bob instead","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"20adde0bb9936efa738eb064b444f2859bc9fb0f","messageTitle":"[JUnit] Added new test cases for Descriptor tests, to cover the new fields that were added to the Person and Task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}}]},{"date":"2017-11-11","commitResults":[{"hash":"5850782a442d75a130974e76d388790f84e41247","messageTitle":"[JUnit] Added new test cases for ClearCommand and its related child classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":7}}},{"hash":"46f958c2cb42bea4e1eef82abed60323b979f792","messageTitle":"[JUnit] Added new test cases for SelectTaskCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":0}}},{"hash":"82fb09a86047c1cd1382c8ed90e3f87253e085bc","messageTitle":"[JUnit] Added additional test cases to cover filtered lists for SetComplete and SetIncomplete commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":7}}},{"hash":"515c709017ae0c68a05bb5280bd40d569c6d071d","messageTitle":"[JUnit] Added additional test cases for SetComplete/Incomplete command parser classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"48461859fcc910966e4e33123439a29d70d17cfb","messageTitle":"[JUnit] Updated Clear system test that was being affected by ClearCommand splitting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"4a267aac5dd991043a85f398e3fab1476742d9d6","messageTitle":"[JUnit] Updated Favourites for TypicalPersons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"9cad268524339217c80adc61c9fe2022533ffa81","messageTitle":"[JUnit] Added state to 1 extra Task in TypicalTasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8c3279897448475136ea08c4c5c6421d42874eb5","messageTitle":"[JUnit][Temp] Removed duplicate tests temporarily","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":21}}},{"hash":"1083485eef328c4929e980631309f3dc49f977a0","messageTitle":"[JUnit] Added extra tests for Assign/Dismiss Parsers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":0}}},{"hash":"845471313df3567a5efd087a7c2b90a1d90f9dc5","messageTitle":"[Logic] Added extra statement to ignore \"\" when parsing indexes. This will allow inputs such as \u00271          3   2\u0027 to be accepted by the app.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}},{"hash":"a44b5a021e8a2257f9895b60ad75f28a2943c84c","messageTitle":"[JUnit] Fixed unintended test case passing due to the input being incorrect","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"82c4a8b797b43e514f8e93078f67baf394d5db90","messageTitle":"[Logic][Parser] Moved extractIndexes method to parser utils","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"c2ec8a6932666d472adc9c68d84505ad6f6d5249","messageTitle":"[Logic][Parser] Moved parseIndexes into utils and changed the reference, to solve code duplication issues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":49}}},{"hash":"de60f091d1936b62337982c98211552014bba5af","messageTitle":"[JUnit] Added test cases for unchecked methods in ParserUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":2}}},{"hash":"c66e212d6ca2aef9e0031f708f37cfc4650c8f20","messageTitle":"[JUnit] Added test cases for remaining methods in ParserUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":1}}},{"hash":"702983342132a7e8e2bbc60bbc54811c5bf87bf5","messageTitle":"[Logic] Added missing implement statement to ClearCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"150dcc0c4d7aa2bca158994ff8e349d04a872c07","messageTitle":"[JUnit] Added parser checks for ClearCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"922dc6e3cd1e8958aa24bf9de73c931f92cfa960","messageTitle":"[Cleanup] Fixed minor spelling mistake in PersonCard method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"874c207fea7f0b40f60cb2ade2c540d189f81fe9","messageTitle":"[Cleanup] Fixed minor spelling mistake in PersonCard method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"fc3dbf545eb6d3874fa526ba2a79559ace453345","messageTitle":"[Cleanup] Moved TaskCardTest to /ui instead of /ui/testutil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"c26f214d5795f63c40187d2a2a73177161a3705b","messageTitle":"[Fix] Changed default deadline, as the delay between seconds was causing tests to fail","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"d0d40adb018b68ee1267174cb5a64ab5246415b9","messageTitle":"[JUnit] Added missing methods to model stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"8193635ce2dccdeb366083da9ab476e697378bd5","messageTitle":"[JUnit] Added keyword for system tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"ec61f7546fa0d5b1f329e1df001ad9a4ae1548e7","messageTitle":"[Appeasement] Removed unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-11-12","commitResults":[{"hash":"1e2d4f58f4d55891e25fc8578b040889612d3916","messageTitle":"[Docs][UG] Updated UG to reflect latest changes, and standardized parts of the UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":440,"deletions":255}}},{"hash":"6c0bbdf2c79c68dfd5eeb6299cae3343244c541d","messageTitle":"[Minor][PPP] Portfolio page updates","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":1}}},{"hash":"a287435bcf2165f617a65ffa680298b9438896dd","messageTitle":"[Logic] Added a new command to allow users to see all the persons assigned to a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":0}}},{"hash":"2203ad805d6ca86aa36f6e9200136ee1bcc7fb62","messageTitle":"[Logic] Updated AddressBookParser to allow ViewAssign to be performed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"8e4cff2516f427f5ebf156263fa39cfd76df5469","messageTitle":"[Logic] Added parser for ViewAssignCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"2d39ff0a418b85965cdfac4892fdd33475cbfe21","messageTitle":"[Model] Added new predicate that matches a person if they are exactly the same as one of the keywords","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"2ef5ce83c3a20a80bd7e5747a8bc97d1dead2d9f","messageTitle":"[Model] Added new method to view all assignees","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"7aa9086782e059cd2947c59abc360df01a6b7a66","messageTitle":"[JUnit] Added tests for ViewAssignCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"26013372558e1ffc4f822c3403ea2c3321681eaa","messageTitle":"[Model] Added statement to check if at least 1 person was dismissed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"35722f607995528c45366aee7935ee955d0700d6","messageTitle":"[Model] Changed how dismiss works, it now returns true if at least 1 person was dismissed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"e0521002558113c2cdd04e860f2d16016681b924","messageTitle":"[Model] Solved issue that allowed users to kept seeing message successes, even if all the specified persons to assign were already assigned to a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"2a262cb08d594f857e34b9065c81aef1581c7b11","messageTitle":"[JUnit] Updated model stub with missing methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"42744a8aaa59f0fb5b6d49b72f4b13a69bbc5f07","messageTitle":"[JUnit] Added test cases to cover the situation where the internal assignees list does not change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"b8135fb2d36e862132ee40dd58710a78a8e17982","messageTitle":"[JUnit] Fixed broken Dismiss tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":21}}},{"hash":"b8bb0b855fb53fe9f3460443fd87b7d836ffecb6","messageTitle":"[JUnit] Add tests for ViewAssignCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":0}}},{"hash":"c1f583bb968299f586f07f501dda30951438bd92","messageTitle":"[JUnit] Updated TaskBuilder with Assignee setters","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"381df04ad39e927c98d1941b74858945cf2cc5fa","messageTitle":"[JUnit][Util] Gave some tasks assignee values in TypicalTasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6d2a27a65460fe6e8075086ba8d96dd1a22bc3c5","messageTitle":"[Docs] Updated UG with viewassign","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":34,"deletions":1}}},{"hash":"000b3e7252a887c0a58d851fa5cd42526e3061b3","messageTitle":"[Collate] Added collate marks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"a8015588397ff019651afa17abb7dedf0a508796","messageTitle":"[JUnit] Fixed failing tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":6}}}]},{"date":"2017-11-13","commitResults":[{"hash":"5e4ad0227cb90082b559dc9f5ecf73a2f85a951d","messageTitle":"[PPP] Update portfolio page","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":73}}},{"hash":"abe40b01799bf40ef967170e43704ad4c9f49fe0","messageTitle":"[DG] Transferred extract from PPP into DG instead","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":55,"deletions":0}}},{"hash":"b613f162e5d814bfcc9aabe4501270c950bde55e","messageTitle":"[Img] Updated AddTask sequence diagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8387e433cce2a0b4e912c87077fc413a701730d7","messageTitle":"[Img] Added diagrams for Assignee index changes","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9b760d5b7eb4528088f09493ab44ee27e67213e1","messageTitle":"[Img] Updated existing architecture diagrams with latest information","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b1e6cb84b8840da6cb81eb2a925df49acae2fad1","messageTitle":"[PPT] Updated existing architecture diagram pptx slides accordingly","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8eb7edaeec468b7b757aff0a33f3d7d62b642853","messageTitle":"[PPT] Added pptx slides for AddTask, and diagrams related to Assign/Dismiss","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"477762dcce2f1835da5983190964cc771dd62c7f","messageTitle":"[Fix][Tasks] Updated constraint messages for Priority","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b950231d62945873a9c7456966a14fdf13e9f0e2","messageTitle":"[UG] Updated add task section with new priority values","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}},{"hash":"46491f6021fe4678177c8e3d09cac119394fd83e","messageTitle":"[FXML] Removed redundant fields from ViewXXXPanel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":23}}},{"hash":"75f559d8df66fff2b100c9c288bf4f5f895885e5","messageTitle":"[UI] Added extra subscribers to clear list selections","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"f8f481858739170d1f3d95630c8e2e75fa25a228","messageTitle":"[UI] Removed redundant fields from ViewXXXPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":49}}},{"hash":"7d18f90d688567296739e04ac9eb59bfc951bba0","messageTitle":"[UI] Removed handleTaskStateChangeEvent, as the event will never be called now","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":16}}},{"hash":"b3c64dd9ba2a3d06087015ffe1374a661342a0b8","messageTitle":"[Event] Deleted redundant event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":21}}},{"hash":"6b3c68a2c773adb2e014519e7397dfd750077dda","messageTitle":"[UG] Fixed minor errors in the user guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":50,"deletions":15}}},{"hash":"66901bb08ba02653adcd8712e8819a52172f135f","messageTitle":"[Appeasement] Added EOF","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"721089060321c40f7e29f94bb8eedbb46afb58e4","messageTitle":"[Docs] Renamed PPP","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":0}}},{"hash":"1889f50f076772f1bcbbe20022b7ec836c2e0de0","messageTitle":"[Docs] Added Class diagram for task, and added labels for diagrams","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":0}}},{"hash":"e8895bc3b04286b87a0c74cbabd2d896cbe31d33","messageTitle":"[Docs] Updated optional data section","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":18,"deletions":5}}},{"hash":"79fc87fa7e1b338685a251aff1009c3fcd9dafae","messageTitle":"[Docs] Updated Aboutus to reflect naming standards of IVLE","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}},{"hash":"8efe41ec3a635349fe8cecd6d44c2cbe23ca366c","messageTitle":"[Docs] Fixed hyperlinks in ContactUs page","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"5dade24889f0b1186e4c33f5f792518fd7d70697","messageTitle":"[Docs] Updated components section","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"1fb3a081f49db12c50f09b719440d64bf53305d8","messageTitle":"[Docs] Updated cheatsheet","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":0}}},{"hash":"8b9ef6cc909c886bebb8a14c81c2f1e864965b69","messageTitle":"[Collate] Added collate links and attempted to do basic refactoring","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":5},"java":{"insertions":85,"deletions":95},"adoc":{"insertions":1,"deletions":1}}},{"hash":"3d05e9598f3132c809cc1ee1903060a521e1bc8c","messageTitle":"[Collate] Added collate links and attempted to do basic refactoring","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"95aec8300a020c775d272d4f230d4ff5409793ef","messageTitle":"[Testing] Added sample data for manual testing","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":377,"deletions":0}}},{"hash":"ce0f21e25bce5209127352d9fd5e33a1e5901de5","messageTitle":"[Img] Added class diagram for Task object","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d09c817f2bd3d60f0159f59865e099272a082da9","messageTitle":"[Collate] Re-collated files","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":652,"deletions":39}}},{"hash":"b62fcd5055abf8243f6991bdb0e7c51fc1ea0d9e","messageTitle":"[Collate] Re-collated files","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1788,"deletions":73}}},{"hash":"a917bec2a919953826e42c98a935470b31f8131e","messageTitle":"[User stories] Fixed some duplicated user stories","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":13,"deletions":18}}},{"hash":"bcd5a45799c953cc7cf7e0b767c87a7dd9b1eb44","messageTitle":"[PPP] Removed some problematic include statements","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":1}}},{"hash":"cd714ccf51c7d0b562863f0e8f5e77de6818458d","messageTitle":"[XML] Updated sample data XML with some private information","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":4,"deletions":4}}},{"hash":"bad79fbbc558114d36d2b3d000a57f3169218b57","messageTitle":"[Logic] Updated usage messages with optional brackets","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"2e43a1dd2ee6537657fc6b35c6e40939091ede15","messageTitle":"[Docs] Added \"since\" tags to UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":10}}},{"hash":"a25d2f318b77a257fcc15a73b1808f68973ab2b7","messageTitle":"[Testing] Added test scripts","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":967,"deletions":0}}},{"hash":"233870bee46870d8733d949bb3d384e430ba335c","messageTitle":"[PPP] Added extra include statement","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"e4c72979eb47b569ce8357f2f7623e501b93dbfd","messageTitle":"[Appeasement] EOF issues","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":1}}},{"hash":"5b51e4ba180193fcd20607a9d5bd8cc1fe054d6c","messageTitle":"Minor text adjustments","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"67f889b283d05162c9b6359b4f7a899a8cdec36c","messageTitle":"Added missing labels","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":17,"deletions":0}}},{"hash":"21bc243ca3707e0a8bf6436983896cefc6662a41","messageTitle":"Updated collate","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}},{"hash":"968ec2a0fd6edef7e38e080f11c139372a4a9be7","messageTitle":"Updated PPP","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":5}}}]}],"Lin Han":[{"date":"2017-03-10","commitResults":[{"hash":"297506b87fabe6de6baa7901388039ec50199802","messageTitle":"[#308] UrlUtil is unused (#325)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":76},"md":{"insertions":1,"deletions":1}}}]}],"Jeffrey Goh":[{"date":"2017-10-01","commitResults":[{"hash":"c09066472339c25b85f2e4d063f7105ad5a13084","messageTitle":"[SETUP] Update CI, User Guide and Developer Guide URL","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":6}}},{"hash":"935504a610cf33eea499d085c29068bdd8926672","messageTitle":"[SETUP] Update Appveyor link","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-02","commitResults":[{"hash":"91e7bb480da830d2b921d6524a1259e781f1273e","messageTitle":"[W09-B2] Add User Stories","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":43,"deletions":1}}},{"hash":"f470752973f5f97d1b3e10c4ea3ff2f27cae43af","messageTitle":"[W09-B2] Remove \u0027More to be Added\u0027","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":2}}}]},{"date":"2017-10-03","commitResults":[{"hash":"4c3b1318b6d20aebb7d3dc672e5cf3f2ce9b70d7","messageTitle":"Add Open and Save As Buttons into UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":12,"deletions":11},"java":{"insertions":46,"deletions":0}}},{"hash":"7cd5d94d6ead420f3e46c79d0b41e4827ef25ffd","messageTitle":"Add Icons to buttons","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":36,"deletions":4}}}]},{"date":"2017-10-04","commitResults":[{"hash":"9a9c49d8b8b53a4e179f44c9987193b54fcbc648","messageTitle":"Add Method to change file path of save file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"da0b9dfd2e724d4edcbbbe294262e182694b6fa6","messageTitle":"Add windows for Open and Save As buttons.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":5}}}]},{"date":"2017-10-08","commitResults":[{"hash":"ca3063fc1ecffa27f04deac48d11d39178eac890","messageTitle":"Add Open and Save As Functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":4}}},{"hash":"47b46c20f582fc0558c5b99cce394862ddf2d64e","messageTitle":"Add Keyboard shortcuts for Open, Save As and Exit","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"java":{"insertions":17,"deletions":5}}},{"hash":"ca565565c66ad4af7d28adfc78c499e547b87fd3","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"5b341908ad01f403435675d4e0fb1bb1d8f15137","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":0}}},{"hash":"61b2be798bb0b5033ef20bfb228e3a65ed07fcb2","messageTitle":"Fix Typo in User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"9fec4bea54a7749851cad7d58c88a5b2c5cf336f","messageTitle":"Remove whitespace in User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":47,"deletions":24}}}]},{"date":"2017-10-09","commitResults":[{"hash":"78a0f49ff728957fe8fc1a4fe7b761276eb3e8c3","messageTitle":"Update Travis link in README","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-10","commitResults":[{"hash":"61bd76dd06647d37d025a0aece46ef14d479a9a5","messageTitle":"Add Browser, Privacy and Budget to User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":82,"deletions":1}}},{"hash":"629a84b2b5ad7da0a591512c08fe9af27e268526","messageTitle":"Update Travis and Coveralls link","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}}]},{"date":"2017-10-11","commitResults":[{"hash":"af2b5179f22243e1ee8f470f99fb4db6a3e911e5","messageTitle":"Add shorthand for sort","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"0a0f3019b5babd56c157c849f91b0d7a0fdff800","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"99c376754e29ae99eabe79f1d9ba157ee89e19ba","messageTitle":"Modify Sort to be Undoable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"a9ff3373b1a8c0f5997b76a73fa5107f159febcd","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}}]},{"date":"2017-10-12","commitResults":[{"hash":"e917c3effd3547a33ce08cb90ea9c46aa23817cc","messageTitle":"Add SortCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"4d9ca2fbee7fbafaa575e7034dba5ced8ca63013","messageTitle":"Remove unused import statement in SortCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2017-10-13","commitResults":[{"hash":"f951ee3886aa6545c2cd4260e82b036eff413164","messageTitle":"Update SortCommandParser test case","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"a005ffe3776b054a06959f3123db72b773fe262b","messageTitle":"Add isPrivate to all Person fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":5}}},{"hash":"a0ed7556afc3f361347ddf2909915dd48f5f63fd","messageTitle":"Update XmlAdapterPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"ad59c6609bcb82dae1bb4cca5be0c611e7d3784a","messageTitle":"Update SampleDataUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"3fde991506b189e4c45e0f35f49e16b440155ccf","messageTitle":"Modify AddCommandParser and Prefixes for AddCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":2}}},{"hash":"220b4c0d42f77f440bbf2c7931cc04ee8ebe2c88","messageTitle":"Modify AddCommandParser to parse private data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":17}}}]},{"date":"2017-10-14","commitResults":[{"hash":"a246ad2d45ee0dd71052df3564fb0ba286260977","messageTitle":"Modify constructor for Phone, Address, Email and Name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":8}}},{"hash":"3af55f438c5be21029a6d2fb3c32c5d59afe2f5f","messageTitle":"Modify constructor for Phone, Address, Email and Name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"77ed32c36d6133ff5e3efda6a928562fbc94b48e","messageTitle":"Modify ParserUtil and XmlAdaptedPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}}]},{"date":"2017-10-15","commitResults":[{"hash":"55b3155b4f864147a1da5f2a2d76711023f86a37","messageTitle":"Update getSamplePersons in SampleDataUtil.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"0c32011671b1a5d1d5c5459d7eeddc52357acc48","messageTitle":"Add saving of privacy in XmlAdaptedPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"c950c60ac8fca789a609baf4a4ab58d8eade41ed","messageTitle":"Modify toString in Address, Email, Name and Phone","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"695cbc1b081e8ea9f9dd1ac718145fecbb0e2087","messageTitle":"Modify EditCommand to not edit private fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":4}}},{"hash":"ab8dfc398fc5fdc342e7196ac6a99fa0b94922df","messageTitle":"Add ChangePrivacyCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":0}}},{"hash":"4b5b6327eafe96c14ca86037c465a050c1acedd4","messageTitle":"Modify ParserUtil to fit checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":24}}},{"hash":"25c9c8bfba000b770ad057d131a0698e87196bcc","messageTitle":"Modify PersonPrivacySettings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":17}}}]},{"date":"2017-10-16","commitResults":[{"hash":"44012dcf69bfe7709b4491057a21ce0194d5853a","messageTitle":"Modify toString output for private fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"12207e66c3f9e500cd9beb56a7ed53208c7e5f08","messageTitle":"Modify BrowserPanel to print a message when searching private name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":2}}},{"hash":"a393f8b1840ccc12a2756ccff7a456f92c084430","messageTitle":"Fix Typo in BrowserPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0f6b61f84eb3e65b8c1cbdfcff802a6e5f5f7d7f","messageTitle":"Remove unused Constructor for PersonPrivacySettings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"821a743d3ad798aab890da8b179cb432e170dcca","messageTitle":"Add Test Case for private Address, Email, Name and Phone","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"1b3a040c8b8d1137d12655e9107f30a9a09c725e","messageTitle":"Fix checkstyle for import statement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"09649191745d26a5d268bc816b32d45ea1e27219","messageTitle":"Update EditCommandTest to test for private fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"04c44b57a5e552107c8100a1f6efa04911433475","messageTitle":"Fix typo in CommandTestUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"6a2127e65e149b793f4236fa07e303869b9e58d3","messageTitle":"Fix bug in EditCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]},{"date":"2017-10-19","commitResults":[{"hash":"b7b4a4c343b2d78bb502b1d923977dacf354e0f2","messageTitle":"Update UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":0}}},{"hash":"ecd4d5f59d5767056c7594ba8260c527c7f401ec","messageTitle":"Update Architecture Diagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2826aa61a7fe1b818c0353cec1ade14caf4f8017","messageTitle":"Update UiClassDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6a0f912f5bc70cd23097020ff89f1fc1fe6b88f0","messageTitle":"Update DeveloperGuide to include Privacy of fields","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":78,"deletions":0}}},{"hash":"dea77048cbe8211a92817cccbb48157438352818","messageTitle":"Fix White Box bug in UI","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":1,"deletions":0}}}]},{"date":"2017-10-21","commitResults":[{"hash":"c9839aa20e5763060966554119ca23be1b54e3f7","messageTitle":"Update Developer Guide with Sequence Diagram","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":40,"deletions":2}}},{"hash":"f2b9c8ed033b0e6dc42d35afb73958d7aebeafaa","messageTitle":"Modify AddCommandParser to use correct method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2017-10-22","commitResults":[{"hash":"32963115e25ed5c6016e73a66f39b9c9e5c48f72","messageTitle":"Add ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":0}}},{"hash":"169a86fadae125d598cbd246cd41d3506ffeaebd","messageTitle":"Modify ChangePrivacyCommand to update Model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":7}}},{"hash":"4acbf4d377ed4dc85ef70e6fb30409def2ec3e42","messageTitle":"Fix bug in detecting parsed values in ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":8}}},{"hash":"435d7fb034cfc964f055cca5eb1fe957d1877379","messageTitle":"Update AddressBookParser with ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"299f15b14be3e5899a792efbb05b818b3f57fd75","messageTitle":"Add interface for ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"bc6dc32f2fbf584354116019c99a3e1c15539475","messageTitle":"Update MESSAGE_USAGE in ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}},{"hash":"f9edef170ba4745efa6c5a1ed1b0fe78d939ac8c","messageTitle":"Add ParseException when non boolean arguments are used","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"5004a685199a7bf693f7ef47af43eb22ed166151","messageTitle":"Fix typo in ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":8}}},{"hash":"1e7761dcbdb2ce9253b61b496ef55e85362aaa17","messageTitle":"Add failure test cases for ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":0}}},{"hash":"0bf08e5a055fb3daea3b2466b84b1bc9079d73c9","messageTitle":"Fix checkstyle in ChangePrivacyCommand and ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":5}}},{"hash":"386c55e754576d0f72ba5cc3210c2e14fc768807","messageTitle":"Fix checkstyle in ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"abc329ce8f9e653ff737c1acbf475e9cda28e6f3","messageTitle":"Update ChangePrivacyCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":39}}},{"hash":"5cb6ef4416b80f7544c9fded61dbd9838f0d6079","messageTitle":"Update User Guide documentation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":34,"deletions":37}}}]},{"date":"2017-10-23","commitResults":[{"hash":"97ea849e50c04e757757d20e9255428f62eef440","messageTitle":"Add PersonPrivacySettingsBuilder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":0}}},{"hash":"cfc3d11d6d9b00d53c386747402540f207e7dae3","messageTitle":"Modify PersonPrivacySettings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":4}}},{"hash":"931b525571bf4e2dc8b6b8fc91cccd569cc05a89","messageTitle":"Add tests for ChangePrivacyCommand in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"947d2aeb9429f7e20846e13f55838986d251ffbd","messageTitle":"Update User Guide to clarify when there are missing prefixes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"7374ee8157292370d64abfe6c2d79f551c00339c","messageTitle":"Add success test cases in ChangePrivacyCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":0}}},{"hash":"b6ce1a177ccdaedf4462001fb3b3f8bddc67e875","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":16}}},{"hash":"9af5511c17f741ba18cdba39aba27e712d082cd9","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"e96fabe6813c3b008bebf831f6684d397a96ad43","messageTitle":"Rename getter methods for PersonPrivacySettings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":16}}},{"hash":"6eaccb0d1e468db952c34bd8aeaff76251f8475b","messageTitle":"Modify tests to follow new getter method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":28}}}]},{"date":"2017-10-24","commitResults":[{"hash":"f8e4d48ff13f5b2db305ad9516b791e888aed1d1","messageTitle":"Add test cases in ChangePrivacyCommandTestPrivacyCommandTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":0}}},{"hash":"6260b88a7f3f20cd9a0ace4522c782152927aa6b","messageTitle":"Update SortCommand and SortCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":2}}},{"hash":"7fe738a431e0057ff305fec7aa6f30406e2d1a4c","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":9}}},{"hash":"651c7905d5a4249037766a17fcaa8229342eedf9","messageTitle":"Update AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":11}}},{"hash":"fd70c8b40963f928184de7a2246178eb6498b60e","messageTitle":"Update UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}},{"hash":"57c69b052730333361ddc4ed0b64909f961b0a5e","messageTitle":"Update AddPrivateSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9d857b51741087760bed480ac646496e9c66a5ba","messageTitle":"Add ChangePrivacySequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2b6be1acf3faff4d39e482cb2db9fed0f9f7e43a","messageTitle":"Update UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":0}}},{"hash":"fa92df7f620cf5027857028d36e51b6120693c14","messageTitle":"Update DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":33,"deletions":5}}},{"hash":"d2a782913e0a80e19b94645c2b7f4a52d06ae799","messageTitle":"Update ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"18fd4e1492539c5512ca2641ad0fbc31cd8493f5","messageTitle":"Update ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"2905bc27b37fcf23d4eb9af363a6defc126f73fa","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"fe25c7756c08e2b9c8c02e737f52869cfddec2be","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-10-26","commitResults":[{"hash":"4655ce328880debefe242e5edc85589ec65c8653","messageTitle":"Fix bug in ChangePrivacyCommandTest and EditCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":7}}}]},{"date":"2017-10-28","commitResults":[{"hash":"1db5a4877a9a8bddba108232fc2de5318d77e325","messageTitle":"Update ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":2}}},{"hash":"d987608fa46d2e29564e440ff64f13c475198f31","messageTitle":"Reector parse in ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":6}}},{"hash":"49e9412ef3360d282661d4f771633bde1ce13493","messageTitle":"Add LocateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":0}}},{"hash":"8e8bef8e871db2e6ca3116ed586d3b5499dd28d7","messageTitle":"Add LocateCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"bca1cac79a6f2cc13caa7d4619a5d1f0c11aa0d5","messageTitle":"Update BrowserPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"ef9c460250b1b6f2462687337c4d4752614a2dfb","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"93685ec30564696c98699b33e9604395a167b26d","messageTitle":"Add javadoc comment to ChangePrivacyCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"9e1dd5feaead1e4c8892b38c7191b4cc41f0adb8","messageTitle":"Update AddressBookParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"3235df568742f0048df50e96f2e869d4342bd545","messageTitle":"Add BrowserPanelLocateEvent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"0c4c509a4866a1fbd9cac23e5e027e39ff2e4eae","messageTitle":"Update LocateCommand and BrowserPanel to use BrowserPanelLocateEvent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"e53500f52e99a5c2d1e412a721d483fde8459ae8","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":6}}},{"hash":"9f7ca761bc8dfa25d0ee86380cc2c3731e5e5f29","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"25ea1201d9d7fb0cccdc27064e68fae8408bb2b0","messageTitle":"Add LocateCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":143,"deletions":1}}},{"hash":"9ac5af26d45a6824046e45b68d0e2f31c80686a2","messageTitle":"Remove unused imports in LocateCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"c62474dcf51dee44742090f88c996704537ab496","messageTitle":"Add LocateCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"1f55853e9d82308173921622300fcab21223d47a","messageTitle":"Update AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"f34c425b303793aff8c05bb5bba2f1e3bfb3aa63","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"de4cc9bab3c88835f3ab23f4aec4b152ef537b79","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"440aba829dd8aeea119c712556ea300418225047","messageTitle":"Update Edit Command to print error message when editing only private fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":5}}},{"hash":"c73297235b3fa5848ea49cb52b60aaee1754acef","messageTitle":"Update ChangePrivacyCommand to no longer default to public","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":26}}},{"hash":"869afb1119e9838fa943fd73387505bb7fe71c4c","messageTitle":"Add missing if statement in ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"ad24ae4274c388aec9cddc7ed75fa811703ac0a5","messageTitle":"Bug fix in privacy detection in EditCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}}]},{"date":"2017-10-29","commitResults":[{"hash":"eb065bd12a2aeefe6ec2f44f3abed209d7efc54c","messageTitle":"Bug fix for EditCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"712262f3bbbbfcabfd333c5ca627b5a892e3f70c","messageTitle":"Update EditCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":13}}},{"hash":"2a3323d687d98d41407efe1eac67378b09d9a996","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"71d7e601eb1b2dd96e1d365981b65e5c47a9f886","messageTitle":"Update Google Maps URL Prefix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"412ee30d48cd762b89f131bd28ffa2c8209b4211","messageTitle":"Update BrowserPanelTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"22de87fa31ba535a9f2ed71e177ff153e0d914cf","messageTitle":"Update ChangePrivacyCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":20}}},{"hash":"b74932128f7ec72fdf6bfb725ac2fb003928efe5","messageTitle":"Update ChangePrivacyCommandParserTest with javadoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"93300028125af6cb3dc7549342677b288d1469a8","messageTitle":"Remove Budget section in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":51}}},{"hash":"ac3d7701b2b597439a70d854aab669d0187a8a14","messageTitle":"Remove getter and setter section for Privacy in  DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":16}}},{"hash":"8f5a48da78dde1337e9b2d2f1bded2d16ef30403","messageTitle":"Modify Note under Privacy in DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"9c58619c68fa28f9db57798bf4ae568487921574","messageTitle":"Update EditCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":6}}},{"hash":"2cfa01a16516573880caa0d5ef53ee64b0bc91f9","messageTitle":"Update Privacy section in DeveloperGuide with createEditedPerson","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":42,"deletions":2}}},{"hash":"3b6cffd6c6730c18085a8d604f4ba5af856d6edf","messageTitle":"Fix Checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"2fd08f8862d9973b8a670cb7b62455525db74ad5","messageTitle":"Increase Font Size for sequence diagrams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ece2d0f4820af96856c6fe82e7e41b4d983ca20f","messageTitle":"Update UserGuide with LocateCommand","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":32,"deletions":9}}},{"hash":"232c72101b84d8d6c6c98265565e1d6085e92e42","messageTitle":"Update UserGuide based on updates to ChangePrivacyCommand and EditCommand","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":1}}},{"hash":"d88cd85c3d6ae27262d4f73a729a60ed028f4e64","messageTitle":"Add LocateCommand section in DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":66,"deletions":1}}},{"hash":"2aacb49f95080994417bb12e183933da54973708","messageTitle":"Add Sequence Diagram for LocateCommand","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":0}}},{"hash":"09eba52e573115e76d0a1e779034e4c5cc2bf1f9","messageTitle":"Fix Typo in DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":0}}},{"hash":"6425934582fa52baf6b7d2f972a86238ea21af03","messageTitle":"Update keyboard shortcuts in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":10,"deletions":10}}}]},{"date":"2017-10-30","commitResults":[{"hash":"66ccf64aa460215f6c4406cea3bc726b5cc1b8db","messageTitle":"Fix Typo in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":2}}},{"hash":"d3fd6b8b4daddffa86b4ed15fb1d78d473933714","messageTitle":"Remove Learning Outcomes link in README","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":1}}},{"hash":"fab81b6a4a3238a6ddb070654404d0d3507306f8","messageTitle":"Fix Typo in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"b30a40dcc4146c00becd08ce37f0ff6dad1dc9dd","messageTitle":"Remove Appendix and rename se-edu in DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":248}}},{"hash":"b9977bc3bd09d25d5b9b1bdb6d294a5f67c9c39e","messageTitle":"Remove se-edu in DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":2}}},{"hash":"8f221b9eab9993307d88d922273d6f74cd124893","messageTitle":"Update README and UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":4}}},{"hash":"50c7b183b956cc4eeeef8d0ba98cf3be44341b39","messageTitle":"Update README","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":5}}},{"hash":"a543adb2f27708278efa62dc32463c5430f272a2","messageTitle":"Update DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":20}}}]},{"date":"2017-11-01","commitResults":[{"hash":"de7b6f75272d98ecb151299f25781d101e5fc72b","messageTitle":"Update Google Maps URL","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"ca25de74dd9a545beb2bc59d64bbb9187a9acd6a","messageTitle":"Add Collated","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":8},"md":{"insertions":2297,"deletions":4}}},{"hash":"7de1fc36a5cdb9e8800b59a23284830fa08ea63c","messageTitle":"Update md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1455,"deletions":1420}}},{"hash":"ce298ca953bab732142a0cbd446df5da6e38e528","messageTitle":"Fix Bug when locating a person with private address","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1},"md":{"insertions":9,"deletions":1}}},{"hash":"86b04dfc61eb1650fbf79ef6042471edbaf6cce6","messageTitle":"Remove debug print statement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2},"md":{"insertions":0,"deletions":2}}},{"hash":"311cd7e22fbd75f0f50d7966460f6367b0407c9a","messageTitle":"Change decrease font size shortcut","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"01d0b4982c4f009b64621d0b0f0a1bfbe862626d","messageTitle":"Change Open and Save As shortcut","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"5cfe20bcde5128ede4b4c2aded30b446f402f059","messageTitle":"Update prefixes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"686e90f7d2d86680b3b238ad241ae676a0d4f602","messageTitle":"Update priority prefix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-03","commitResults":[{"hash":"629646e45fe5cb0fea373964e23094ed44cef821","messageTitle":"Fix bug with undo and redo with ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":8}}}]},{"date":"2017-11-04","commitResults":[{"hash":"222130407ca174bb2e33153ddb53307f15184773","messageTitle":"Fix Bug where ChangePrivacy breaks from private to public","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":8}}},{"hash":"af481d3fef5ced0fe9fafe33e144b16eaced52a4","messageTitle":"Add javadoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"6c59d275f9241954237a21350efdba7eb9d31b96","messageTitle":"Update JUnit Tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":5}}},{"hash":"73eedb3f85145622d80b476f020941e999660019","messageTitle":"Create BrowserPanelNavigateEvent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"81cbb0029d380f3461eff40931143e08c6e1442c","messageTitle":"Update BrowserPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"ea87c76aa616a0c04f1609b03d1cb4720984ccd2","messageTitle":"Create NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}},{"hash":"c1cbdfe3763ecbef8d8471f658fd0ecc49b7f25a","messageTitle":"Update javadoc comment in NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"81264a05bb56982bf715dd9947bcf48d912ae276","messageTitle":"Add prefixes for NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"77cdca45c6692eec9290c40eabbee0520e2e8633","messageTitle":"Fix Typo in Address","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"87117191af096c3b124c574ded9ca96511c57a01","messageTitle":"Create TaskAddress","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":3}}}]},{"date":"2017-11-05","commitResults":[{"hash":"17055b226dfaf2b4b9dc62c1d94b7ae9f271a185","messageTitle":"Update AddCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":12}}},{"hash":"ff9d7fc778a145b3c3827680278eae59a65c81ce","messageTitle":"Update AddCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"3db32399495b7f814869325b22a72bd42059aee1","messageTitle":"Update ParserUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":2}}},{"hash":"1fe5009a65281dc23d32928d71743654937dc686","messageTitle":"Update TaskAddress","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":3}}},{"hash":"eb5092fcb8b9b661d94e305f06046730bef9ae8e","messageTitle":"Create NavigateCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":0}}},{"hash":"dd0ab2f483765bdf92d0d21eec01ce2be2a42f28","messageTitle":"Update NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":9}}},{"hash":"d609e5c166b7f4718a3a6843d25d24fed15808a7","messageTitle":"Update BrowserPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"12711f73d6828c4e66dd3036fb97b7fc26d6386f","messageTitle":"Update classes with TaskAddress","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":13}}},{"hash":"25d1d32511377e8192f65af6f0ca227100516fec","messageTitle":"Update TaskBuilder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"d3b56c6bd96a391b62846c29dc76be8d6f346025","messageTitle":"Update NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":13}}},{"hash":"d57df4c1a208930b4fbd31a1e750ebc139d0adf6","messageTitle":"Update BrowserPanel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"c43131656ecbdf480d0e3595365801ee2a035b86","messageTitle":"Update BrowserPanelTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"263292e6ffc493f0079be53b437e7ff4524309e5","messageTitle":"Update existing JUnit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":23}}},{"hash":"54b90e59c3007e28cf6aabe3ec9c854698fe098e","messageTitle":"Fix bug with EditCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":12}}},{"hash":"809b351ef15d9956fef8406f64ef4de27fe86ecd","messageTitle":"Update AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"5d8cdb682825ebb30acfc62a339024c3471acfbd","messageTitle":"Fix typo in LocateCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8df4db2db5896dc4ea6f675cd870f32a7af063be","messageTitle":"Create NavigateCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":0}}},{"hash":"3d7f2b4b1f4d26c884e3be2052b7e502e1d9acdf","messageTitle":"Update NavigateCommand and NavigateCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":5}}},{"hash":"c7fb031b648cff9a352471f9a2bb73979326e3ce","messageTitle":"Create NavigateCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":0}}},{"hash":"f6be732b8eebb05c0b4efa9ab29550a6fe36b58a","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"1a673ece4d3e0442f587918f8915d328c087e299","messageTitle":"Fix typo in NavigateCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"d5b363b1d227fec4ee4a837ed613882d12fde0a4","messageTitle":"Add more NavigateCommandParserTest tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"eae012f4dee81e489c83a70d8b3cddd1aefb4495","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":6}}},{"hash":"df45ec7d80394c32f19fff272e5e216774c68292","messageTitle":"Fix Bug in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"ea804effc766279cfbf77129a136bfa06c3842de","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"0ceab8548ebe10c748a0cb6cae8dc6c23dd47ad4","messageTitle":"Add TaskAddress to UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":0},"java":{"insertions":13,"deletions":1}}}]},{"date":"2017-11-06","commitResults":[{"hash":"af8b3be7a26d678d2b689e3d9cd7c7c876d20cc9","messageTitle":"Add NavigateCommand to User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":30,"deletions":2}}},{"hash":"7bda044b8e56f5045b9c68a34d1e5f839dad8075","messageTitle":"Update Command Summary Cheat Sheet and create Command Shorthand Cheat Sheet","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":74,"deletions":14}}},{"hash":"4d04a8d2da41db4aeef26ea0448b6c34094080f9","messageTitle":"Update outdated commands","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":6}}},{"hash":"6d5a40e02535b242a0e027d581409a753a0c0c91","messageTitle":"Remove irrelevant sections in the UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":10}}}]},{"date":"2017-11-07","commitResults":[{"hash":"770df8941aca8ecb1589a9d9a22af50d385be998","messageTitle":"Update AddPrivateSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8a95c5dbc9ad11570ad5b485cf292599ddebe1a5","messageTitle":"Update NavigateCommand to detect Person or Tasks with no Address","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"c3757afd6c9dfd4abaaa362cf90299769d6e13bb","messageTitle":"Remove unnecessary line in NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"b7b1da498ea164f73e6ac9a7dd2bf8b89dd06f8d","messageTitle":"Update DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":179,"deletions":28}}},{"hash":"a1b6bd8e8efce02da72b1e9a5195e798df886e76","messageTitle":"Add NavigateSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"b8434886a04434b52038fcb9fb88411c7bfae6ce","messageTitle":"Add NavigateCommand to User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":30,"deletions":2}}},{"hash":"d2103bf7203ddd84bdb0803964ff7c4075863bd3","messageTitle":"Update Command Summary Cheat Sheet and create Command Shorthand Cheat Sheet","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":74,"deletions":14}}},{"hash":"825e3df62c9d2120bb939a334786ed944f2f7231","messageTitle":"Update outdated commands","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":6}}},{"hash":"214c61c350ee3e16280bc3249e9ffbe52710df01","messageTitle":"Remove irrelevant sections in the UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":10}}},{"hash":"5ac58b14332c65eccb0de69f7fc2279988beee58","messageTitle":"Update AddPrivateSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"903aea34d44df8f0ee03a907f8042637052370f5","messageTitle":"Update NavigateCommand to detect Person or Tasks with no Address","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"43b39fc161bca31d0c4e35f7354f02bd097e974f","messageTitle":"Remove unnecessary line in NavigateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"52aad0ee6bfc393dbeed9fa745f468627ff647dc","messageTitle":"Update DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":179,"deletions":28}}},{"hash":"925137c762cbe1cd645bc990563741a62194c4d7","messageTitle":"Add NavigateSequenceDiagram","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"49632cbd448d11aab2d5e80085c5164e7d6d1258","messageTitle":"Add tags for use in portfolio in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":1}}},{"hash":"fe9ff9acc264dae0767a1b2eb0e4d55d9cfdb621","messageTitle":"Add tags in DeveloperGuide for use in portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":3}}},{"hash":"00c36a925b5e591ca3d5cc3d88c4eba464b46fb6","messageTitle":"Create JeffreyGoh.adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":96,"deletions":0}}},{"hash":"5cff47bbe0063601153eb388ffd4473ea5804a58","messageTitle":"Update collated files","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":3196,"deletions":554}}},{"hash":"2ae4525c16683668212181d42d0d1865e5736c0b","messageTitle":"Fix typo in ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"4c11917b443fa1181615575848a47accaa4f3948","messageTitle":"Remove duplicate method in ParserUtil","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":11}}},{"hash":"c236a1ce8931c7de555f70ac035156cf7f74561d","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-08","commitResults":[{"hash":"b92fb537fcd4603826a84b0287215fbe3d51299c","messageTitle":"Create OpenCommand and SaveAsCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":4}}},{"hash":"d5398e8d79fff6e85accba8abdcfbbe7e08576d3","messageTitle":"Create OpenCommand and SaveAsCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":4}}},{"hash":"33f22606e3613c5c69e8b5fd3732543c821f28b3","messageTitle":"Create Tests for OpenCommand and SaveAsCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":0}}},{"hash":"424d704dd6597af90e9005c15ab6a7b3a246fd2e","messageTitle":"Update Tests for OpenCommand and SaveAsCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"d4f52676135ed9c4f2deadf854620aa9d73380b2","messageTitle":"Update UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":24,"deletions":2}}},{"hash":"982792f92d7907a33b067fc3ed091a4ba0376ab7","messageTitle":"Update Portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":33,"deletions":3}}},{"hash":"1256069ff8f34c021e80374b7929d0db531390a8","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"430ed3361da3cfe9b844986763516d3c7bb64909","messageTitle":"Modify formatting issues in UserGuide and DeveloperGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":17}}},{"hash":"9a235301c3de102a06e3e495fa150dd0aac1d219","messageTitle":"Update DeveloperGuide with Open and Save As section","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":34,"deletions":3}}},{"hash":"1a5c33581ce547a1a354f64f984fec9d4e32cc12","messageTitle":"Update DeveloperGuide and remove extra line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2},"adoc":{"insertions":48,"deletions":0}}},{"hash":"47efda59fe912684bd1d350f8d9e1424c53d47ec","messageTitle":"Update collate","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":5631,"deletions":5532}}}]},{"date":"2017-11-10","commitResults":[{"hash":"8c467b7d023b2eea91aae19e19fcead155038e5b","messageTitle":"Add PrivacyLevelCommand and PrivacyLevelCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":6}}},{"hash":"00a50205d3ac0dbe07e73d9973d050f982f5229b","messageTitle":"Update PrivacyLevelCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":2}}},{"hash":"66930bb781343bf3dacf45be7e3f89785da8d785","messageTitle":"Extracted methods from constructPerson in AddCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":45}}},{"hash":"6dcf3b7bcc3c0d5df3927cdca2677ef2804a2376","messageTitle":"Create 4 new predicates","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":0}}},{"hash":"75db209a82642c62b738e378daf44b80c9ee86a9","messageTitle":"Update Person and related classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":15}}},{"hash":"097c3677a01a1c16bdc146bf2884fb5afc238ac9","messageTitle":"Update Avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":3}}},{"hash":"01d8c5c0d3741aa51e4cf22e7272b152abec95c5","messageTitle":"Update Predicates","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"17413612778d89837d1cce9f6568279acac5906f","messageTitle":"Modify UpdateFilteredPersonList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":6}}},{"hash":"4887c373074fc95cfa6fd35600aa2d5ea816713d","messageTitle":"Update PrivacyLevelCommand Messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"05a405212a399fe98fc576c9ad4d698d069dded9","messageTitle":"Fix bug with error message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"6c4edb2ad352d6d044baed56d0abdbf2a1e15fa3","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"a7913906044764ff02d82a40c5c346e338479cd2","messageTitle":"Add Override to ModelManager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"4a864164207315790b5eae321b45560f4fd22be9","messageTitle":"Remove unused method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"4dc0010a7e824314a19e98d177b3d315b9d5813f","messageTitle":"Change constructPerson from private to public:","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"25dfbcad383ad77bbf0038cbe0dfd46d2879cb21","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2017-11-11","commitResults":[{"hash":"3e14688e2cef97f15b32fe87092bb33f2285b681","messageTitle":"Add PrivacyLevelCommand Test and PrivacyLevelCommandParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":179,"deletions":3}}},{"hash":"e81f742c33918d9941b60d04397b1ea1555911dd","messageTitle":"Update UserGuide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3},"adoc":{"insertions":33,"deletions":2}}},{"hash":"689cdfe5ec774874e4d50a4f2e00c7fc9a741e7e","messageTitle":"Modify PrivacyLevelCommand to reduce abstraction breaking","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":4}}},{"hash":"ed41690aa71ff4fcc5b63485fe11ebae7d79d952","messageTitle":"Update ChangePrivacySequenceDiagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6694909c30e99df01c75bb704f926e256873ea24","messageTitle":"Update Portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":0}}},{"hash":"28ef646553957d0f3bf925ce005a8083aea73fa4","messageTitle":"Remove privacy from Avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":79}}},{"hash":"1761e70c340b83abbea8c31979e441b4450815d3","messageTitle":"Fix bug in ModelManager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":7}}},{"hash":"deea3986dedbb63a011c7ea55e32b6c2b6fc7c10","messageTitle":"Update DeveloperGuide and rename isPrivate to getIsPrivate for person fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":78},"adoc":{"insertions":75,"deletions":8}}},{"hash":"852ec7f687c34d8b77736ed234db2e76d7528ae3","messageTitle":"Update collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"md":{"insertions":1543,"deletions":407}}},{"hash":"71fd3ed6f393412800d103ccc5f713f957d0ee18","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"b424a1c54e1c272de4ff9664130f40d4cfbcb2f4","messageTitle":"Fix bugs in tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"057a24dad34069c1a2e789d80cf02ea8854c0436","messageTitle":"Remove unused print statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}},{"hash":"e064b10d71eeaf54b31d23a432fdcf7fd3e937f0","messageTitle":"Create NameContainsKeywordsPrivacyLevelPredicateTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":0}}},{"hash":"8b050db96e192a64af235012f4527b62137a068b","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"3e18ac2a7e98f4b8ace95d1e5cbc71f88eaecfd1","messageTitle":"Add assignCount and state under updateAttributeSizes","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2}}}]},{"date":"2017-11-12","commitResults":[{"hash":"d653b78f2a1a5fa0539667aebd8a99ccda584608","messageTitle":"Add ChangeThemeRequestEvent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"5baaf68dcea550b6499ac5608ecfbd0408d0226d","messageTitle":"Add ThemeCommand and ThemeCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"c6d054bbadae7a4c9b412cb5eff3e1b4b1a89b5f","messageTitle":"Add assignCount and state to be affected by fontsize","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"333c924043f830034e107ea8ee942cb45f388f97","messageTitle":"Update Model, AddressBook and UserPrefs with theme","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":3}}},{"hash":"e10918d961d5794491b4819c87534fd2530403b1","messageTitle":"Change font size in DarkTheme","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":4,"deletions":4}}},{"hash":"2f93fce68c9db53920404eed3db4ad75d168262b","messageTitle":"Add LightTheme","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":352,"deletions":0}}},{"hash":"627be57d2a11408f0161a3737d371ac4bb012244","messageTitle":"Fix bugs with theme","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":1},"css":{"insertions":1,"deletions":1},"java":{"insertions":38,"deletions":6},"html":{"insertions":1,"deletions":0}}},{"hash":"e12fab4bf60d66925f57bd2d2927a15e07bf7078","messageTitle":"Add missing methods in ModelStub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"dde1d5a0c719619faca1e26b59dd6b8da77c4d2c","messageTitle":"Update User Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":71,"deletions":26}}},{"hash":"d7504f964de7b8c00fda04bea422eff41b5439d7","messageTitle":"Update Portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":22,"deletions":0}}},{"hash":"8b212df2b6d91954090b3d88bead41b2b566da64","messageTitle":"Fixed bugs found","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":50}}},{"hash":"aee20e7ce1e8f9737d22c04d6ecb1825d6bc8764","messageTitle":"Fix bug where privacy level does not carry over to edited persons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2017-11-13","commitResults":[{"hash":"f950a20769cf3474ed85ba44dd62aa711e0cea7a","messageTitle":"Update Developer Guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0},"adoc":{"insertions":173,"deletions":35}}},{"hash":"d4378893a6bf80af880ae00a0ce5c55d3856e972","messageTitle":"Add Sequence Diagram for ThemeCommand","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"12963fb9c9df27c25d5c37af5da42e46edb47c96","messageTitle":"Add ThemeCommandParserTest and modify AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":1}}},{"hash":"0291250936f3e4fb3d8702d84e568f7dd71fa09e","messageTitle":"Create ThemeCommandTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":0}}},{"hash":"d1eaec8e7f2486b7e03bb5fb52876ea11fed55c5","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"29948b34fe7fadff7696eeefaa201f30dbbbe8b3","messageTitle":"Fix typo in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"70cfa281f0a4da7884b6935230615a8a215b958b","messageTitle":"Adjust numbers in caption","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":9}}},{"hash":"9bf5f4c52cde1c51cfe73ba0d58bd404afcfffa4","messageTitle":"Update collate","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":116,"deletions":80}}},{"hash":"ea32d450e2c375d14a095ac70b64b3f5f3484a67","messageTitle":"Fix typo in UserGuide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"5f4eb18e1d66bddab3a53ca93e372480766c3ba8","messageTitle":"Fix bug with LocateCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"f62141f034273a8d420705701241f69d287dd9aa","messageTitle":"Create ManualTesting.adoc","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":377,"deletions":0},"adoc":{"insertions":191,"deletions":0}}},{"hash":"a8fa84f9452126f4de1f9371152f44b8889fb89e","messageTitle":"Update TestScript.adoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"adoc":{"insertions":401,"deletions":4}}},{"hash":"59b54bcf6e82fd74877f77fa247d2d21eb0b7e3c","messageTitle":"Fix bug with themes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":6}}},{"hash":"f3074c9a87e09db53d744c8e4902c7907fcc79f1","messageTitle":"Update TestScript","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":1,"deletions":1},"adoc":{"insertions":69,"deletions":4}}},{"hash":"b88822f48130db92b9f653914a17c8bddae7a94a","messageTitle":"Fix checkstyle","messageBody":"","fileTypesAndContributionMap":{"xml":{"insertions":1,"deletions":1}}},{"hash":"333f8f2866b86e21f4078eae5f8af779930e1d21","messageTitle":"Update Portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":36,"deletions":0}}},{"hash":"e24be990bc7f0ecce86f00bcd515617bda87867b","messageTitle":"Rename jar file in TestScript","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}}]},{"date":"2017-11-19","commitResults":[{"hash":"9859b492760ca3a04432fcecc3ad64302a00689f","messageTitle":"Update collate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":17},"md":{"insertions":12,"deletions":393},"adoc":{"insertions":0,"deletions":30}}}]}],"Thien Nguyen":[{"date":"2016-10-16","commitResults":[{"hash":"a28e9892d5185970098181ecf4dcf93c41815b1c","messageTitle":"[138] User can add email, address, tags in any order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":382,"deletions":34},"md":{"insertions":2,"deletions":2}}}]}],"Edmund Mok":[{"date":"2016-12-18","commitResults":[{"hash":"d1d17d8b8f5caa337653ab376411c27110303e40","messageTitle":"[#173] Add background color to tags (#200)","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":12,"deletions":7},"css":{"insertions":14,"deletions":0},"java":{"insertions":46,"deletions":19}}}]},{"date":"2017-01-07","commitResults":[{"hash":"b97aa3e0cdad1dee8d91747fc1c5193cfc23d485","messageTitle":"Resolve Eclipse warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":27}}}]},{"date":"2017-01-13","commitResults":[{"hash":"91b7c120cbff61826704cb3fcdd50167e4052688","messageTitle":"Initialize AddressBook with sample data if file does not exist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":6}}},{"hash":"f54a35645e1cac9aa98babf8c78013c05a5bbe65","messageTitle":"Add test for sample data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":4}}}]},{"date":"2017-02-05","commitResults":[{"hash":"2221d24f2e49a9ec8a9c0d45b9dcb03694d25b0f","messageTitle":"[#205] Reposition caret after an incorrect command  (#215)","messageBody":"After an incorrect command is executed, the command box positions \r\nthe caret at the beginning of the command.\r\n\r\nIt is more intuitive if the caret remained in the same position as before.\r\n\r\nRetaining the caret at the same position after an incorrect command\r\nis harder than necessary because the Logic component uses events \r\nto notify other components of an incorrect command being executed. \r\nExceptions are a more direct way to inform the caller the command\r\nis incorrect. Update Logic to use exceptions instead of events to handle \r\nincorrect commands. Update the command box to retain caret at the\r\nsame position if the exception for an incorrect command is caught.","fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":147}}}]}],"Huang Chao":[{"date":"2016-12-18","commitResults":[{"hash":"d2d6c5522cb94f5e9dea78c297fa254806925901","messageTitle":"[#149] Support F1 accelerator even when the focus is not in the list (#210)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":4}}}]},{"date":"2017-01-18","commitResults":[{"hash":"0dd249a002f77bde21542f679f19f3d4bfa0444c","messageTitle":"[#228] checkstyle: check for star imports (#250)","messageBody":"This new checkstyle rule prevents using \u0027*\u0027 imports so that it is clear\r\nexactly which other classes a class depends on.","fileTypesAndContributionMap":{"java":{"insertions":123,"deletions":23},"xml":{"insertions":5,"deletions":0}}}]},{"date":"2017-03-23","commitResults":[{"hash":"e1eafd1145cb5fdcc81bbacecf9e5145903b3fe2","messageTitle":"[#353] All gui tests are failing  (#354)","messageBody":"We depend on TestFx to run our GUI tests.\r\n\r\nHowever, a recent TestFx update breaks our GUI tests, causing\r\nall Travis builds to fail.\r\n\r\nLet\u0027s fix the version of TestFx to the one that was working\r\n(4.0.5-alpha) as a quick fix.","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2017-03-29","commitResults":[{"hash":"a61db1bf27f62cc549eb79be0a4598f2f1994b9b","messageTitle":"[#342] Travis CI: cache dependencies (#347)","messageBody":"Gradle dependencies are not cached in Travis builds.\r\n\r\nConsequently, the dependencies are re-downloaded in every build.\r\n\r\nLet\u0027s teach Travis to cache Gradle dependencies using the recommended\r\nconfigurations from Travis CI documentation [1].\r\n\r\nIn our experiments, when cache is not enabled, it takes 26.68 seconds\r\nto run Gradle assemble task, which includes downloading Gradle and the\r\ndependencies. When cache is enabled, Travis will tar up all the cached\r\ndirectories and upload them to S3. So the cache is not network-local,\r\nand the download time will be bound to network bandwidth and DNS\r\nresolutions for S3. In the experiment, it takes 5.83 seconds to pull\r\ndown the cache from S3 and another 10.75 seconds to finish the assemble\r\ntask. At the end of the build, Travis will also check whether the cache\r\nis updated. If it is, Travis will create a new archive and upload it to\r\nS3. This check adds another 1.48 seconds overhead even when the cache\r\nis not updated. So a rough estimate is that the build time will be\r\nreduced by around 10 seconds when cache is enabled. Reasons for the\r\nshorter build time now may be because Travis downloads the dependencies\r\nfrom S3 in bulk instead of making multiple requests (one for each\r\ndependency).\r\n\r\nFor more details on how caching works in Travis, please refer to [2].\r\n\r\n[1] https://docs.travis-ci.com/user/languages/java/#Caching\r\n[2] https://docs.travis-ci.com/user/caching/#How-does-caching-work","fileTypesAndContributionMap":{"yml":{"insertions":9,"deletions":0}}}]},{"date":"2017-04-05","commitResults":[{"hash":"d010443ebdd238e46d1abda1a59718027c7f473b","messageTitle":"[#310] Remove TestPerson (#373)","messageBody":"TestPerson is used in testing to create a Person without filling in\r\nall the fields.\r\n\r\nHowever, although it simplifies construction of a Person, it also\r\nviolates LSP because TestPerson breaks ReadOnlyPerson\u0027s contract.\r\nFor example, its getName() method can possibly return null, and\r\nits getTags() method doesn\u0027t return a deep copy.\r\n\r\nLet\u0027s remove TestPerson and use Person instead. With default fields,\r\nit\u0027s still easy to construct a Person using PersonBuilder.\r\n\r\nLet\u0027s also add PersonUtil to hold utility methods for Person, like\r\ngetAddCommand(Person).","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":157}}},{"hash":"6951a73c502185c54370c16fde85605743899d55","messageTitle":"[#371] Remove uses of real domain names (#375)","messageBody":"Potentially genuine email addresses are used in our documentation and\r\ntesting code, e.g. bobby@gmail.com, hans@google.com, alice@yahoo.com.\r\n\r\nWe don\u0027t want to help spam bots send spam to them.\r\n\r\nLet\u0027s change these potentially genuine email address to @example.com.","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":43},"xml":{"insertions":9,"deletions":9},"md":{"insertions":6,"deletions":6}}}]}],"PierceAndy":[{"date":"2017-03-01","commitResults":[{"hash":"585b1cfc7423e63aadf15cb53ca787021ee2aa7c","messageTitle":"ArgumentTokenizer: simplify getPreamble() return type","messageBody":"ArgumentTokenizer#getPreamble() returns Optional\u003cString\u003e.\n\nAs strings have a well-understood representation of absence of a value\ni.e. empty strings, using Optionals is an unnecessary complication.\n\nLet\u0027s change ArgumentTokenizer#getPreamble() to return a String instead.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":20}}},{"hash":"46497dc8d01bcd726073ffa2895002c3c6f0ed90","messageTitle":"ArgumentTokenizer: simplify getAllValues() return type","messageBody":"ArgumentTokenizer#getAllValues() returns Optional\u003cList\u003cString\u003e\u003e.\n\nAs lists have a well-understood representation of absence of a value\ni.e. empty lists, using Optionals is an unnecessary complication.\n\nLet\u0027s change ArgumentTokenizer#getAllValues() to return a List\u003cString\u003e\ninstead.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"21410adb16208a3802302b9dad91e94c8dda99fc","messageTitle":"ParserUtil: remove unnecessary toSet()","messageBody":"ParserUtil#toSet() converts a List\u003cString\u003e into Set\u003cString\u003e, ensuring\nthe uniqueness of String elements in a collection.\n\nIt is redundant code as it is superseded by the existing\nParserUtil#parseTags() and UniqueTagList class.\n\nLet\u0027s remove toSet() and update the logic to make use of\nParserUtil#parseTags() and UniqueTagList instead.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":21}}},{"hash":"1d46f717fd7acb2fb5ef9948733e1747713cd89e","messageTitle":"ParserUtil: remove unnecessary regex usage","messageBody":"ParserUtil#INDEX_ARGS_FORMAT is a regex that greedily grabs one or more\ncharacters, excluding line terminators. It is used with String#trim() to\ncheck if a string is empty or contains at least one line terminator in\nbetween non-whitespace characters.\n\nIt is unnecessary as the subsequent check using\nStringUtil#isUnsignedInteger() encompasses the above checks and more.\n\nLet\u0027s remove ParserUtil#INDEX_ARGS_FORMAT.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":10}}},{"hash":"da90e68f0c36fe10bc114a862d06f4eb50e08798","messageTitle":"FindCommandParser: remove unnecessary regex usage","messageBody":"CliSyntax#KEYWORDS_ARGS_FORMAT is a regex that greedily grabs one or\nmore characters, excluding any leading or trailing whitespaces. It is\nused with String#trim() to check that a string contains at least one\nnon-whitespace character.\n\nIt is unnecessarily complex as the same task could be accomplished by\njust using simple String utility methods. String#trim() is sufficient in\nremoving leading and trailing whitespaces, and in combination with\nString#isEmpty(), can perform the same check.\n\nLet\u0027s use String utility methods instead.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":11}}}]},{"date":"2017-03-26","commitResults":[{"hash":"cce7b1a7813517114eb96e2e10ebf6f37b768971","messageTitle":"Extract Prefix class out of ArgumentTokenizer class","messageBody":"The Prefix class is a nested class in ArgumentTokenizer.\n\nIt is unnecessarily tightly coupled with ArgumentTokenizer. The Prefix\nclass is used by other classes that do not need access to the\nArgumentTokenizer class.\n\nLet\u0027s extract the Prefix class into its own class.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":38}}}]},{"date":"2017-03-27","commitResults":[{"hash":"96c1f6221d8f799c26e6f9166eceaf4f8a3c0a89","messageTitle":"ArgumentTokenizer: extract getters into ArgumentMultimap class","messageBody":"ArgumentTokenizer\u0027s tokenized argument getters can be accessed even\nbefore ArgumentTokenizer is given arguments to tokenize through\nArgumentTokenizer#tokenize(String).\n\nThis behaviour is problematic as the getters can be called before\nArgumentTokenizer#tokenize(...), and would return empty optionals,\nlists, and strings that are indistinguishable from normal empty results.\n\nLet\u0027s extract the getters into a new ArgumentMultimap class, and have\nArgumentTokenizer#tokenize(...) return an instance of that class so that\nthese getters cannot be accessed before tokenization.\n","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":131}}},{"hash":"0d2e7b284fdd56c4526b7bf097682a7fb789b22f","messageTitle":"Update Logic class diagram with ArgumentMultimap class","messageBody":"The Logic class diagram in the developer guide does not reflect the\nupdated dependencies between ArgumentTokenizer, ArgumentMultimap,\nPrefix, and command parser classes.\n\nLet\u0027s update the Logic class diagram.\n","fileTypesAndContributionMap":{}},{"hash":"b3baf264f5b368654e18e774d604629e1ff7007e","messageTitle":"ArgumentTokenizer: make tokenize(...) static","messageBody":"Command parsers need to create a new ArgumentTokenizer object before\nthey can tokenize an arguments string. During instantiation, the\nArgumentTokenizer constructor is provided prefixes to be later used when\nArgumentTokenizer#tokenize(String) is called.\n\nArgumentTokenizer doesn\u0027t have a need to be instantiated before\ntokenizing can be done. The object is not reused to tokenize different\narguments strings with the same set of prefixes provided during\ninstantiation.\n\nLet\u0027s make ArgumentTokenizer#tokenize(...) static, which also makes it\nstate-independent and thus easier to test.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":44}}}]}],"ACER\\kyle":[{"date":"2017-11-09","commitResults":[{"hash":"1f7901f1e386e3e22b8ba8f0c6c597940ce6f330","messageTitle":"Update Portfolio","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":6}}},{"hash":"67a6168b25a80d52454bdbebd3dac21ea45c646a","messageTitle":"Trial version for sourcetree","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"11b089d4de96f04c94315bd257f03858b11f3dab","messageTitle":"update from sourcetree","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":1}}},{"hash":"3faaa4b0b37dd434d815c757f52ac4366ba9cb13","messageTitle":"souretree trial","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":0}}}]},{"date":"2017-11-10","commitResults":[{"hash":"80b2c05fcd8145df4301d6e57f89374c5e07cd28","messageTitle":"[V1.5][Documentation][Improvement] Improve Code Quality + Implement UI + UG/DG 1. Improve the Favourite and Unfavourite Command 2. Add UI indication of favourited persons 3. Update UG/DG","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":10},"adoc":{"insertions":139,"deletions":56}}},{"hash":"0b42136a44f41c1186b7ab3fab055544ca538639","messageTitle":"Fix CustomImportOrder and LineLength","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"184f16773276c784c2fcf4f2767b87b04feaec61","messageTitle":"Fix CustomImportOrder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2017-11-12","commitResults":[{"hash":"fea0880fb7eb1a4a0d4b57a5d3b51f21d768688c","messageTitle":"[V1.5] Add more test case + Update some Logic Command + Update Documentaion","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":4},"adoc":{"insertions":123,"deletions":39}}}]},{"date":"2017-11-13","commitResults":[{"hash":"96284f8bee2833c87fb0a50b2aa13d48e961975a","messageTitle":"[V1.5][Update]UG/DG + Collate + PPP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":14},"adoc":{"insertions":197,"deletions":3}}},{"hash":"a76e9e2ae87028d68a9f2ec7f58ace119dda6768","messageTitle":"[V1.5][Update]collate","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7740,"deletions":7569}}},{"hash":"b782f32361c7b7763ef348e67b0feca09f5cfa18","messageTitle":"[V1.5][Documentation]Adjust number in caption","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":6}}},{"hash":"b217a2a7c3e4b971209fddbee3e8a4a354c755f3","messageTitle":"[V1.5][Improvement]Fix bug + Update Manual TestScript","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4},"adoc":{"insertions":303,"deletions":1}}},{"hash":"dc4299706d814d6596b15f1aa9f1694ca107e9f9","messageTitle":"fix LineLength","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"78cc79f53b7ef6c0e884c6bc4d478133735bafe6","messageTitle":"Fix OperatorWrap","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1e04ee680092574e03671a04822f1f72f450eb83","messageTitle":"[V1.5][Update] PPP + Collate","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":13,"deletions":4},"adoc":{"insertions":3,"deletions":3}}}]}],"zzzzwen":[{"date":"2016-12-22","commitResults":[{"hash":"15d91fd909ad422aaa0cc13039cbb297c199b448","messageTitle":"[#233] Add unit test for CollectionUtil class (#234)","messageBody":"* Add unit test for CollectionUtil class\r\n\r\n* Update comments\r\n","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":0}}}]}],"m133225":[{"date":"2016-08-09","commitResults":[{"hash":"0414e21d54d8985fd41f1b353380b4939581ad5f","messageTitle":"Added coverage task back.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":39,"deletions":9}}}]},{"date":"2016-08-10","commitResults":[{"hash":"c940c8f61c513afe30b8db47b53efe9448735295","messageTitle":"Removed unused FileUtil methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":117}}},{"hash":"df1119c3e1f88c3688639e794741f5181234415a","messageTitle":"Removed filtering and filter parsers altogether.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":952}}}]},{"date":"2016-08-20","commitResults":[{"hash":"80183799de10c6690a5b05722ea32925c26c1bed","messageTitle":"Fixed browser not loading profile page after ui restructure.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"bba8f409d6719c80646c8ca7ca7f7ba8302951aa","messageTitle":"Updated GUI to the code sample colour and layout. Some minor tweaks will be required to make it nicer.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":12,"deletions":57},"css":{"insertions":23,"deletions":23},"java":{"insertions":1,"deletions":21}}},{"hash":"70068b1ab2fd10eeb97568c48eacfa5d74c339c5","messageTitle":"Fixed default webpage width being too small after change in layout.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":3}}},{"hash":"174b1d01aaf36c9b7a8e37315f00174ab8034ad5","messageTitle":"Changed to blue theme and other GUI optimizations.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":9,"deletions":27},"css":{"insertions":31,"deletions":30},"java":{"insertions":0,"deletions":145}}},{"hash":"e8e19d05143ff5a6d86a2dc400aa845575cd71f3","messageTitle":"Revert back to dark theme with a couple of changes and improvements to the GUI.","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":35,"deletions":45}}},{"hash":"98ab07df9fd97120bc128bd85b6b3372dbaa7d35","messageTitle":"Removed the navigation arrows and customised the thickens of the scroll bar.","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":9,"deletions":0}}},{"hash":"f79d2f23c5961e5ee36c1fea104fd42b81af587d","messageTitle":"Slight tweak to scroll bar padding.","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":3,"deletions":1}}},{"hash":"e3187d227cf620a523245236d59673c96b7a08df","messageTitle":"Fixed padding for horizontal scroll bar.","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":7,"deletions":0}}},{"hash":"b69d2df97b83c749bffe79b2aece9ac9c78cbdeb","messageTitle":"Minor refactoring and renaming of css file.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":4},"css":{"insertions":1,"deletions":2},"java":{"insertions":1,"deletions":3}}},{"hash":"a2660a0f7b67e0796a57eed505fdc6637f9d1847","messageTitle":"Some refactoring and cleanup in the ui classes.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":63}}}]},{"date":"2016-08-29","commitResults":[{"hash":"6fe47b3441bccc6f5dd0860738fe3b520849f40e","messageTitle":"Some documentation about learning basics of gradle.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":76,"deletions":315}}},{"hash":"53fe17afcb47af273e9629b2fca92275695b2418","messageTitle":"Added back coveralls task and plugin.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0}}},{"hash":"6a9ed284d0c0ca9a6e25f9efdfdd7a9e598e8bd6","messageTitle":"Added pictures to explain how to see the status of the travis build. Moved travis configuration into a separate folder since it is not part of gradle.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":24,"deletions":20}}},{"hash":"2c03b8ff6a40a01ea3377c45f1f474e0baa22f9c","messageTitle":"Extracted managing dependencies into a separate markdown and linked the intro markdown to them.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":23,"deletions":26}}},{"hash":"b774039458ded6da6ed2c373c6d8dd32455963f0","messageTitle":"Some refactoring and moving of instructions to more appropriate places.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":12,"deletions":9}}},{"hash":"28a1efe9fc27609f2ecfd9c9e30fee7e0562437f","messageTitle":"Minor refactoring and removal of outdated testing documentation.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":6,"deletions":13}}},{"hash":"750b82871a75d92e727c13abd3be8a225a182793","messageTitle":"Added shadowjar dependency and task to compile the application into a standalone JAR.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":22,"deletions":0},"java":{"insertions":2,"deletions":1},"md":{"insertions":21,"deletions":0}}},{"hash":"dc6b73784b5a93ba7345d7e11c9b584c4207df23","messageTitle":"Updated documentation for building the jar file.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":6,"deletions":16}}}]},{"date":"2016-08-31","commitResults":[{"hash":"f2559db2e3b562f912a2f69830a1581fc7ba345e","messageTitle":"Minor refactoring and corrections.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":9}}}]},{"date":"2016-09-09","commitResults":[{"hash":"03849f2c11d4d6784a03ceaa78fcf3da03cb6a74","messageTitle":"Removed unnecessary status bar and added promptText for command text field.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":2},"xml":{"insertions":10,"deletions":1}}},{"hash":"9f503e08158441aaf60e4d60f415fb7cea871036","messageTitle":"Fixed logger output to log file not using the specified custom level.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2016-09-15","commitResults":[{"hash":"95055c85a26c71d4296652adcc079a43a1eb1b0a","messageTitle":"Changed result display to text area element instead to allow for scrolling if text is too long.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":12}}}]},{"date":"2016-09-16","commitResults":[{"hash":"96fa3d5746f5bcce625f7ea375d1e6b8656e493e","messageTitle":"Added missing documentation images.","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9bf69ec997d276f4d0dfa2c9c2102645f449c99f","messageTitle":"Fix to alignment in travis documentation.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":6,"deletions":6}}}]},{"date":"2016-09-30","commitResults":[{"hash":"f779f77dac7e7958ad4c7df081d96110844ac6e4","messageTitle":"Added photo for Martin.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0}}}]}],"Eugene Peh":[{"date":"2017-04-01","commitResults":[{"hash":"3ceb58957fcd3268758b1b6b98932f536de3e9e8","messageTitle":"[#319] Checkstyle: add ArrayTypeStyle rule  (#363)","messageBody":"We allow array type declarations in both Java and C styles, e.g.\r\nJava style: public static void main(String[] args)\r\nC style:    public static void main(String args[])\r\n\r\nHowever, Java style is preferred and we should only use this style\r\nin our project.\r\n\r\nLet\u0027s add ArrayTypeStyle rule to ensure that only the Java style\r\nof array type declarations is used.","fileTypesAndContributionMap":{"xml":{"insertions":6,"deletions":0}}},{"hash":"07367fab5054768f3243fb55eba1367d3d67a39b","messageTitle":"[#319] Checkstyle: add DeclarationOrder rule (#367)","messageBody":"Checkstyle does not enforce the method/variable declaration orders\r\nin Classes and Interfaces as specified in our coding standard.\r\n\r\nLet\u0027s add the checkstyle DeclarationOrder rule to enforce the\r\ndeclaration order.","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":30},"xml":{"insertions":8,"deletions":0}}}]},{"date":"2017-04-03","commitResults":[{"hash":"3fd19d0dc05ea74d872625c86adcf096658aa33b","messageTitle":"[#319] Checkstyle: add CommentsIndentation rule (#361)","messageBody":"Our coding standard for Java requires a comment to be indented to \r\nmatch the indentation of the code it describes. This rule is not\r\nenforced by checkstyle.\r\n\r\nLet\u0027s enforce this rule by adding the checkstyle rule CommentsIndentation.","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":6},"xml":{"insertions":3,"deletions":0}}},{"hash":"2b73f71fb364eda4be9e0daa1e9c372a46c5a3be","messageTitle":"[#319] Checkstyle: add EmptyCatchBlock rule (#369)","messageBody":"Our coding standard requires an empty catch block to have at least\r\nan explanatory comment. This rule is not enforced by checkstyle.\r\n\r\nLet\u0027s add EmptyCatchBlock rule to reject empty catch blocks that\r\ndon\u0027t have any comments. While this does not ensure that the\r\ncomment inside the catch block sufficiently explains the reason\r\nfor the empty catch block, at least it helps to eliminate cases \r\nwhere there is no comment at all.","fileTypesAndContributionMap":{"xml":{"insertions":3,"deletions":0}}},{"hash":"aa9b3b392f5264260d60403c0c9715171692b1d4","messageTitle":"[#319] Checkstyle: fix MethodName supplied expression (#366)","messageBody":"Test case method names are expected to follow the format\r\nfeatureBeingTested_scenario_expectedResult.\r\n\r\nHowever, following aspects of the above naming convention\r\nare not enforced by checkstyle:\r\n1. only one consecutive underscore between two parts\r\n2. no more than 2 underscores\r\n3. each part should of the name should start with a lower case letter\r\n4. do not end with a symbol\r\n\r\nLet\u0027s update the relevant regex in the checkstyle config file\r\nto enforce the 4 aspects mentioned above.","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7},"xml":{"insertions":1,"deletions":2}}}]},{"date":"2017-04-05","commitResults":[{"hash":"8f4b6b4bb819c670f9039374e55781a848783676","messageTitle":"[#319] Checkstyle: disallow single line conditional statements (#362)","messageBody":"Checkstyle allows single line conditionals like this:\r\n\r\nif(something) foo();\r\n\r\nSuch statements can potentially introduce bugs like the code\r\nbelow where it appears like bar() is attached to the condition \r\nbut is not:\r\n\r\nif(something) foo();\r\n    bar();\r\n\r\nIt can also cause some code coverage checkers to produce\r\ninaccurate coverage statistics as it goes by the lines covered.\r\n\r\nLet\u0027s disallow single line conditionals by removing the allowSingleLineStatement \r\nproperty, which defaults to false.","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4},"xml":{"insertions":1,"deletions":3}}}]},{"date":"2017-04-07","commitResults":[{"hash":"583d3085055991471563d0d348c5cea96491fe6f","messageTitle":"[#319] Checkstyle: prevent upper case abbreviations in names (#360)","messageBody":"Upper case abbreviations in names (e.g. HTML in exportHTMLSource)\r\nare not allowed by our coding standard (it should be exportHtmlSource \r\ninstead) but that rule is not enforced by checkstyle .\r\n\r\nLet\u0027s teach checkstyle to reject upper case abbreviations in names \r\nby adding AbbreviationAsWordInName rule which rejects\r\nconsecutive upper case letters in identifier names.\r\n\r\nIn cases where there are consecutive capital letters due to word\r\nboundaries around single-lettered words, such as in\r\n“canIHasReview”, we can make use of the allowedAbbreviations property to\r\nwhitelist them. We are not relaxing the allowedAbbreviationLength to \u003e1\r\nas single-lettered words are uncommon in identifier names, and\r\nwhitelisting any legitimate cases is a suitable solution.","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":23},"xml":{"insertions":6,"deletions":0}}},{"hash":"12c4294cfc5c7ac4294223ac647d25878caad3b6","messageTitle":"[#319] Checkstyle: enforce @clause order (#365)","messageBody":"Our coding standard requires @clauses in Javadoc comments \r\nto be in the order:\r\n@author, @version, @param, @return, @throws, @exception, @see,\r\n@since, @serial, @serialField, @serialData, @deprecated\r\nThis rule is not enforced by checkstyle.\r\n\r\nKeeping the order of at-clauses organized results in the javadocs\r\nbeing more readable in code form. This is important as this type of\r\ndocumentation is typically read more often inside the code than it is\r\nas processed text.\r\n\r\nLet\u0027s fix this by adding AtclauseOrder rule. It checks that the order\r\nof @clauses follows the tagOrder property value order.","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1},"xml":{"insertions":5,"deletions":0}}},{"hash":"2c3390b1442d4fd7cc8484e339e9ffa3aed3b981","messageTitle":"[#319] Checkstyle: require default branch in switch statements (#378)","messageBody":"Our coding standard requires each switch statement to include a \r\ndefault branch, even if it contains no code. This rule ensures that \r\nall possible cases are covered and also to protect the code against \r\nlater changes, e.g. introduction of new types in an enumeration type.\r\nThis rule is not enforced by checkstyle.\r\n\r\nLet\u0027s teach Checkstyle to enforce the above rule.","fileTypesAndContributionMap":{"xml":{"insertions":1,"deletions":0}}}]},{"date":"2017-04-13","commitResults":[{"hash":"3e7451edc6f148feacd107828732a4856a79f7e5","messageTitle":"[#319] Checkstyle: enforce final keyword or encapsulation for class variables (#364)","messageBody":"Our coding standard for Java does not allow class variables to be\r\ndeclared public. This rule is not enforced by checkstyle.\r\n\r\nBy not enforcing the rule, it violates the concept of Java information\r\nhiding and encapsulation. However, there is one exception to this\r\nrule, which is when the class is essentially a data structure, with no\r\nbehaviour. In such cases the variables are required to use the \r\nfinal keyword to minimize unintended modifications to those \r\nvariables by clients.\r\n\r\nLet\u0027s teach Checkstyle to enforce the above rule and its exception by\r\nadding the VisibilityModifier rule.","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":9},"xml":{"insertions":6,"deletions":0}}}]},{"date":"2017-04-14","commitResults":[{"hash":"dc9fe96a38a2b5f9bb5bb4c05c3ff1db47b1effd","messageTitle":"[#319] Checkstyle: enforce separators\u0027 placement in line wraps (#368)","messageBody":"Our coding standard for Java requires separators\u0027 placement in line\r\nwraps to follow specific rules, such as having comma (,) stay attached\r\nto the token that precedes it and having the dot (.) in a new line.\r\nThese rules are not enforced by checkstyle.\r\n\r\nLet\u0027s teach Checkstyle to be stricter about line wrapping around some \r\nsymbols by adding the relevant SeparatorWrap rules.","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6},"xml":{"insertions":11,"deletions":0}}}]},{"date":"2017-05-22","commitResults":[{"hash":"cc22ed642b34f15798facec1bddd597aa8c0c395","messageTitle":"[#319] Checkstyle: enforce operators\u0027 placement in line wraps (#382)","messageBody":"Our coding standard for Java requires operators\u0027 placement in line\r\nwraps to follow specific rules, such as having assignment operator (\u003d)\r\nstay attached to the token that precedes it and having the arithmetric\r\noperator (+) in a new line. These rules are not enforced by\r\ncheckstyle.\r\n\r\nLet\u0027s teach Checkstyle to be stricter about line wrapping around more\r\nsymbols by adding the relevant OperatorWrap rules.","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":25,"deletions":14},"xml":{"insertions":22,"deletions":0}}}]},{"date":"2017-07-26","commitResults":[{"hash":"8ff14105f989eed05dc63f113d1ad23b355516d0","messageTitle":"[#379] Test folder: add missing API header comments (#518)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":1}}}]},{"date":"2017-09-17","commitResults":[{"hash":"66d24fc7d51db891f93095d29344300e63ce1049","messageTitle":"[#319] Checkstyle: enforce single statement per line (#669)","messageBody":"It\u0027s difficult to read multiple statements on a single line. Also,\r\nsingle statement per line means fewer merge conflicts to clean up.\r\n\r\nLet\u0027s teach Checkstyle to enforce the rules OneStatementPerLine to\r\nmaintain the single line statements practice in our code.","fileTypesAndContributionMap":{"xml":{"insertions":2,"deletions":0}}}]},{"date":"2017-09-21","commitResults":[{"hash":"56949f20b39a3635975f32e278fb8543a3606e27","messageTitle":"[#319] Checkstyle: enforce one variable declaration per line (#671)","messageBody":"Having several variables are on the same line risk having conflicts\r\nfor unrelated modifications by different developers.\r\n\r\nThis rule checks for multiple variable declarations on single lines\r\nsuch as these,\r\n\r\nint a; int b;\r\nint a, b;\r\n\r\nwhile still allow multiple variable declarations on single statements\r\nsuch as these,\r\n\r\nint a,\r\n     b;\r\n\r\nLet\u0027s teach Checkstyle to enforce the rule\r\nMultipleVariableDeclarations to check that there are no multiple\r\nvariable declarations on single lines.","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":32},"xml":{"insertions":3,"deletions":0}}}]}],"You Liang Lim":[{"date":"2016-08-08","commitResults":[{"hash":"7916322fad9d11ef3fa7ca67574062bb6de3e950","messageTitle":"address book level 4 draft","messageBody":"","fileTypesAndContributionMap":{"gradlew":{"insertions":164,"deletions":0},"fxml":{"insertions":186,"deletions":0},"css":{"insertions":364,"deletions":0},"gitignore":{"insertions":16,"deletions":0},"js":{"insertions":37,"deletions":0},"gradle":{"insertions":359,"deletions":0},"xsl":{"insertions":195,"deletions":0},"txt":{"insertions":9,"deletions":0},"java":{"insertions":8953,"deletions":0},"bat":{"insertions":90,"deletions":0},"xml":{"insertions":434,"deletions":0},"md":{"insertions":519,"deletions":0},"json":{"insertions":164,"deletions":0},"html":{"insertions":182,"deletions":0},"properties":{"insertions":9,"deletions":0}}}]},{"date":"2016-08-24","commitResults":[{"hash":"7ccc4a77182abfe41817b57a6e7a6fb2eb3bc879","messageTitle":"minor bug fixes. Show person tags and ClearAddressBookCommand Implementation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0},"xml":{"insertions":0,"deletions":54}}}]},{"date":"2016-08-26","commitResults":[{"hash":"386dffdf2ad3453c7ac73cb7d93694c270f4ebae","messageTitle":"prevent key binding from being triggered","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2016-09-04","commitResults":[{"hash":"106dc15ab0c4cc5f6f1d95816dae76d1432c9883","messageTitle":"remove test prefix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]}],"Charles Goh":[{"date":"2017-09-30","commitResults":[{"hash":"2d6d546be54937d95582ba205ac5b892b5022121","messageTitle":"[W09-B2][SORT] Added sort command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"46e2ef8220ab4ce6ce5f05dc076ce88ec115dfe7","messageTitle":"[SORT] Added constant for invalid message input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]},{"date":"2017-10-01","commitResults":[{"hash":"353cbca2cca5671ddb0d358e4bf07ef838221a2a","messageTitle":"[W09-B2] Added more Non Functional Requirements to the Developer Guide","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":2}}},{"hash":"b24f318790a623c1d96527601b0d3fe78bdc9f75","messageTitle":"[W09-B2] Added several glossary terminologies used in the NFR section","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":36,"deletions":1}}},{"hash":"4227b44398f4cb26cb19d9df767c8f40f14aada9","messageTitle":"[W09-B2] Changed repo URL to organization\u0027s new repo URL","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"0326886be0e3e114d768a4e203c77200e6e8c72d","messageTitle":"[SORT][PARSER] Added sort command case to main address book parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":40}}},{"hash":"c1f9678fb4f1b5526defd56c2852f3d97a80d7a0","messageTitle":"[SORT][PARSER][FIX] Changed redirect to SortCommandParser instead of SortCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"02d05c1a9f80131f093e2bf997c0e569eee59998","messageTitle":"[SORT][COMMANDPARSER] Added SortCommandParser to receive args and offload to Sort Command instance","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":8}}},{"hash":"caa553b4c2b8e8e059f02f4292cfcb43fa3ed274","messageTitle":"[SORT][COMMANDPARSER] Changed ParseExceptionError message for the input check","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"e56dcd92e2cbc18820f0b8c8d9d4f6f03c572ebb","messageTitle":"[FIX][SORT][COMMANDPARSER] Fixed missing Parentheses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"782ef34302fec717096325e842f9a4fbae5d167a","messageTitle":"[SORT][COMMAND] Set up Sort Command instance","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":29}}},{"hash":"c5559d57c8f07970fd1ecc59625bb7434f5a4b33","messageTitle":"[UNIQUEPERSONLIST] Added bulk of sort functionality operations to the UniquePersonList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":0}}},{"hash":"d789cc6a3de9c99d7a389ca3d19373f3d3edd2a2","messageTitle":"[UNIQUEPERSONCLASS] Added dependency for collection comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":4}}},{"hash":"2681720499aa311feb5fcaac19ce89c28f3569d7","messageTitle":"[MODEL][MANAGER] Transfered sort command control to Model Manager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"2afc6dba4019ca0cf7d16a7086e6f2ff48dde107","messageTitle":"[SORT][ADDRESSBOOK] Control pass through modelmanager to AddressBook before going into unique person list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"d0f6f96436fdbc22d89db97c4db3f4178940090f","messageTitle":"[SORT][TEST] Added overriding test method to AddCommandTest to prevent crash","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"612fc148c213a9acd7853af54ebe3ca1f1c5794d","messageTitle":"[UPDATE][USERGUIDE] Updated user guide with instructions and info on the sort command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":20,"deletions":0}}},{"hash":"5c4d8202a8702204c463e7f8d84de7ce4b77aedf","messageTitle":"[SORT][LOGICTESTS] Added logic tests to test sorting functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":5}}}]},{"date":"2017-10-02","commitResults":[{"hash":"3332d136157a66980afb34cf638a8e6fa4df94f3","messageTitle":"[UI][ICON] Swapped UI icon","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b9f8145f7733608429a416eda88a67e1ecb9d779","messageTitle":"[UI][ICON] Changed UI logo icon","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"435a4ce598b087c820d625daa6655dbb5f71e389","messageTitle":"[UI][MENU] Added FXML for Save As and Open buttons","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":10}}}]},{"date":"2017-10-04","commitResults":[{"hash":"f83f8257aa71a025507e981472fd62e4dc6ea3c9","messageTitle":"[SORT][CLEANUP] Deleted unused import statements from SortCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"37e6a49381d1212a1e66f54b4b2ab85d99fdd92b","messageTitle":"[IMPORTS] Moved some imports to conform to coding style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"b19fda39da1f1b1bac2f10bf5c43b7e2c3746079","messageTitle":"[SORT][CLEANUP] Reordered import statements to comply with coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":2}}},{"hash":"3f424bf6c2218cf4a2e3bf13376dcfbbf31f3555","messageTitle":"[SORT][CLEANUP] Ported sorting comparators to sortBy function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":31}}},{"hash":"1a1a911944dcf5b8413f08a250feb227f03fcb2d","messageTitle":"[SORT][CLEANUP] Deleted unused comments in SortCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"82ca93e46977e2d68aa4f273a773489369461d82","messageTitle":"[SORT][CLEANUP] Added missing Javadoc to SortCommandParser to comply with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"1196afc35a33ee7a5d756ef78326a7c50845b088","messageTitle":"[CLEANUP] Deleted unused imports in AddressBookTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"f1da74aa20a35445170d7e01c290af56d3b72146","messageTitle":"[CODESTYLE] Swapped out import statements to adhere to coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2017-10-07","commitResults":[{"hash":"c6d1364b189e99cf8b295ae875c5b5322c718ae6","messageTitle":"[W7.7][v1.0][DEVDOCS] Tweaked some flawed user stories","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":3}}},{"hash":"d3f78740e1aa082f229f5e3884d69ce76953fc82","messageTitle":"[W7.7][DEV][NFR + Glossary] Edited some NFRs and deleted redundant glossary terms","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":41}}},{"hash":"3aaf118379639ecfd2953d15e594c7c825fec593","messageTitle":"[W7.7] Added newline before eof to prevent check failure","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"055c7b043ba8cf6a0f1486a82a84969fe02e0687","messageTitle":"[UI][MOCKUP][DEVDOCS] Updated UI mockup for v2.0 planned target","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2017-10-09","commitResults":[{"hash":"3e1163989004168ba2098d96892dd3d5003de51d","messageTitle":"[ABOUTUS] Updated project team details","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":22,"deletions":30}}}]},{"date":"2017-10-10","commitResults":[{"hash":"0f613cac77436af43e971da16c536d72400cbc59","messageTitle":"[USERGUIDE] Added user guide for possible extension --\u003e Exporting data functionality","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":0}}},{"hash":"5d112ab486bffacb89d79c529d02c8de48b76f20","messageTitle":"[USERGUIDE] Added documentation for possible feature --\u003e Integration with google calendar","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":6}}},{"hash":"bcfd019dc9e099acdd5d0de5cf4bef669054d5e7","messageTitle":"[USERGUIDE] Added docs for potential feature --\u003e Autocomplete","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":4,"deletions":0}}}]},{"date":"2017-10-11","commitResults":[{"hash":"148fd2871178ef5ffeddadc100d12369822386cb","messageTitle":"[README] Increased width of UI mockup image","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"dce8758548f51b8ac33d4bea910fdd809a06b52c","messageTitle":"Revert \"Update UserGuide.adoc\"","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":27,"deletions":33}}}]},{"date":"2017-10-15","commitResults":[{"hash":"c35162a9c9c769064da3e5a82f54f4621c5db792","messageTitle":"[DEV][DOCS][SORT] Added developer guide for sort implementation","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":41,"deletions":0}}},{"hash":"f51c9ed5cefb8683d5acb8f80fa172d6a821476f","messageTitle":"[README] Added codacy status badge","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}},{"hash":"453de84da34996e6e76543a74ae23f0698310b1e","messageTitle":"[UI][PERSONCARD][TAG] Added random colours for PersonCard tags","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":2}}}]},{"date":"2017-10-17","commitResults":[{"hash":"3be877cc49c6df32f6e9580fcee6db17684af4e8","messageTitle":"[UI][PERSONCARD][IMPORTS] Added import dependencies for Random and HashMap","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"cb819a57cf5c30b88cb30957d3b4caa83064cadf","messageTitle":"[UI] Added person count indicator to UI footer","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":11,"deletions":3}}},{"hash":"aff037723621444a128f32c95cbc4efed2b1eb59","messageTitle":"[STORAGE] Added new backup method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}}]},{"date":"2017-10-18","commitResults":[{"hash":"d6c145c9264d00049d4994f99b28a53c2d35f7c8","messageTitle":"[LOGIC] Changed file path to more intuitive option --\u003e full path + filename + extension","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}},{"hash":"ede8dff5ede5bafe6fe63cbd7b9ce4226034a4e1","messageTitle":"[ABPARSER] Added BackupCommand cases and sort command alias case","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"1bdf842dfb034268344a28a418c161d5389fe3e3","messageTitle":"[BACKUPCOMMAND] Added high level calls. Unable to access storage component","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":0}}},{"hash":"85149b5548d5bb4fb718d8f6eee5771ed00278a9","messageTitle":"[BACKUP][INPROGRESS] Buggy implementation of Backup command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":45}}}]},{"date":"2017-10-19","commitResults":[{"hash":"48e7349a8b39057b35b48f7481be4a8b93cd28d0","messageTitle":"[BACKUP] Implemented basic functionality for backup command. Backs up to same directory. Tests to be fixed in future commits","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"cef8594a11a1cb977947ec0ffd8c0ae2e5ca7db9","messageTitle":"[FIX] Added missing imports in PersonCard class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"224396d91dec757f3032e50f4a26f580250c802e","messageTitle":"[MAINWINDOW] Fixed checkstyle error regarding overly long line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"ee8fd3fd611b2ef2f030568ad2492a3b3d6b6992","messageTitle":"[TEMPFIX] Overloaded Logic object constructor to allow old tests to run without depending on storage components","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"e158390e79637c1081d6564a106e128e2d50ee49","messageTitle":"[FIX] Minor fixes for travis fails","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}},{"hash":"e948b199cb1c7d194941260ff9ca076704f2da5f","messageTitle":"[REMARK][GUI] Added remark placeholder to GUI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":0},"java":{"insertions":2,"deletions":0}}},{"hash":"f7e225068edb6ae10d3c1069aaf8cad360fa9112","messageTitle":"Revert \"[REMARK][GUI] Added remark placeholder to GUI\"","messageBody":"This reverts commit e948b199cb1c7d194941260ff9ca076704f2da5f.\n","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":1},"java":{"insertions":0,"deletions":2}}},{"hash":"bc1f7f15e4077e6e1b8d4cdd85c4850766c0b2ae","messageTitle":"[CSS][FIX] Fixed crash on clear command problem","messageBody":"","fileTypesAndContributionMap":{"css":{"insertions":1,"deletions":0}}}]},{"date":"2017-10-20","commitResults":[{"hash":"e6c1d5b11f77b998d907f64c9a2cf17331da3736","messageTitle":"[BUGGY][BACKUP] Added buggy custom save location functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":8}}},{"hash":"e7228583f4d4b8a9e701379660f4010354945bf0","messageTitle":"[BACKUP][COMMAND][STYLE] Fixed formatting issues causing Travis to fail","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"47e8856046087130bacc16744f00871afc06841a","messageTitle":"[PARSERTEST] backup command parser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}}]},{"date":"2017-10-22","commitResults":[{"hash":"c177fbbd07efabd91a84a76712d6f08af552f3af","messageTitle":"[UG] Personalize user guide on Sort Command and added section on Backup COmmand","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":26,"deletions":6}}},{"hash":"8ac653a13c4e2f0b9c0ceb31404651a93bcd81ee","messageTitle":"[DOCS][DEV] Added developer guide content for the Backup Command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":42,"deletions":2}}},{"hash":"7797e5e6583b2ad204dc58c10b799a7a6cdfe104","messageTitle":"[SETUP] Added new prefixt to CliSyntax and made additions to Add and Edit command to accomodate remark field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":0}}},{"hash":"f92bd44f8fad7bf50ea332f5e376048caa6c3ef3","messageTitle":"[REMARK][PERSON] Added extra fields for remark in person related classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":9}}},{"hash":"3714b82029ccd306c7733c30c1c043886cf6fe8a","messageTitle":"[Remark] Added corresponding methods to edit classes for remark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":5}}},{"hash":"42dca92477a3047dcdc03f7d0bf41e65a5c4e872","messageTitle":"[REMARK][LOGIC] Added support for remark field in several logic classes.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}}]},{"date":"2017-10-23","commitResults":[{"hash":"6ead05006a70048cd556e4e69666b2bae4b59be8","messageTitle":"[REMARK][XML] Added support for remarks in XML adapted person in storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"9586fde38c391dc6b192bc5891ab8ac5e2977b19","messageTitle":"[STORAGE][REMARK] Added support for remarks in person builder and removed todo comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"71b14128e7a08d88519e4a978b6f42b6a27addaf","messageTitle":"[REMARK][EDIT][FIX] Fixed editing of remark not being parsed problem","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"db853f3891d6dba36c08d39bca80db8d8ae82dab","messageTitle":"[EDIT \u0026 ADD][MSG] Added new line to make edit command seem more organized","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6915cf5f96cd32c1f9209234c3b9fd68ee340625","messageTitle":"[UI][CARDS][REMARK] Added support for remarks in UI elements","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"3fa08f3cfa07d300743171fa39ed84a12e489c23","messageTitle":"[STYLE][CLEANUP] Fixed style for EditCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"54290a2ff90cf90f933384b2eddf48a35053760b","messageTitle":"[UI][CARD][FIX] Fixed problem where remark is not displayed on UI\u0027s person cards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"77551afabb494a289c3a1419e59020b028104377","messageTitle":"[TRAVIS][CLEANUP] Deleted trailing whitespace in PersonCard class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"3590ff507d11098c4d4f87f83914d45f698e7a77","messageTitle":"[FIX][TESTS] Updated Command Tests to support remark field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"a880f3c66734ac50cf030755272cc646560d432e","messageTitle":"[FIX] Fixed some bugs in parser and person builder; updated userguide with examples of remark field usage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5},"adoc":{"insertions":7,"deletions":6}}},{"hash":"9bd7c979c2a528a01ebb419edd658459a64d42e5","messageTitle":"[FIX] Fixed some JUnit tests that did not support remark field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":34}}},{"hash":"60cfe2b49df1517bf61a16c726ad28d92b310f78","messageTitle":"[FIX] Attempted to fix edit command test problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"09b8b5b8a09f1a9a361ebb528da4423d0fe4d80b","messageTitle":"[CLEANUP] Cleaned up AddCommandParserTest and EditCommandSystemTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":13}}}]},{"date":"2017-10-24","commitResults":[{"hash":"616ea9daa60ac1eadd733361c69963e60269b7ff","messageTitle":"[DUMMYDATA] Added some custom attributes to example data for TypicalPersons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"4202dcd79be99a62b99832de23e8a3c8b46c76e9","messageTitle":"[ADDCOMMAND][TESTS][FIX] Fixed assertion error problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"0f5f7a9eb33744aded8e1dfe0ece8da109a3725b","messageTitle":"[EDITCOMMAND][SYSTEMTESTS] Fixed assertion error problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5dcb782b5bdcbe64cb63f3b0b4a55c404f2d5c46","messageTitle":"[UI][TEST] Commented out breaking tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"9802eb98a3029f7765c35f2dcc821e7b0ad5cae5","messageTitle":"[CLEANUP] Deleted trailing whitespaces","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"3c12b197d97f47bb18dbd1d82d5f903e68b8d9ea","messageTitle":"[UIPARTTEST] Changed comment type from javadocs to normal comment","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":9}}},{"hash":"f7f21eaff3dcf2470d64b4c79e725c7ade446446","messageTitle":"[UITEST] Commented out breaking tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":21}}},{"hash":"79cb83264674d160c78bcb739a6b7a75a118e0b3","messageTitle":"Fixed indentation on UI part","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17}}}]},{"date":"2017-10-25","commitResults":[{"hash":"a6bbe6a619be83b4a75830b1604fdb4e831595c0","messageTitle":"[MAINAPP][VERSION] Update version tag to v1.3","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-28","commitResults":[{"hash":"2514136fa6213da688f2a518956a37487b8e9f35","messageTitle":"[UIPARTTEST] Uncommented tests that used to fail","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17}}},{"hash":"efe6565b505cc101b4e98edd581c4c2b9651e854","messageTitle":"[TESTS][STYLE] Fixed indentation problems in UIPartTests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"76eadfdbe67b56608379c9f72e26d55e7b641203","messageTitle":"[DEVGUIDE] Added UML outline for sort command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-10-29","commitResults":[{"hash":"2776e3debbf2cd98614b70be3d0666828eed3452","messageTitle":"[SORT][DEVDOCS] Updated sort command dev docs with UML outline and corrected sequence diagram","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":1}}},{"hash":"7e6416d97b4e734848f91d611399995c0871dc7b","messageTitle":"[UITESTS] Eliminated underscores to appease codacy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"9c002fbba98ddc5b0cbdec1d772254709aca3faf","messageTitle":"[SORT][BACKUP][DEVDOCS] Updated sequence diagrams for sort and backup commands","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"4516611d880f0ca967711589cc8e5f9b568bee41","messageTitle":"[UIPARTTEST] Fixed indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"91532ea0dcb5d2fc6a10a150f9c0355c2f1701ca","messageTitle":"[UI][SETTINGS] Added view and controller for password settings","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":46,"deletions":0},"java":{"insertions":64,"deletions":0}}},{"hash":"288f469100ab4250d6db00145ab1ce7f89c6d5fe","messageTitle":"[DEPENDENCIES] Added Gson library to gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"fxml":{"insertions":2,"deletions":3}}},{"hash":"0ed25a80d307a2c22a11175779e5042960f7b8c7","messageTitle":"[MAINWINDOW] Added new button -\u003e No functionality implemented yet","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":9,"deletions":0},"java":{"insertions":31,"deletions":1}}},{"hash":"0e00ab9f852d442bd6b064344cfefa040b82861f","messageTitle":"[CONTROLLERS] Added password preferences controller skeleton and AuthPreferences object skeleton code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":44}}},{"hash":"89230dce1c8be74701a54effbb5e6cc959a747fe","messageTitle":"[MAINWINDOW] Attempt to connect view and controller","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":2}}},{"hash":"8c5d7fcfd416b5ce972aad1221de20ded98dd318","messageTitle":"[UG] Made corrections to UserGuide based on external feedback","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":9}}}]},{"date":"2017-10-30","commitResults":[{"hash":"f7260467c7ae693138609cbf869582b925fa9bfd","messageTitle":"[PERSONCARD][UI] Initialize default sizes for PersonCard attributes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"500915b057c9d67c8c946c21ef28aa5c5da8f96e","messageTitle":"[BACKEND] Added backend implementation of functions for on demand size edits","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"ea219fd2f7baed57f893feb8be80250262baf7d7","messageTitle":"[UI][FONTSIZE] Implemented increase, decrease and reset to default size buttons","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":7,"deletions":0},"java":{"insertions":115,"deletions":34}}},{"hash":"c05c2f3603c2203a2e215275dc6acd2825c775a9","messageTitle":"[SHORTCUTS] Set shortcut accelerators for the increase, decrease and reset buttons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"e56d900f4ee62236c1dc86d21e5fa40336adb9a4","messageTitle":"[CLEANUP] Deleted code from authentication enhancement --\u003e To be added later in another PR","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":45},"java":{"insertions":0,"deletions":142}}},{"hash":"9baa4edd7dc8dce4582be9983a396c5abe5cc56f","messageTitle":"[CLEANUP] Deleted unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"acc0db76ce828f06bc28c2b07319939543e7c787","messageTitle":"[BUGSPLAT] Squashed a bug causing increase/reset size to fail after reaching negative font size multiplier values","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":9},"java":{"insertions":12,"deletions":11}}},{"hash":"d590741166ae479f66cc07785793299e8a33e65b","messageTitle":"[APPEASETRAVIS] Fixed new PersonCard object declarations to appease Traviss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"dd862fb09b88f8918298ca2ee4505af6069faf8a","messageTitle":"[TRAVISS] Fixed 120 character overshot to appease traviss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2017-10-31","commitResults":[{"hash":"9138d3989582827b8248ef4a8318c03f605ab182","messageTitle":"[PERSONCARD] Added getters/setters for fontSizeMultiplier","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"62c312936d4bdee43498592b92fec851f1e4afc4","messageTitle":"[JUnit] Added font size increase/decrease tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"d4f40f793cc239da9e54daf4528b3a0069ff45b7","messageTitle":"[DOCS] Made changes to standardize code/docs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3},"adoc":{"insertions":1,"deletions":1}}},{"hash":"4fe89055a0992fd982dff08212543e71cfedaaf2","messageTitle":"[FIX][CODESTYLE] Revert underscore code style violation. Provoke codacy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"85c617f60512317c18986f1ff97a6aca3d280a91","messageTitle":"[SORT][DOCS] Saved updated sort command uml class diagrams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"34281ba98e13aafd2f786de1ef4322034bb7e8b7","messageTitle":"[TASKLISTPANEL][FONTSIZE] Added high level calls in task list panel","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"0a3f320bb8b3600c5e6d48647d3f171f0e6bb17a","messageTitle":"[MAINWINDOW][FONTSIZE] Added high level calls for font size changes in main window controller","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"3cea2d519a3be8af72ec12f07d2a1e158835a59e","messageTitle":"[TASKLISTPANEL][PARAMS] Fixed missing parameter for font size multiplier","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4e6754a48e9b5f503766f599c66f734a65f0b786","messageTitle":"[TASKCARD] Implementation of lower level functions in TaskCard class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":1}}},{"hash":"814f130f04fd430c2c7cf58b7fc37819215a2354","messageTitle":"[HARDCODE] Eliminated hardcoding in resetFontSize() function in Task and Browser Panel List","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"cf0441e0898f1f66e1d6ac367d8df25c20b28a08","messageTitle":"[DEFSIZE] Set default size of id for tasks and persons to be same as name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0057a2f4d38427a90b1523397ad82cae3d12634f","messageTitle":"[TESTS] Added tests for Tasks and font size change for tasks but commented them out due to TypicalTasks bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":390,"deletions":2}}},{"hash":"c7c39d2bce011287daa1f2a698a3f35c58e6374a","messageTitle":"[NEWLINE][TRAVIS] Added newline at EOF to appease Travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"6dd919c59de153a56d2f7a35c67dffc63a4c4819","messageTitle":"[TRAVIS] Added more lines to appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"94b6d39aa07a540259d7331b1adfd1a1a3caf762","messageTitle":"[FIX][TESTS] Temporary fix for failing TaskListPanelTest due to unique deadlines related errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":10}}},{"hash":"948d9942ab575042708dc2e3c38d41a80fd6fce8","messageTitle":"[TASKCARDTEST] Fixed bugs in tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"609cfc1f95dfdcf76a686f92bcc8dada4903949d","messageTitle":"[TASKCARDHANDLE][TESTS] Appease travis by fixing constructor ordering","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":12}}},{"hash":"960abbf31da0b56381640c3c1547b088d97c5826","messageTitle":"[UG] Added user docs for changing of font sizes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":20,"deletions":0}}}]},{"date":"2017-11-01","commitResults":[{"hash":"cd2bf525d95c35282054a923c7e53ea692f124e6","messageTitle":"[DRAFT][COLLATE] Attempted to collate project","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":1},"java":{"insertions":31,"deletions":0},"md":{"insertions":4281,"deletions":1139}}},{"hash":"895c04cd8b9fcc0c9a9ffc289a2c536da14f48e1","messageTitle":"[USERGUIDE] Shifted v2.0 mockup concept to the end and replaced it with UI screenshot","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":2219},"adoc":{"insertions":6,"deletions":1}}},{"hash":"6dd6dacf1d4163bc6bbeb1dd80da2e1be9eecd1e","messageTitle":"[USERGUIDE][EOF] Added newline at EOF to appease travis","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"1366fe94227b7d46f0eeabb58a92cab546ba4833","messageTitle":"[USERGUIDE] Added keyboard shortcuts","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":6,"deletions":3}}},{"hash":"8d41f24f8301b762b3f75d73aaf6d0af4467b1fe","messageTitle":"[UGDG] Updated userguide and developerguide with documentation on changing of font sizes. To be eloborated once feature is complete","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":40,"deletions":0}}}]},{"date":"2017-11-02","commitResults":[{"hash":"25be8133b11f99f55bfc5746ddc7ee022a0b596c","messageTitle":"[SORTTASKS][JUnit FIX] Implemented sort tasks by deadline and priority (asc/desc). Also fixed relevant breaking JUnit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":32}}},{"hash":"7e073a5a6742b594fb75a5dd1139333c48a2985b","messageTitle":"[SORTCOMMAND][TESTS] Fixed some tests that were causing breakages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"4dea2099b6ca00756ed44097b8b0be5b6e5d2fa9","messageTitle":"[UNIQUETASKLISTTEST] Added unique task list test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"3e1b794ca80bd1aceeae27145096a95212fe69bf","messageTitle":"[SORTCOMMANDPARSER] Added spaces to appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":11}}},{"hash":"7275c197344b00a83f0ae1cd467f73a4945828f4","messageTitle":"[UG] Updated sort command for tasks","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":18,"deletions":10}}},{"hash":"19d4c531c82804613d1041500504599dd9f2c338","messageTitle":"[UG][TESTS] Updated userguide for sort, removed redundant getter in deadlines, and included sort tasks tests for deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":4},"adoc":{"insertions":1,"deletions":1}}},{"hash":"965f32cb69422229e852278f89faa214e2ae1a5e","messageTitle":"[SORTTESTS] Completed sort by all fields tests for tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"7f573b2e6606b8fd618e98f200294f6a2f321996","messageTitle":"[CLEANUP] Removed redundant imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"7e4f3cace2844059b465ba35cd8bb9d079afefc8","messageTitle":"[SORTTESTS][PERSONS] Added sort tests for persons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":0}}},{"hash":"15750f0622ffba37bb49e9757a0979fb398b87d1","messageTitle":"[STYLE] Made tweaks to appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":7}}},{"hash":"ae5e166a78119d9ba18430fbb7d6bf1c2756a519","messageTitle":"[SORTCOMMAND][DEVDOCS] Updated developer docs for sort command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":16,"deletions":8}}},{"hash":"3a7cf1986e02b342ac71c9f0fcec619231ac9fc0","messageTitle":"[SORT][DEVDOCS] Updated sort sequence diagram","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8f4a5eace39c8fa232b440ebd07ae547dda539a4","messageTitle":"[TESTS] Fixed deadline date comparators in tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"c303ff66e476de982854563e28902e143271b5f0","messageTitle":"[IGNORE] Ignore Collate GUI file","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":0}}}]},{"date":"2017-11-03","commitResults":[{"hash":"cf1a4567599f0f817f6d8e420e0a7add2fda6c98","messageTitle":"[FONTSIZE] New UI buttons for font size editing","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":66,"deletions":51},"java":{"insertions":58,"deletions":3}}},{"hash":"7c1c2f9f8ab3f8cd53069d8afd3aa7a198a6be17","messageTitle":"[PERSONCARD] Added black colour to colour enums","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1ce26eb5ec7e5bad174ef7e188254d9465209ab9","messageTitle":"[MODEL] Added collate comments","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":1,"deletions":0}}},{"hash":"a5300f806a9e07a5976b35b525b4a51edbddf0c3","messageTitle":"[AVATAR] Added avatar placeholder image","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3857ec7840643b703f49aad32daa01e4a180d1a9","messageTitle":"[AVATAR] Increased thickness of circle in placeholder avatar, and included avatar in UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":19,"deletions":4}}}]},{"date":"2017-11-04","commitResults":[{"hash":"ee6ad926c2379bace01e6804cf5ebbd7b46ec011","messageTitle":"[FONTSIZEMAX] Decreased max multiplier","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"2101e26711b15c56e56597394263747dca1560c7","messageTitle":"[PERSONCARD] Finalized UI design for button","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":1},"java":{"insertions":10,"deletions":3}}},{"hash":"80afc3a9e00ab35bd00a09eb4b607c6664714a4e","messageTitle":"[FONTSIZECOMMAND] Implemented middle level font size change command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"c87757bcb9cb880cb0b3b126ea80bdd589a415ed","messageTitle":"[FSCOMMAND] Implemented FontSizeCommandParser functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":6}}},{"hash":"1c1648fd04e248e9277bf6dcae2b70702e6dba04","messageTitle":"[FONTRESIZE][COMMAND] Completed implementation of font size change command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":12}}},{"hash":"48f6b4b427d0bf426f7a439b9130ef883686ed91","messageTitle":"[PARSERTESTS] Added sort command tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":2}}},{"hash":"d279023b4c13081fa99aede5a57e7fcc390a8eb2","messageTitle":"[SORTTESTS] Enhanced sort tests and made sort command parser less reliant on hardcoding","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":62}}},{"hash":"e904efa3e15950e0b0f79ad78d5bc9af130a1141","messageTitle":"[CLEANUP] Appease travis","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":2},"java":{"insertions":1,"deletions":1}}},{"hash":"5330a4ac35daa0b971af83ec43fb057742cb4e5c","messageTitle":"[TRAVIS] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"006e78163628a68daece944c345236e19a765cfe","messageTitle":"[TRAVIS] Removed unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"032edca9b5c4d59833206045999feea5048857c0","messageTitle":"[TRAVIS] Remove unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"ad64d88b76e0b8d87e6e9ea631d8a1c94364ddc1","messageTitle":"[ADDTESTS] Split tests to prevent heap size not enough error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":3}}},{"hash":"d170639a3b777d908780f132e4c31d87e3e38881","messageTitle":"[BUGFIX] Separated mega tests function to prevent java heap not enough error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"465140dfb662d9ecab39289f0d8e45cabd07c613","messageTitle":"[FONTSIZE] Added documentation for fontsize command","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":19,"deletions":7}}},{"hash":"bab9920fd1d5ca450e67050d4c56d46d7485b256","messageTitle":"[FONTSIZE] Added font size documentation in developer docs","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":19}}},{"hash":"d9fdec771052b543e4d721f2b58bf148a1929245","messageTitle":"[TESTS] Split tests further","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2017-11-05","commitResults":[{"hash":"187964c3645c33767938b66f7d3e0073c38b1907","messageTitle":"[UG] Updated UG with scenarios up to add tasks","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":60,"deletions":21}}},{"hash":"e74e24be0ea365fa1bcb2cf5e8166afcddca00b8","messageTitle":"[TESTS] Added some parser tests for font size command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"bff987779806560524698121e3deeb7c25249307","messageTitle":"[TESTS] Appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"8e8f5142f61e38a891d7104c8426cd550a12de78","messageTitle":"[UG] Minor changes to UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":4}}},{"hash":"0f52f614987601d1f96e60750f2775a6fc4af6ed","messageTitle":"[TESTS] Used imports instead of long names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":17}}},{"hash":"e55c1c9b0acbbbd8f95b1a75b23f5bf603541eb1","messageTitle":"[FONTTESTS] Added FontSizeCommandParser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":2}}},{"hash":"136cf4696d48eb166e090f8f7ada4817e5f8303a","messageTitle":"[CLEANUP] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"b051a8c1c31372153a6c29e989601b98bf323939","messageTitle":"[CLEANUP] Test cases and cleanups","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":8}}},{"hash":"dd56229dd4f86d9d06716e7e3acf2f2c0a894546","messageTitle":"[TRAVIS] Appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"f1b651881e063a7a1a22823b1b2f9ba4ccfeb0f1","messageTitle":"[UG] Grammar checks in UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":2,"deletions":2}}},{"hash":"afb3f1ff43e2cbed0a56918d742503511e0c0829","messageTitle":"[PARSERTESTS] Used heuristics to minimize tests for sort command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":35}}},{"hash":"d64e927ac2abbf5c3e30ee621797cadf0b6ca400","messageTitle":"[PARSERTESTS] Use heuristic tests to focus tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":21}}},{"hash":"78a19eb3c84bdf7c7a3b15c2e13ced8d3d50f5a1","messageTitle":"[TRAVIS] Appease travis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"66362e64a37f04617e0fbfc3eddce4950be83263","messageTitle":"[TRAVIS] Deleted unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"c720373906644a8ed74765345c932aed14df3b74","messageTitle":"[EVENT] Added event class for font size change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"528338b1ff9e83737870693e9355daf89fa39a13","messageTitle":"[CLEANUP] Replaced old implementation with new events","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":29}}},{"hash":"badc83de148a19d1e774928e50140b4727284bd7","messageTitle":"[MAINWINDOW] Prepared for handling of font size change events","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"bb2b0872fe4c1a8126e6a7633219e1a7e3179a7d","messageTitle":"[FONTSIZE] Fixed restriction on fontsize problem","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":69}}},{"hash":"74c03491d52a3f69b0e5a72edc2a919d0eaba768","messageTitle":"[FONTSIZE][FIX] Fix 2","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":5}}},{"hash":"0574543c295b8173cfe8bfd2c0f7d915f8491507","messageTitle":"[CLEANUP] Removed unused import from ModelManager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"9b4e1cdac5848c8d232e8a273b3383e8dc1574b6","messageTitle":"[FONTSIZECOMMAND] Standardize method for raising event for font size changing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":5}}},{"hash":"ac0a8a365fc9d56746fe5e8f85827e90e2873721","messageTitle":"[DG] Updated developer guide to reflect new implementation for font size changes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":11,"deletions":7}}},{"hash":"8894d46459a20c2b87eb1ef8d3f6da2d4fbcdb89","messageTitle":"[COLLATE] Added collate tag in TaskListPanelTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"54cb8df9a39ccd7d3937f35ebf5b999139b4a227","messageTitle":"[CHECKSTYLE] Formatting changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":20}}},{"hash":"13b83af28ec12ae10b33fd3befff3652439d5c4f","messageTitle":"[CHECKSTYLE] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"d950093568b4cd9f9562c66adebe16bbefbd97b6","messageTitle":"[TEST][FIX] Fixed sort command tests in AddressBookParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":17}}},{"hash":"eb4f5e6db1023e4f256d49467fafb9cb32c076c3","messageTitle":"[AVATAR] Set up avatar classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":2}}},{"hash":"c600f403d2e3c46e70d5694b5e614446fb8420b4","messageTitle":"[AVATAR] Set up classes for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":7}}}]},{"date":"2017-11-06","commitResults":[{"hash":"b793bd3fa3f4aa115ad8ca1debab7fb6348ba983","messageTitle":"[BACKUP] Deleted buggy backup option and standardized backup command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":25}}},{"hash":"55ad281b2b68482bf98882827557fd58e47367c0","messageTitle":"[CHECKSTYLE] Fixed styling problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"6ba87d5c522ecab77d1e0be140e7cd141bb11fe4","messageTitle":"[PERSONCARD][AVATAR] Removed change avatar button","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":8},"java":{"insertions":0,"deletions":6}}},{"hash":"13c1892ab0a07fbecc57b69dc15d6106e8d9c689","messageTitle":"[TESTS][FIX] Fixed backup command parser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":17}}},{"hash":"187431235cbb5fdb20b1f1533a6a6479b40a2851","messageTitle":"[EDIT][PERSON] Made edit command and person accept new field of avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":4}}},{"hash":"142967348fe82894f17b48ff376f883153157ce8","messageTitle":"[ADD][AVATAR] Added support for avatar in add command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"01afde0ac7495c012f0fd21e4dd7fdfee1f4733c","messageTitle":"[PERSON][AVATAR] Added support for avatar in person class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"38f5f0536da3223ffaeb81c6550e3c46f5fae907","messageTitle":"[PERSONBUILDER] Added support for avatar in different classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":15}}},{"hash":"a6ec9b501a1ae5328e50726d850495520c4aa2d4","messageTitle":"[PRIVACY] Added missing condition in equals method of ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"f6c86627db002697d5fa809f43731e89294f8a22","messageTitle":"[PRIVACY] Added missing condition in equals method of ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"473beb79460d7b8021deb3ae0a0795dc3e39aa61","messageTitle":"[PRIVACY] Fixed some bugs for support for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"d140fc54d2b1257073f77be071173f03d4cd327c","messageTitle":"[XMLFILE] Added missing condition in XMLAdaptedPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"2c7f01b14ed7441a58e4b68a6ff2df5a1058aadd","messageTitle":"[FIX] Fixed typo in xml adapted person class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fef5b79c83d9ade0ebf9f7a9ad42c3f030d696ff","messageTitle":"[EDITCOMMANDPARSER] Added support for avatar in the command parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"4d4135bd71c0b4fdd585f0682650a9682a5a6511","messageTitle":"[PRIVACY] Added bug fixing method to support avatar in ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"67fc2dbd0f8bb615b21dcab39dc04d43598815a5","messageTitle":"[STORAGE] Deleted unused method from storage manager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}},{"hash":"97b13563703c35e6d51693890afb830419a63535","messageTitle":"[CHECKSTYLE] Cleaned up unused code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"092f95a425518c82caea371536bc2b1bc27a4673","messageTitle":"[CHECKSTYLE] Fixed checkstyle problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":4}}},{"hash":"819e33846e3083cc514801d6a4ba7603b2b04675","messageTitle":"[PERSONCARD] Added getter for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"0145dc9d593504f01b080ba46728bef7cb81208e","messageTitle":"[READONLYPERSON] Added avatar string in ReadOnlyPerson get as text","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"0e4ad843b50dab98e524d474cf451fbcf5813e14","messageTitle":"[TESTUTIL] Edit person descriptor support for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"7cd3a627196005dbd433ae339aca94ab727b188e","messageTitle":"[COMMANDUTIL] Added avatar support","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}}]},{"date":"2017-11-07","commitResults":[{"hash":"767c835bbbf22bc516e11566721f8c0be3eca97d","messageTitle":"[BUG] Half-fix for parse issue with avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":12}}},{"hash":"d33a25740a34b03bfd9d1643346107e68d51aec8","messageTitle":"[TEST][FIX] Fixed parse optional fields missing success test in addcommandparser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"2dc11599c41d1668f96d456778f375c1c62d1996","messageTitle":"[FIX][TESTS] ixed all add command parser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1a75e1f9fc68274b74814f8166d1dc4affac02fa","messageTitle":"[PERSONUTIL][FIX] Fixed broken test in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"12f24d20b4efd1b6140a57184ee2c097ed570003","messageTitle":"[FIX] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"85f71b35ef533fa7577aade955ec21fb47caaac0","messageTitle":"[AVATAR] Set up avatar classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":2}}},{"hash":"7a686ffe148479b8b78cc5e34c75390f62c61e6e","messageTitle":"[AVATAR] Set up classes for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":6}}},{"hash":"385a8257217c56e2ff230b5cfe376f3ae5f07fae","messageTitle":"[PERSONCARD][AVATAR] Removed change avatar button","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":8},"java":{"insertions":0,"deletions":6}}},{"hash":"ec38601ac01a61bc3f4d4d5e3fda171222e175e3","messageTitle":"[EDIT][PERSON] Made edit command and person accept new field of avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":4}}},{"hash":"ee04676542e26fde449a2b7111cad216ce5bf7fb","messageTitle":"[ADD][AVATAR] Added support for avatar in add command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"6cf4c79d1fb4565c0f1b93dc1aaf2104b3622144","messageTitle":"[PERSON][AVATAR] Added support for avatar in person class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1dc6ecc3f2fd05ab491897da76798393d837d61e","messageTitle":"[PERSONBUILDER] Added support for avatar in different classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":37}}},{"hash":"a2cc94b457c5d3b4ce027208bb5ea7bee4c11170","messageTitle":"[PRIVACY] Added missing condition in equals method of ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"fcc41475b49d8bbb5f7bc04c25e479fa3a4c8b9e","messageTitle":"[PRIVACY] Added missing condition in equals method of ChangePrivacyCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"a022e9548164dd29e8688fbbea887e89be24a894","messageTitle":"[PRIVACY] Fixed some bugs for support for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"f4fa28860f1e97e68b9154af3043043a76356de0","messageTitle":"[XMLFILE] Added missing condition in XMLAdaptedPerson","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"ad2863f6ce396656051feda8fce4c6bba0c2bf31","messageTitle":"[FIX] Fixed typo in xml adapted person class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"632d06b9b2b5119828c8c154bd7d5c8b4d564f8b","messageTitle":"[EDITCOMMANDPARSER] Added support for avatar in the command parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"b5402c863c9e79b675c864c08c31c131e466b713","messageTitle":"[CHECKSTYLE] Fixed checkstyle problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"96e8f3445c9f412f76d4f8ef4a0ff9eaa94f2e94","messageTitle":"[TESTUTIL] Edit person descriptor support for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"709b4db4f62449edbfe8bf9c13b06d6b6dbbbb4f","messageTitle":"[COMMANDUTIL] Added avatar support","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"af4b99d55b1684bd2892a8bac18b6a070f17fcf7","messageTitle":"[BUG] Half-fix for parse issue with avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":12}}},{"hash":"335a858fdea786b9d71aa09a7e3222a5f38e3384","messageTitle":"[TEST][FIX] Fixed parse optional fields missing success test in addcommandparser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"e8cff7c316011ad4d3e8c820fe0b91f7fcaa69cd","messageTitle":"[FIX][TESTS] ixed all add command parser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"3cf78f8e5c478f137e1c734ca20d9a08cfdc737f","messageTitle":"[PERSONUTIL][FIX] Fixed broken test in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"6a66907891f218d32ed85bae38ede041671a518a","messageTitle":"[FIX] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"0963c2709ac4914ecad1dc58e9386aa27c5e2710","messageTitle":"[EVENT] Added new event for avatar change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":1}}},{"hash":"2e497ebafe2b09eef3c26f0cac266ca147e9da74","messageTitle":"[AVATAR][EVENTS] Added newline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"71a130b04140ce9d19355ca1cf382434af01b1ab","messageTitle":"[COLLATE] Added collate comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"c3d92d50da9b66a27119227c5b84add12cde5f01","messageTitle":"[PERSONCARD] Remove avatar variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"0c43fa5180579ccf7cdc0d6855bcecaa52ca499b","messageTitle":"[AVATAR] Took down avatar from person list cards in panel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":50,"deletions":78},"java":{"insertions":1,"deletions":56}}},{"hash":"6b4ab68f60aa47a44ce11922656ba6101004a970","messageTitle":"[AVATAR] Implemented avatar on new selection panel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":3},"java":{"insertions":23,"deletions":1}}}]},{"date":"2017-11-08","commitResults":[{"hash":"73782065a7ad86a52e29b5f44ed087c0598cbc2a","messageTitle":"[PERSONPANEL] Changed minimum width for person field names","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5}}},{"hash":"0fb1e585e71bc0bb4ffbfcefbf06c691e394cb57","messageTitle":"[DELETE] Deleted event for changed avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":30}}},{"hash":"f239e73dbd8768ea268d3182856b3d9c583a9d47","messageTitle":"[UG] Added bits and pieces to include avatar field","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":8,"deletions":4}}},{"hash":"6d868a65f6f536991050289a2923e5d76ebef8f9","messageTitle":"[UG] Made a few tweaks to UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":1}}},{"hash":"b09cac42b0ad1a27bcfc43e25c04104e32c77859","messageTitle":"[DG] Update DG to include implementation of avatar setting","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":36,"deletions":0}}},{"hash":"20915147a11c546806c075233df28793b219e847","messageTitle":"[VERSION] Change version to v1.5","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"680c804abbd7c7a2f15367aa9942fdaa43e33f47","messageTitle":"[COLLATE] Updated collate files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2},"md":{"insertions":5640,"deletions":5560}}},{"hash":"c99d4cfe59c54057ffc3be0111a05bf8af2ced13","messageTitle":"[UG] Removed trailing whitespace","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"68aae7512b463f4cf11b1a55f853da523f3bafab","messageTitle":"[DOCS] Update docs and added contributions doc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":161,"deletions":43}}},{"hash":"b73b362b0c6d07ab01deefcdbc91dcb7a3e8f65b","messageTitle":"[DG] Added some asciidoc fixes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"f161d2d25a039a88b79c5c4fec7fbce55ece47c5","messageTitle":"[EOFNEWLINE] Added newline at EOF","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"9cc01d66962266f433fce9c6821cff14319a7afa","messageTitle":"[DOCS] Delete john doe example adoc file","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":0,"deletions":50}}},{"hash":"72153e9329609d2038b4714bc52be16f871d9d21","messageTitle":"[STORAGE] Deleted unused method from storage manager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}},{"hash":"4bce12dbfcc9a7140c1e93c0b62cda41cd59122c","messageTitle":"[PERSONCARD] Added getter for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"244ccce415d5012d949606140fbda053babee3ee","messageTitle":"[READONLYPERSON] Added avatar string in ReadOnlyPerson get as text","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"722701f45955d02a2a495c7d09c06dd6075cc580","messageTitle":"[EVENT] Added new event for avatar change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":1}}},{"hash":"555e09b7accb22263f58f6a9828759a316f9a580","messageTitle":"[AVATAR][EVENTS] Added newline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"83e1c2fd482c4fa2537f11b86320759339a154fc","messageTitle":"[COLLATE] Added collate comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"43c8ee343b1d0723b19d7c3c7563477841745e56","messageTitle":"[PERSONCARD] Remove avatar variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"cd57a99d87b41ab3cc2d21cbd9f19eec51b20b5c","messageTitle":"[AVATAR] Took down avatar from person list cards in panel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":50,"deletions":78},"java":{"insertions":1,"deletions":56}}},{"hash":"966a7d74d7182939395601bb78ed600ef0b94c23","messageTitle":"[AVATAR] Implemented avatar on new selection panel","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":3},"java":{"insertions":23,"deletions":1}}},{"hash":"f28b97cb7358651c2bff1b9ba49cc47db623bab0","messageTitle":"[PERSONPANEL] Changed minimum width for person field names","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5}}},{"hash":"a1d33a2144336e00379e0fb933d99bcca94b3827","messageTitle":"[DELETE] Deleted event for changed avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":30}}},{"hash":"081d360e296a86f491df4b8103f2eb83966b21fd","messageTitle":"[UG] Added bits and pieces to include avatar field","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":2}}},{"hash":"efd1b8343118723fdfa579a5604543a931165320","messageTitle":"[UG] Made a few tweaks to UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":15,"deletions":0}}},{"hash":"f0ba8c5b0c5c6a41f6a28c1c1ef49286eca1474c","messageTitle":"[DG] Update DG to include implementation of avatar setting","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":36,"deletions":0}}},{"hash":"a4fb8344b3c71a311d850f04f7348d18dc997571","messageTitle":"[VERSION] Change version to v1.5","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c7b362faeb281cc3775c0bddb6cd4a6f21bbf799","messageTitle":"[COLLATE] Updated collate files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2},"md":{"insertions":5640,"deletions":5560}}},{"hash":"8783c5e1a07e3414ef86d72a7652aef89d1b3487","messageTitle":"[UG] Removed trailing whitespace","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"7f5e99628b44fc8153bbbfd93417a163ef339d75","messageTitle":"[DOCS] Update docs and added contributions doc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":161,"deletions":43}}},{"hash":"343a70ff4f61ccf454b236dd5df801e9bd321c9f","messageTitle":"[DG] Added some asciidoc fixes","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"0c0284c24617013d1fff1579cd6caf932dd30cca","messageTitle":"[EOFNEWLINE] Added newline at EOF","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"6c84f30a713ed61a4daff123a61904a169a90340","messageTitle":"[AVATAR][URL][FIX] Fixed issue where image persists when selected person has invalid URL for avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":7}}},{"hash":"cd3815d69f33c046ccd61a1799677f3700455d0b","messageTitle":"[DEPEDNENCIES] Added apache commons dependencies and set up sha256hex hash variables","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":12,"deletions":1}}},{"hash":"b6d4637118937b2072ed87044c227d056405b1ab","messageTitle":"[AVATAR] Removed unused dependencies and enhanced avatar to allow URL, filepaths and default to placeholder","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":2},"java":{"insertions":24,"deletions":12}}},{"hash":"afd8812fc65146bf1f09d0cfc1ea07d2f6d8b458","messageTitle":"[AVATAR] Standardized initialize avatar","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":13}}},{"hash":"e6f7b3abf44b89a1e5cc27f52e5b5989d49131a7","messageTitle":"[USERPREFS] Changed default address book name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"f0f5a474a03bd3343fcfd48a3aec6988be734b66","messageTitle":"[CPSCOMMAND][STUB] Added change password command stub","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"692c32963a32d0b8638bb503a1875dc9c0307da2","messageTitle":"[CONFIG] Changed Address++ config default name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4246137e2365f3c5370b0b4b67703a34c8a00f1a","messageTitle":"[CHANGEPASSWORD] Change password command attributes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"4e733edfa93d5a9a174062be72f93fcad1c8a227","messageTitle":"[CHANGEPASSWORD] Set up forward hash function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"ebbf0019af5813fc67681d6dd4b8db422b2c9240","messageTitle":"[CPSCOMMAND] Added helper functions to be used by execute()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":4}}},{"hash":"a6c54e4c85bd440104ae52343ddbf37f84f3b1aa","messageTitle":"[COLLATE] Added collate comment on CPS command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"e4b643c70d5fef2514de00e9d962f891bfba5f51","messageTitle":"[CPSCOMMANDPARSER] Changed incorrect comments in SortCommandParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"a373eb02520fd8c14146e9082576fa706f513a1f","messageTitle":"[ABPARSER] Added command word and alias cases for change password command in AddressBookParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"3306f3b75af1b08e84161d6d5076944c7be47de1","messageTitle":"[CPS][CMD][PARSER] Added parser for change command password command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}},{"hash":"f0095660d5b5057683d90366b6c0851b94650331","messageTitle":"[CPS] Implemented change password command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":6}}},{"hash":"7e7b928af099c203a0b2a72d410812cd05eddf4b","messageTitle":"[CPSCOMMAND] Fixed bug for change command password","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"25b3183b73f5ce4cb1bb01d263b35bef6a3f82ab","messageTitle":"[LOG][CPSCOMMAND] Changed logger messages for CPS command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1825b31232b5e321914d982eed73b883facd1bf0","messageTitle":"[CPS][COMMAND] Added new condition for old and new passwords being the same","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"4ca0def12bd10436afa7fa1eaa5c7d061a5e72b9","messageTitle":"[COMMANDRESULT][CPS][COMMAND] Added messing command result argument","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8ec8b1cf533dfbd3d486c441f28547c30f81d6f8","messageTitle":"[TODO] Added todo to solve persisting of default preferences.json using event handler","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"97d821581792cff4fba9a3f17d33a2e1501fdb55","messageTitle":"[CPSCOMMAND] Fixed bug where userprefs does not persist and is replaced by MainApp\u0027s default user prefs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"a5b379292fa49d9df99065efe518c54aa5e5b46a","messageTitle":"[MAINAPP] Set version to v1.5","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-09","commitResults":[{"hash":"178cc0cb8100f28bcc3a026b78c9b033a1f7220c","messageTitle":"[MODEL][PASSWORD] Set up variables for password in model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":1}}},{"hash":"7bf8244175025cc701e532943b3db2cf60790796","messageTitle":"[LOCK] Implemented LockCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}},{"hash":"fa0919212fc39c70364bdc34565408804664fece","messageTitle":"[UNLOCKCOMMAND] Added implementation for unlock command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":0}}},{"hash":"8a8a7c7f92ba37f90feae720b8c3678c67fbb50c","messageTitle":"[UNLOCK][STYLE] Added missing semicolon in code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1b28478e6b5f493d244366fa41d01948d5362ffe","messageTitle":"[BREAK][LOGIC] Breaking changes to logic to avoid coupling while passing lock state info from model to parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":3}}},{"hash":"a4f7048af107a8aed950d70f8b3cdbec375fdf3b","messageTitle":"[PARSER] Added lock and unlock command parsers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":0}}},{"hash":"de9a13580cd264e6f6de0b6656c7248f1c4a3891","messageTitle":"[PARSERTESTS] Fixed missing state arguments for addressbook parser tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":67}}},{"hash":"fedd4a053f6907daabcc5b2a3c5e75f8cc5d4943","messageTitle":"[COLLATE] Added collate comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"426cd830ff7ffd83502457d748aca34ad33fac0f","messageTitle":"[UNLOCK] Corrected comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"a4289471ec0f94a6a1dcee7a21924c599fb6bc8d","messageTitle":"[LOGGER] Added logger statements to locking commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"ac83933619895874203c1f3bc9ae14485447c34e","messageTitle":"[TESTS] Added getter method for lock state in stub model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"74cb89790a61fc50d4fdbaac9e535aa7fb690c4b","messageTitle":"[COMMAND] Added stub command to deal with situation where user has no access","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"e108441e1efa3b0db19172c24c18517454e76a30","messageTitle":"[PARSER][LOGIC] Changed logic of AddressBookParser to test for font size and lock commands first","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}}]},{"date":"2017-11-10","commitResults":[{"hash":"f5122337812f79c6c198b4b763675d09b95248a7","messageTitle":"[FIX] Fixed bug where lock state never changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":31}}},{"hash":"28dfe4cfe0ac7260b60f32351e5b28fb5d087a6e","messageTitle":"[BUGFIX] Fixed no prefix parsing problem","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":8}}},{"hash":"7f963238330bc999b345e4a88fa544e2f0f0a26b","messageTitle":"[CLI][PREFIX] Added prefixes to CPS, Unlock and Lock commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":8}}},{"hash":"a572422c8ad8f468712f219d70ad17d642526567","messageTitle":"[CPS][PREFIXES] Added prefixes to change password command parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":20}}},{"hash":"69125f21bedc6c247ef05ac423f9009594f62951","messageTitle":"[PARSER][CPS] Added check for size of args input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"4ff67ff782426ec86a806b1ad8eab5b1e7069355","messageTitle":"[BUGFIX][CPSCOMMAND] Restrict CPS Command Parser to accept arguments with prefixes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":25}}},{"hash":"2fdf781022ff30c939c5477d1c8fbe3e3c34d6ce","messageTitle":"[CLEANUP] Remove unused variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"f126ec45ca495bc5719f361758e5913bb10ea74b","messageTitle":"[PARSERTESTS] Fixed breaking test in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"629c79fb8a3c494464c813cef5a9412af8699bc7","messageTitle":"[CHECKSTYLE] Appease traviss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"fada751ae6ad18e62d8835cd84d6cdcf966c9fe6","messageTitle":"[TRAVIS] Fixed some checkstyle problems","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"eebb6b2d17be0b8f3fe2b4cc41416d28c3a9e661","messageTitle":"[TRAVIS] Swapped static constant to the top in addressbookparsertest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}}]},{"date":"2017-11-11","commitResults":[{"hash":"c44c81f940e141178b393509ffaeb755a54f400e","messageTitle":"[SYSTEMTESTS] Fixed crazy glitch in model\u0027s default lock settings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"82b3aaada43ccb9ddcd08f4588ab66fcf43f82f3","messageTitle":"[PARSERTESTS] Set some commands to not require any unlocking","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":16}}},{"hash":"fb100dd08aa581380d283f78df5b1561c0a5d68d","messageTitle":"[LOCK] Set lock to default false","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":23}}},{"hash":"fb8f84f166b495bb231b258980dc92a1b24d67e3","messageTitle":"[USERPREFS] Set up default lock state value","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"7e8adb3bd291a7bc8e0796a2ca5ce881299540ab","messageTitle":"[LOCKS] Persist lock in userpreferences","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":47},"adoc":{"insertions":0,"deletions":36}}},{"hash":"a7346348236a86dd67d33a1cfa9968a8566d22cc","messageTitle":"[TEST][FIX] Fixed tests grabbing lock state from model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":19}}},{"hash":"7922adadbfd6df12f8dd5b54ce35a5df6cb6bdbb","messageTitle":"[FIX] Fixed lock state persisting glitch","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":2}}},{"hash":"f0b4f711c4ba3928d2fdb0b980113b759edd4217","messageTitle":"[STORAGE --\u003e MODEL] Passed userprefs editing back to model","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":103}}},{"hash":"7b0716acf336782d6fd7ac02abd13dce2f6d4884","messageTitle":"[LOGIC][CLEANUP] Deleted unused constructor in logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":9}}},{"hash":"c2b3aa80944c466336eb16234eea83185953298f","messageTitle":"[USERPREFS][BUGFIX] Fixed userprefs calls in various commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":59}}},{"hash":"e7506b66137ece57649ef3d338b4b6e2cb4b62e3","messageTitle":"[TESTS] Added parser tests for change password, unlock and lock commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":18}}},{"hash":"3ff467601a41d154040ec67a4dd76cfab26e2000","messageTitle":"[MESSAGES] Removed [] from messages in commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":6}}},{"hash":"d38d3849bbb7f0269b8355f29338d2b6eb1db1e4","messageTitle":"[EXCEPTIONS] Changed incorrect lock, unlock and changepassword input response to throw exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":8}}},{"hash":"45df5427c36e0b58dadf677d38f3aeab6a524d92","messageTitle":"[CHECKSTYLE] Reduced line length in AddressBookParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"6f69bce7b4912c4cbc1b5f170f3f173de9c6ccbf","messageTitle":"[PARSER] Refactored parser code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":60}}},{"hash":"75de7f38002dee6ae7eb6f08aaf42de8cc4ab1ab","messageTitle":"[IMPORTS] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"599acd761b5df8de37043ddf36520d088e9eb0b2","messageTitle":"[UNLOCK][LOCK] Added simple JUnit tests for lock and unlock tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":0}}},{"hash":"210796b666bfc97434e6a2a7fc73c6d3df659c9f","messageTitle":"[TESTS] Added change password command tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":21}}},{"hash":"62c215c9b80bb0ebe334555e0a038d1975194228","messageTitle":"[UG] Added lock and unlock UG","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1},"adoc":{"insertions":35,"deletions":0}}},{"hash":"ce51c307c8c517351c37cfd730890bf891b2184b","messageTitle":"[UG] Completed changepassword UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":23,"deletions":1}}},{"hash":"b5d6df64e2c7ac59702d00c6ade09b0b03140d8d","messageTitle":"[UG] Scenarios for backup","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":13}}},{"hash":"8889e67036793c7cf803b583d73dcb754c523f24","messageTitle":"[UG] Replaced examples with scenarios for Sort Command UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":17,"deletions":17}}},{"hash":"b50faca3dbd4ddff67bca03416f74f01c73c41b7","messageTitle":"[UG] Added lock and unlock UG","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1},"adoc":{"insertions":35,"deletions":0}}},{"hash":"43fb501ceb60911d58700320f202fb57ea8f572a","messageTitle":"[UG] Completed changepassword UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":23,"deletions":1}}},{"hash":"9ee95e69c6054ed5e0cfb3829eb9ca63af94988a","messageTitle":"[UG] Scenarios for backup","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":12,"deletions":13}}},{"hash":"aecc88abd0e79e485489962b6725f242c3a475a1","messageTitle":"[UG] Replaced examples with scenarios for Sort Command UG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":17,"deletions":17}}},{"hash":"4fe843a1c296d7ef422eb5dba74fda1dc03ed649","messageTitle":"[BACKUP][FIX] Fixed backup command through the use of event handler","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":21}}},{"hash":"606a5fb6a5ad722ac21aa8e4a092db9399d9f433","messageTitle":"[ADOC] Added new sections to adoc","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":38,"deletions":8}}}]},{"date":"2017-11-12","commitResults":[{"hash":"3a3ec747129d1ee1a048f4f4b56626d45b92d13e","messageTitle":"[DG] Updated backup and lock/unlock segments in DG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":88,"deletions":1}}},{"hash":"d096785adfaf1f59d2561c3b1b00353d6bb95c83","messageTitle":"[BACKUP] Removed unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"224da6d024287d2d895bbf701fb496c568fe0c24","messageTitle":"[DG] Added activity diagram for lock states","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":1}}},{"hash":"b4b671e671ad3d917328322884c0e643b5b4d47d","messageTitle":"[UGDG] Completed UGDG for ChangePasswordCommand and edited Backup docs","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":54,"deletions":26}}},{"hash":"226c4b561f431ae0e29c4f3a36ee0430b6b05675","messageTitle":"[DG] Updated user stories","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":7,"deletions":0}}},{"hash":"a5bd6fe9249bbe6ec4670f7a52111a437f305e74","messageTitle":"[DG] Added some user stories","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":3,"deletions":1}}},{"hash":"a42d6c086a675fb7d3f24abf71f9daf3c19f32b3","messageTitle":"[README] Reupload README","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":36,"deletions":0}}},{"hash":"58b4b6b37df50d05c10d437cf5e7db7f74bfd652","messageTitle":"[COLLATE] Updated collate files","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7917,"deletions":6584}}},{"hash":"3aaac9b5457341ce6e80db92fdea82ab4600d3e2","messageTitle":"[UGDG] Fixed errors in UGDG","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":47,"deletions":63}}},{"hash":"e88876046d36541c6bba69c4bcd018234045a702","messageTitle":"[DG] Deleted rc from note","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"24e5facd18590118f3cdc1091a76c4d3a2be1c00","messageTitle":"[DG] Increased width of some diagrams","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"0a688c43b7e3cc8adabfb7dcf997b9b83358a99e","messageTitle":"[DG] Elaborated on the SHA256 note","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"86e7bef1aaf242d307076b1026f156ff6b20cbd0","messageTitle":"[ADOC] Updated adocs","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":5,"deletions":1}}},{"hash":"603bb2b5a7c5c04041815debe274ee18c4ebb205","messageTitle":"[ADOC] Changed UI screenshot","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"0de8c1a52b1de2625afb092ecc1b0e6697838585","messageTitle":"[UG] Added missing shorthand for fontsize","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":9,"deletions":3}}},{"hash":"e91434f04d1d0800dabb65d9bd94a5d997847e40","messageTitle":"[COMMANDS] Fixed messages and set new command exception","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":11}}},{"hash":"6161a861528885552436dede6f79bd5bc912a4eb","messageTitle":"[FIX] Fix deadline comparator","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"92bc27cabb393f91efbfa78e129f88030db7c956","messageTitle":"[SORT][FIX] Removed from constants","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-13","commitResults":[{"hash":"00f63831d0ef0d376b9f46fa0548a374ce1776b8","messageTitle":"[IGNORE] Updated gitignore files","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":1,"deletions":0}}},{"hash":"bd758f095c20be849ffa9ebb138d4191a5e944c5","messageTitle":"[DOCS] Updated project team about us docs","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":2,"deletions":1},"adoc":{"insertions":3,"deletions":3}}},{"hash":"b070847bc989f27121c6a5c24dc5a00835ace34f","messageTitle":"[IGNORE] Ignore private adoc files","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":5,"deletions":2}}},{"hash":"6a37b1aab7d16e2630021b15b6db15186ce6155f","messageTitle":"[IGNORE] Ignore all private files","messageBody":"","fileTypesAndContributionMap":{"gitignore":{"insertions":4,"deletions":4}}},{"hash":"6b866b8717979c74510b52806b696f42db63178c","messageTitle":"[DOCS] Corrected Kelvin\u0027s github id","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"1c8e98fccb0a8b4a3578627df94e97bd1a40440c","messageTitle":"[FIX] Correced yi ming\u0027s github id","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}},{"hash":"0b4f5852db7c914d3f93f63ad56fa9aaa37febaa","messageTitle":"[MANUALTESTING] Added manual testing script for various commands","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":324,"deletions":0}}},{"hash":"3da8abcbb4d597e47581be2d332b265856944c74","messageTitle":"[DOCS] Added eof to test script","messageBody":"","fileTypesAndContributionMap":{"adoc":{"insertions":1,"deletions":1}}}]},{"date":"2017-11-20","commitResults":[{"hash":"9cd934b10f4b5015d8bc1deec0fa9f4d1f3b1965","messageTitle":"[COLLATE] Updated collate files","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":1},"java":{"insertions":0,"deletions":8},"md":{"insertions":1310,"deletions":1451}}},{"hash":"867d66eab9bd0ddc3656cb960b6a6fcabcd5e22e","messageTitle":"[UPDATE][COLLATE] Updated collate files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3},"md":{"insertions":20,"deletions":74}}}]}],"ndt":[{"date":"2016-08-25","commitResults":[{"hash":"b8ed0900daea2e5e2f771cd4453099a9eaa6ce19","messageTitle":"Implement delete command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":49},"xml":{"insertions":1,"deletions":2}}},{"hash":"2137a96c30aaf2c971ec5e6ba44a0cb433db8072","messageTitle":"Add displayed index to list cell card","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":8}}}]},{"date":"2016-09-04","commitResults":[{"hash":"3346f95f0831a775a11a5f0fbb73a553a012244f","messageTitle":"Add gui tests for delete command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":2}}}]},{"date":"2016-09-05","commitResults":[{"hash":"129fd977cae7a2ed093753363ae0faab8d5243dd","messageTitle":"Rename delete test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}}]}]},"authorFileTypeContributionMap":{"Joshua Lee":{"gitignore":1,"java":200,"fxml":1},"Martin Choo":{"gitignore":4,"yml":8,"gradle":11,"xml":29,"java":105,"fxml":10,"css":8},"VeryLazyBoy":{},"Wang Yiming":{"md":431,"adoc":316,"java":208},"chao1995":{"xml":31,"java":448,"json":7},"Sam-Mauris Yong":{"java":4},"MightyCupcakes":{"java":153,"fxml":26,"css":60,"html":9},"Jeremy Goh":{"java":8,"fxml":7},"clarencechee":{"java":25},"Ka Yi":{"yml":8,"gradle":26,"sh":42,"adoc":60,"css":426,"java":26},"eugenepeh":{"xml":64,"adoc":41,"java":126},"You Liang":{"java":1022,"fxml":10,"xml":44},"Zhi Yuan":{"gradle":1,"adoc":9,"java":329},"Pierce Anderson Fu":{"java":2},"limmlingg":{"gradle":2,"adoc":523,"java":223},"Jia Yee":{},"Lim Shun Xian":{},"Miao Ling":{"adoc":350,"java":147},"Leow Yijin":{"gitignore":2,"java":184},"Tan Wang Leng":{"gitignore":2,"gradle":26,"adoc":163,"java":1908,"fxml":20,"css":6},"Damith C. Rajapakse":{"gitignore":1,"LICENSE":21,"yml":1,"gradle":6,"adoc":178,"java":1638,"json":38,"xml":1},"Ziyang":{"java":1},"Paul Tan":{"yml":22,"gradle":5,"xml":23,"sh":70,"java":327,"fxml":14},"Kelvin Lin":{"adoc":7},"Akshay Narayan":{},"Zhi Yuan Yong":{"gradle":2,"xml":5,"adoc":61,"java":4574,"fxml":1},"Esilocke":{"gradle":2,"md":2986,"adoc":2578,"java":8366,"css":1,"fxml":224,"xml":377},"Lin Han":{},"Jeffrey Goh":{"md":2005,"adoc":1198,"java":1076,"css":357,"fxml":41,"html":1},"Thien Nguyen":{"java":148},"Edmund Mok":{"java":137,"css":13,"fxml":9},"Huang Chao":{"yml":9,"xml":14,"java":154},"PierceAndy":{"java":183},"ACER\\kyle":{"md":6026,"adoc":698,"java":26},"zzzzwen":{"java":51},"m133225":{"gradle":62,"java":2,"css":49,"fxml":5},"Eugene Peh":{"xml":78,"java":139},"You Liang Lim":{"gitignore":10,"gradle":88,"xml":222,"txt":9,"properties":9,"gradlew":164,"bat":90,"java":1177,"css":229,"fxml":27},"Charles Goh":{"gitignore":6,"adoc":1016,"md":3042,"java":1177,"css":1,"fxml":32},"ndt":{"java":11}},"authorContributionVariance":{"Joshua Lee":1588.3389,"Martin Choo":1667.9159,"VeryLazyBoy":0.68643993,"Wang Yiming":18939.285,"chao1995":1123.2808,"Sam-Mauris Yong":1.120754,"MightyCupcakes":1445.9941,"Jeremy Goh":0.27060726,"clarencechee":19.120884,"Ka Yi":596.6855,"eugenepeh":101.37022,"You Liang":29732.99,"Zhi Yuan":225.65561,"Pierce Anderson Fu":4.881391,"limmlingg":5021.487,"Jia Yee":0.41525346,"Lim Shun Xian":14.245682,"Miao Ling":1837.789,"Leow Yijin":3572.8513,"Tan Wang Leng":4651.76,"Damith C. Rajapakse":30681.217,"Ziyang":0.008474585,"Paul Tan":1661.9889,"Kelvin Lin":0.0,"Akshay Narayan":0.36628303,"Zhi Yuan Yong":9403.663,"Esilocke":116865.01,"Lin Han":12.8897295,"Jeffrey Goh":410023.3,"Thien Nguyen":373.72858,"Edmund Mok":280.96198,"Huang Chao":363.81818,"PierceAndy":298.90445,"ACER\\kyle":535849.7,"zzzzwen":10.983051,"m133225":3923.6106,"Eugene Peh":52.67603,"You Liang Lim":289080.97,"Charles Goh":1805511.2,"ndt":48.946144},"authorDisplayNameMap":{"Joshua Lee":"Joshua Lee","Martin Choo":"Martin Choo","VeryLazyBoy":"VeryLazyBoy","Wang Yiming":"Wang Yiming","chao1995":"chao1995","Sam-Mauris Yong":"Sam-Mauris Yong","MightyCupcakes":"MightyCupcakes","Jeremy Goh":"Jeremy Goh","clarencechee":"clarencechee","Ka Yi":"Ka Yi","eugenepeh":"eugenepeh","You Liang":"You Liang","Zhi Yuan":"Zhi Yuan","Pierce Anderson Fu":"Pierce Anderson Fu","limmlingg":"limmlingg","Jia Yee":"Jia Yee","Lim Shun Xian":"Lim Shun Xian","Miao Ling":"Miao Ling","Leow Yijin":"Leow Yijin","Tan Wang Leng":"Tan Wang Leng","Damith C. Rajapakse":"Damith C. Rajapakse","Ziyang":"Ziyang","Paul Tan":"Paul Tan","Kelvin Lin":"Kelvin Lin","Akshay Narayan":"Akshay Narayan","Zhi Yuan Yong":"Zhi Yuan Yong","Esilocke":"Esilocke","Lin Han":"Lin Han","Jeffrey Goh":"Jeffrey Goh","Thien Nguyen":"Thien Nguyen","Edmund Mok":"Edmund Mok","Huang Chao":"Huang Chao","PierceAndy":"PierceAndy","ACER\\kyle":"ACER\\kyle","zzzzwen":"zzzzwen","m133225":"m133225","Eugene Peh":"Eugene Peh","You Liang Lim":"You Liang Lim","Charles Goh":"Charles Goh","ndt":"ndt"}}
